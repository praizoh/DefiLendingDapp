{
	"id": "1f37052326455b97725efa75fa6aea61",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleNft.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\";\r\n\r\ncontract SimpleNFT is ERC721, Ownable {\r\n    uint256 private tokenIdCounter;\r\n\r\n    constructor(address initialOwner) ERC721(\"SimpleNFT\", \"SNFT\") Ownable(initialOwner) {\r\n        tokenIdCounter = 0;\r\n    }\r\n\r\n    function mint(address to) external {\r\n        uint256 newTokenId = tokenIdCounter;\r\n        _safeMint(to, newTokenId);\r\n        tokenIdCounter++;\r\n    }\r\n\r\n    function ownerOf(uint256 tokenId) override public view returns (address) {\r\n        return ERC721.ownerOf(tokenId);\r\n    }\r\n\r\n    function approve(address to, uint256 tokenId, address from) public {\r\n        address owner = ownerOf(tokenId);\r\n        require(to != owner, \"ERC721: approval to current owner\");\r\n\r\n        require(\r\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            \"ERC721: approve caller is not owner nor approved for all\"\r\n        );\r\n\r\n        _approve(to, tokenId, from, true);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 tokenId) public override {\r\n        // Check for approval or ownership\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public override {\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\r\n        _safeTransfer(from, to, tokenId, _data);\r\n    }\r\n\r\n    function _isApprovedOrOwner(address _address, uint256 tokenId) public view returns (bool) {\r\n        // require(exists(tokenId), \"ERC721: operator query for nonexistent token\");\r\n        address owner = ownerOf(tokenId);\r\n        return _address==owner || getApproved(tokenId) == _address;\r\n    }\r\n\r\n    // Public exists function to check if a token exists\r\n    // function exists(uint256 tokenId) public view returns (bool) {\r\n    //     return exists(tokenId);\r\n    // }\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/SimpleNft.sol": {
				"SimpleNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "_isApprovedOrOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleNft.sol\":343:2321  contract SimpleNFT is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SimpleNft.sol\":427:548  constructor(address initialOwner) ERC721(\"SimpleNFT\", \"SNFT\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SimpleNft.sol\":497:509  initialOwner */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x53696d706c654e46540000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x534e465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/SimpleNft.sol\":539:540  0 */\n  0x00\n    /* \"contracts/SimpleNft.sol\":522:536  tokenIdCounter */\n  0x07\n    /* \"contracts/SimpleNft.sol\":522:540  tokenIdCounter = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleNft.sol\":427:548  constructor(address initialOwner) ERC721(\"SimpleNFT\", \"SNFT\") Ownable(initialOwner) {... */\n  pop\n    /* \"contracts/SimpleNft.sol\":343:2321  contract SimpleNFT is ERC721, Ownable {... */\n  jump(tag_18)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x06\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SimpleNft.sol\":343:2321  contract SimpleNFT is ERC721, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleNft.sol\":343:2321  contract SimpleNFT is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a627842\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x6a627842\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x1271f09a\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x1271f09a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4cdc9549\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/SimpleNft.sol\":846:1259  function approve(address to, uint256 tokenId, address from) public {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/SimpleNft.sol\":1267:1553  function transferFrom(address from, address to, uint256 tokenId) public override {... */\n    tag_8:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/SimpleNft.sol\":1846:2142  function _isApprovedOrOwner(address _address, uint256 tokenId) public view returns (bool) {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleNft.sol\":716:838  function ownerOf(uint256 tokenId) override public view returns (address) {... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleNft.sol\":556:708  function mint(address to) external {... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/SimpleNft.sol\":1561:1838  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public override {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_102\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_103\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_108\n      jump\t// in\n    tag_109:\n      dup1\n      iszero\n      tag_110\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_111\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_110)\n    tag_111:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_112:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_112\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_114\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_114:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleNft.sol\":846:1259  function approve(address to, uint256 tokenId, address from) public {... */\n    tag_48:\n        /* \"contracts/SimpleNft.sol\":924:937  address owner */\n      0x00\n        /* \"contracts/SimpleNft.sol\":940:956  ownerOf(tokenId) */\n      tag_124\n        /* \"contracts/SimpleNft.sol\":948:955  tokenId */\n      dup4\n        /* \"contracts/SimpleNft.sol\":940:947  ownerOf */\n      tag_62\n        /* \"contracts/SimpleNft.sol\":940:956  ownerOf(tokenId) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/SimpleNft.sol\":924:956  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/SimpleNft.sol\":981:986  owner */\n      dup1\n        /* \"contracts/SimpleNft.sol\":975:986  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleNft.sol\":975:977  to */\n      dup5\n        /* \"contracts/SimpleNft.sol\":975:986  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SimpleNft.sol\":967:1024  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/SimpleNft.sol\":1075:1080  owner */\n      dup1\n        /* \"contracts/SimpleNft.sol\":1059:1080  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleNft.sol\":1059:1071  _msgSender() */\n      tag_128\n        /* \"contracts/SimpleNft.sol\":1059:1069  _msgSender */\n      tag_121\n        /* \"contracts/SimpleNft.sol\":1059:1071  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/SimpleNft.sol\":1059:1080  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SimpleNft.sol\":1059:1121  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_129\n      jumpi\n      pop\n        /* \"contracts/SimpleNft.sol\":1084:1121  isApprovedForAll(owner, _msgSender()) */\n      tag_130\n        /* \"contracts/SimpleNft.sol\":1101:1106  owner */\n      dup2\n        /* \"contracts/SimpleNft.sol\":1108:1120  _msgSender() */\n      tag_131\n        /* \"contracts/SimpleNft.sol\":1108:1118  _msgSender */\n      tag_121\n        /* \"contracts/SimpleNft.sol\":1108:1120  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/SimpleNft.sol\":1084:1100  isApprovedForAll */\n      tag_96\n        /* \"contracts/SimpleNft.sol\":1084:1121  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/SimpleNft.sol\":1059:1121  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_129:\n        /* \"contracts/SimpleNft.sol\":1037:1205  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/SimpleNft.sol\":1218:1251  _approve(to, tokenId, from, true) */\n      tag_135\n        /* \"contracts/SimpleNft.sol\":1227:1229  to */\n      dup5\n        /* \"contracts/SimpleNft.sol\":1231:1238  tokenId */\n      dup5\n        /* \"contracts/SimpleNft.sol\":1240:1244  from */\n      dup5\n        /* \"contracts/SimpleNft.sol\":1246:1250  true */\n      0x01\n        /* \"contracts/SimpleNft.sol\":1218:1226  _approve */\n      tag_136\n        /* \"contracts/SimpleNft.sol\":1218:1251  _approve(to, tokenId, from, true) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/SimpleNft.sol\":913:1259  {... */\n      pop\n        /* \"contracts/SimpleNft.sol\":846:1259  function approve(address to, uint256 tokenId, address from) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleNft.sol\":1267:1553  function transferFrom(address from, address to, uint256 tokenId) public override {... */\n    tag_52:\n        /* \"contracts/SimpleNft.sol\":1411:1452  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_138\n        /* \"contracts/SimpleNft.sol\":1430:1442  _msgSender() */\n      tag_139\n        /* \"contracts/SimpleNft.sol\":1430:1440  _msgSender */\n      tag_121\n        /* \"contracts/SimpleNft.sol\":1430:1442  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/SimpleNft.sol\":1444:1451  tokenId */\n      dup3\n        /* \"contracts/SimpleNft.sol\":1411:1429  _isApprovedOrOwner */\n      tag_58\n        /* \"contracts/SimpleNft.sol\":1411:1452  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/SimpleNft.sol\":1403:1506  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/SimpleNft.sol\":1517:1545  _transfer(from, to, tokenId) */\n      tag_143\n        /* \"contracts/SimpleNft.sol\":1527:1531  from */\n      dup4\n        /* \"contracts/SimpleNft.sol\":1533:1535  to */\n      dup4\n        /* \"contracts/SimpleNft.sol\":1537:1544  tokenId */\n      dup4\n        /* \"contracts/SimpleNft.sol\":1517:1526  _transfer */\n      tag_144\n        /* \"contracts/SimpleNft.sol\":1517:1545  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/SimpleNft.sol\":1267:1553  function transferFrom(address from, address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_146\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_146:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleNft.sol\":1846:2142  function _isApprovedOrOwner(address _address, uint256 tokenId) public view returns (bool) {... */\n    tag_58:\n        /* \"contracts/SimpleNft.sol\":1930:1934  bool */\n      0x00\n        /* \"contracts/SimpleNft.sol\":2033:2046  address owner */\n      dup1\n        /* \"contracts/SimpleNft.sol\":2049:2065  ownerOf(tokenId) */\n      tag_148\n        /* \"contracts/SimpleNft.sol\":2057:2064  tokenId */\n      dup4\n        /* \"contracts/SimpleNft.sol\":2049:2056  ownerOf */\n      tag_62\n        /* \"contracts/SimpleNft.sol\":2049:2065  ownerOf(tokenId) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/SimpleNft.sol\":2033:2065  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/SimpleNft.sol\":2093:2098  owner */\n      dup1\n        /* \"contracts/SimpleNft.sol\":2083:2098  _address==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleNft.sol\":2083:2091  _address */\n      dup5\n        /* \"contracts/SimpleNft.sol\":2083:2098  _address==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SimpleNft.sol\":2083:2134  _address==owner || getApproved(tokenId) == _address */\n      dup1\n      tag_149\n      jumpi\n      pop\n        /* \"contracts/SimpleNft.sol\":2126:2134  _address */\n      dup4\n        /* \"contracts/SimpleNft.sol\":2102:2134  getApproved(tokenId) == _address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleNft.sol\":2102:2122  getApproved(tokenId) */\n      tag_150\n        /* \"contracts/SimpleNft.sol\":2114:2121  tokenId */\n      dup5\n        /* \"contracts/SimpleNft.sol\":2102:2113  getApproved */\n      tag_38\n        /* \"contracts/SimpleNft.sol\":2102:2122  getApproved(tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/SimpleNft.sol\":2102:2134  getApproved(tokenId) == _address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SimpleNft.sol\":2083:2134  _address==owner || getApproved(tokenId) == _address */\n    tag_149:\n        /* \"contracts/SimpleNft.sol\":2076:2134  return _address==owner || getApproved(tokenId) == _address */\n      swap2\n      pop\n      pop\n        /* \"contracts/SimpleNft.sol\":1846:2142  function _isApprovedOrOwner(address _address, uint256 tokenId) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleNft.sol\":716:838  function ownerOf(uint256 tokenId) override public view returns (address) {... */\n    tag_62:\n        /* \"contracts/SimpleNft.sol\":780:787  address */\n      0x00\n        /* \"contracts/SimpleNft.sol\":807:830  ERC721.ownerOf(tokenId) */\n      tag_152\n        /* \"contracts/SimpleNft.sol\":822:829  tokenId */\n      dup3\n        /* \"contracts/SimpleNft.sol\":807:821  ERC721.ownerOf */\n      tag_153\n        /* \"contracts/SimpleNft.sol\":807:830  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/SimpleNft.sol\":800:830  return ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/SimpleNft.sol\":716:838  function ownerOf(uint256 tokenId) override public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SimpleNft.sol\":556:708  function mint(address to) external {... */\n    tag_67:\n        /* \"contracts/SimpleNft.sol\":602:620  uint256 newTokenId */\n      0x00\n        /* \"contracts/SimpleNft.sol\":623:637  tokenIdCounter */\n      sload(0x07)\n        /* \"contracts/SimpleNft.sol\":602:637  uint256 newTokenId = tokenIdCounter */\n      swap1\n      pop\n        /* \"contracts/SimpleNft.sol\":648:673  _safeMint(to, newTokenId) */\n      tag_155\n        /* \"contracts/SimpleNft.sol\":658:660  to */\n      dup3\n        /* \"contracts/SimpleNft.sol\":662:672  newTokenId */\n      dup3\n        /* \"contracts/SimpleNft.sol\":648:657  _safeMint */\n      tag_156\n        /* \"contracts/SimpleNft.sol\":648:673  _safeMint(to, newTokenId) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/SimpleNft.sol\":684:698  tokenIdCounter */\n      0x07\n      0x00\n        /* \"contracts/SimpleNft.sol\":684:700  tokenIdCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/SimpleNft.sol\":591:708  {... */\n      pop\n        /* \"contracts/SimpleNft.sol\":556:708  function mint(address to) external {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_160:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_163\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_164\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_166\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_108\n      jump\t// in\n    tag_170:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_108\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_176\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_177\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_178\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_176:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleNft.sol\":1561:1838  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public override {... */\n    tag_88:\n        /* \"contracts/SimpleNft.sol\":1685:1726  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_180\n        /* \"contracts/SimpleNft.sol\":1704:1716  _msgSender() */\n      tag_181\n        /* \"contracts/SimpleNft.sol\":1704:1714  _msgSender */\n      tag_121\n        /* \"contracts/SimpleNft.sol\":1704:1716  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/SimpleNft.sol\":1718:1725  tokenId */\n      dup4\n        /* \"contracts/SimpleNft.sol\":1685:1703  _isApprovedOrOwner */\n      tag_58\n        /* \"contracts/SimpleNft.sol\":1685:1726  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/SimpleNft.sol\":1677:1780  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_142\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/SimpleNft.sol\":1791:1830  _safeTransfer(from, to, tokenId, _data) */\n      tag_184\n        /* \"contracts/SimpleNft.sol\":1805:1809  from */\n      dup5\n        /* \"contracts/SimpleNft.sol\":1811:1813  to */\n      dup5\n        /* \"contracts/SimpleNft.sol\":1815:1822  tokenId */\n      dup5\n        /* \"contracts/SimpleNft.sol\":1824:1829  _data */\n      dup5\n        /* \"contracts/SimpleNft.sol\":1791:1804  _safeTransfer */\n      tag_185\n        /* \"contracts/SimpleNft.sol\":1791:1830  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/SimpleNft.sol\":1561:1838  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_187\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_187:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_188\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_189\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_190\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_191)\n    tag_190:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_192\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_193\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_192:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_194\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_191:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_164\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_200:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_202\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_202:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_205\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_206\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_205:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_207:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_121:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_212\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_212:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_214\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_214:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_216\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_219\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_219:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_218:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_220:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_222:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_215:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12013:12473  function _transfer(address from, address to, uint256 tokenId) internal {... */\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12112:12113  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12098:12114  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12098:12100  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12098:12114  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12094:12181  if (to == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12167:12168  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12137:12170  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12094:12181  if (to == address(0)) {... */\n    tag_224:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12190:12211  address previousOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12214:12246  _update(to, tokenId, address(0)) */\n      tag_226\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12222:12224  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12226:12233  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12243:12244  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12214:12221  _update */\n      tag_227\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12214:12246  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_226:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12190:12246  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12285:12286  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12260:12287  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12260:12273  previousOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12260:12287  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12256:12467  if (previousOwner == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12333:12340  tokenId */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12310:12341  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12256:12467  if (previousOwner == address(0)) {... */\n    tag_228:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12379:12383  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12362:12383  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12362:12375  previousOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12362:12383  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12358:12467  if (previousOwner != from) {... */\n      tag_231\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12427:12431  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12433:12440  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12442:12455  previousOwner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12406:12456  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12358:12467  if (previousOwner != from) {... */\n    tag_231:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12084:12473  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":12013:12473  function _transfer(address from, address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_153:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_235\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_235:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_237\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_238\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_237:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_164:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_240\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_240:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_241\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_241:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_242\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_243\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_243:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_242:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x06\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_178:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_247\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_247:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_249\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13771:13975  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_185:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13883:13911  _transfer(from, to, tokenId) */\n      tag_251\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13893:13897  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13899:13901  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13903:13910  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13883:13892  _transfer */\n      tag_144\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13883:13911  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_251:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13921:13968  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_252\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13944:13948  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13950:13952  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13954:13961  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13963:13967  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13921:13943  _checkOnERC721Received */\n      tag_253\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13921:13968  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_252:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":13771:13975  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_189:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_193:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_257\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_256:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_258\n      jumpi\n      tag_259\n      tag_260\n      jump\t// in\n    tag_259:\n    tag_258:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_261\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_261:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_262:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_264\n      jumpi\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n    tag_264:\n      div\n      swap5\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_262\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_263:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_206:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_227:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_270\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_206\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_270:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_271\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_272\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_273\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_272:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_271:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_274\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_275\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_275:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_274:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_276\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_276:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_238:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_278\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_279\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_278:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_280\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_253\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_280:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_253:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_283\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_283:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_286\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_287\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      0x01\n    tag_286:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_289\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_294\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_293)\n    tag_294:\n      0x60\n      swap2\n      pop\n    tag_293:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_295\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_295:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_289:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_299\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_299:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_282:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_257:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_302\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_303\n      jumpi\n      tag_304\n      tag_266\n      jump\t// in\n    tag_304:\n    tag_303:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_302:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_305\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_306\n      jumpi\n      tag_307\n      tag_266\n      jump\t// in\n    tag_307:\n    tag_306:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_305:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_308\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_309\n      jumpi\n      tag_310\n      tag_266\n      jump\t// in\n    tag_310:\n    tag_309:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_308:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_311\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_312\n      jumpi\n      tag_313\n      tag_266\n      jump\t// in\n    tag_313:\n    tag_312:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_311:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_314\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_315\n      jumpi\n      tag_316\n      tag_266\n      jump\t// in\n    tag_316:\n    tag_315:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_314:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_317\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_318\n      jumpi\n      tag_319\n      tag_266\n      jump\t// in\n    tag_319:\n    tag_318:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_317:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_320\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_320:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_273:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_322\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_323\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_322:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_324\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_325:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_324:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_279:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_331\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_331:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_333\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_227\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_333:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_334\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_334:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_323:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_337\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_338\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_339\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_339:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_338:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_340\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_341\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_341:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_340:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_337:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_342:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_343:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_344:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_345:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_346:\n        /* \"#utility.yul\":561:584   */\n      tag_394\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_345\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_395:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_347:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_397\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_346\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_400\n      tag_343\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":833:952   */\n    tag_399:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_401\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_347\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_348:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_349:\n        /* \"#utility.yul\":1268:1289   */\n      tag_404\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_348\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_30:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_406\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_349\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_350:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_351:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_352:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_353:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_354:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_412\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_350\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2222:2293   */\n      tag_413\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_351\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_414\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_352\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2392:2421   */\n      tag_415\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_353\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_34:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_417\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_354\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_355:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_356:\n        /* \"#utility.yul\":2909:2933   */\n      tag_420\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_355\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_421:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_357:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_423\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_356\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_37:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_426\n      tag_343\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3185:3304   */\n    tag_425:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_427\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_357\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_358:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_359:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_430\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_358\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_360:\n        /* \"#utility.yul\":3765:3789   */\n      tag_432\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_359\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_40:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_434\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_360\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_361:\n        /* \"#utility.yul\":4103:4127   */\n      tag_436\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_359\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_437:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_362:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_439\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_361\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_43:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_442\n      tag_343\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4396:4515   */\n    tag_441:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_443\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_362\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_444\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_357\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_47:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_447\n      tag_343\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4893:5012   */\n    tag_446:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_448\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_362\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_449\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_357\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_450\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_362\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:6027   */\n    tag_51:\n        /* \"#utility.yul\":5485:5491   */\n      0x00\n        /* \"#utility.yul\":5493:5499   */\n      dup1\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5550:5552   */\n      0x60\n        /* \"#utility.yul\":5538:5547   */\n      dup5\n        /* \"#utility.yul\":5529:5536   */\n      dup7\n        /* \"#utility.yul\":5525:5548   */\n      sub\n        /* \"#utility.yul\":5521:5553   */\n      slt\n        /* \"#utility.yul\":5518:5637   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":5556:5635   */\n      tag_453\n      tag_343\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5518:5637   */\n    tag_452:\n        /* \"#utility.yul\":5676:5677   */\n      0x00\n        /* \"#utility.yul\":5701:5754   */\n      tag_454\n        /* \"#utility.yul\":5746:5753   */\n      dup7\n        /* \"#utility.yul\":5737:5743   */\n      dup3\n        /* \"#utility.yul\":5726:5735   */\n      dup8\n        /* \"#utility.yul\":5722:5744   */\n      add\n        /* \"#utility.yul\":5701:5754   */\n      tag_362\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5691:5754   */\n      swap4\n      pop\n        /* \"#utility.yul\":5647:5764   */\n      pop\n        /* \"#utility.yul\":5803:5805   */\n      0x20\n        /* \"#utility.yul\":5829:5882   */\n      tag_455\n        /* \"#utility.yul\":5874:5881   */\n      dup7\n        /* \"#utility.yul\":5865:5871   */\n      dup3\n        /* \"#utility.yul\":5854:5863   */\n      dup8\n        /* \"#utility.yul\":5850:5872   */\n      add\n        /* \"#utility.yul\":5829:5882   */\n      tag_362\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5819:5882   */\n      swap3\n      pop\n        /* \"#utility.yul\":5774:5892   */\n      pop\n        /* \"#utility.yul\":5931:5933   */\n      0x40\n        /* \"#utility.yul\":5957:6010   */\n      tag_456\n        /* \"#utility.yul\":6002:6009   */\n      dup7\n        /* \"#utility.yul\":5993:5999   */\n      dup3\n        /* \"#utility.yul\":5982:5991   */\n      dup8\n        /* \"#utility.yul\":5978:6000   */\n      add\n        /* \"#utility.yul\":5957:6010   */\n      tag_357\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5947:6010   */\n      swap2\n      pop\n        /* \"#utility.yul\":5902:6020   */\n      pop\n        /* \"#utility.yul\":5408:6027   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6033:6362   */\n    tag_66:\n        /* \"#utility.yul\":6092:6098   */\n      0x00\n        /* \"#utility.yul\":6141:6143   */\n      0x20\n        /* \"#utility.yul\":6129:6138   */\n      dup3\n        /* \"#utility.yul\":6120:6127   */\n      dup5\n        /* \"#utility.yul\":6116:6139   */\n      sub\n        /* \"#utility.yul\":6112:6144   */\n      slt\n        /* \"#utility.yul\":6109:6228   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":6147:6226   */\n      tag_459\n      tag_343\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":6109:6228   */\n    tag_458:\n        /* \"#utility.yul\":6267:6268   */\n      0x00\n        /* \"#utility.yul\":6292:6345   */\n      tag_460\n        /* \"#utility.yul\":6337:6344   */\n      dup5\n        /* \"#utility.yul\":6328:6334   */\n      dup3\n        /* \"#utility.yul\":6317:6326   */\n      dup6\n        /* \"#utility.yul\":6313:6335   */\n      add\n        /* \"#utility.yul\":6292:6345   */\n      tag_362\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6282:6345   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6355   */\n      pop\n        /* \"#utility.yul\":6033:6362   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6368:6486   */\n    tag_363:\n        /* \"#utility.yul\":6455:6479   */\n      tag_462\n        /* \"#utility.yul\":6473:6478   */\n      dup2\n        /* \"#utility.yul\":6455:6479   */\n      tag_355\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6450:6453   */\n      dup3\n        /* \"#utility.yul\":6443:6480   */\n      mstore\n        /* \"#utility.yul\":6368:6486   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6492:6714   */\n    tag_72:\n        /* \"#utility.yul\":6585:6589   */\n      0x00\n        /* \"#utility.yul\":6623:6625   */\n      0x20\n        /* \"#utility.yul\":6612:6621   */\n      dup3\n        /* \"#utility.yul\":6608:6626   */\n      add\n        /* \"#utility.yul\":6600:6626   */\n      swap1\n      pop\n        /* \"#utility.yul\":6636:6707   */\n      tag_464\n        /* \"#utility.yul\":6704:6705   */\n      0x00\n        /* \"#utility.yul\":6693:6702   */\n      dup4\n        /* \"#utility.yul\":6689:6706   */\n      add\n        /* \"#utility.yul\":6680:6686   */\n      dup5\n        /* \"#utility.yul\":6636:6707   */\n      tag_363\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6492:6714   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6720:6836   */\n    tag_364:\n        /* \"#utility.yul\":6790:6811   */\n      tag_466\n        /* \"#utility.yul\":6805:6810   */\n      dup2\n        /* \"#utility.yul\":6790:6811   */\n      tag_348\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6783:6788   */\n      dup2\n        /* \"#utility.yul\":6780:6812   */\n      eq\n        /* \"#utility.yul\":6770:6830   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":6826:6827   */\n      0x00\n        /* \"#utility.yul\":6823:6824   */\n      dup1\n        /* \"#utility.yul\":6816:6828   */\n      revert\n        /* \"#utility.yul\":6770:6830   */\n    tag_467:\n        /* \"#utility.yul\":6720:6836   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6842:6975   */\n    tag_365:\n        /* \"#utility.yul\":6885:6890   */\n      0x00\n        /* \"#utility.yul\":6923:6929   */\n      dup2\n        /* \"#utility.yul\":6910:6930   */\n      calldataload\n        /* \"#utility.yul\":6901:6930   */\n      swap1\n      pop\n        /* \"#utility.yul\":6939:6969   */\n      tag_469\n        /* \"#utility.yul\":6963:6968   */\n      dup2\n        /* \"#utility.yul\":6939:6969   */\n      tag_364\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6842:6975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6981:7449   */\n    tag_83:\n        /* \"#utility.yul\":7046:7052   */\n      0x00\n        /* \"#utility.yul\":7054:7060   */\n      dup1\n        /* \"#utility.yul\":7103:7105   */\n      0x40\n        /* \"#utility.yul\":7091:7100   */\n      dup4\n        /* \"#utility.yul\":7082:7089   */\n      dup6\n        /* \"#utility.yul\":7078:7101   */\n      sub\n        /* \"#utility.yul\":7074:7106   */\n      slt\n        /* \"#utility.yul\":7071:7190   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7109:7188   */\n      tag_472\n      tag_343\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7071:7190   */\n    tag_471:\n        /* \"#utility.yul\":7229:7230   */\n      0x00\n        /* \"#utility.yul\":7254:7307   */\n      tag_473\n        /* \"#utility.yul\":7299:7306   */\n      dup6\n        /* \"#utility.yul\":7290:7296   */\n      dup3\n        /* \"#utility.yul\":7279:7288   */\n      dup7\n        /* \"#utility.yul\":7275:7297   */\n      add\n        /* \"#utility.yul\":7254:7307   */\n      tag_362\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7244:7307   */\n      swap3\n      pop\n        /* \"#utility.yul\":7200:7317   */\n      pop\n        /* \"#utility.yul\":7356:7358   */\n      0x20\n        /* \"#utility.yul\":7382:7432   */\n      tag_474\n        /* \"#utility.yul\":7424:7431   */\n      dup6\n        /* \"#utility.yul\":7415:7421   */\n      dup3\n        /* \"#utility.yul\":7404:7413   */\n      dup7\n        /* \"#utility.yul\":7400:7422   */\n      add\n        /* \"#utility.yul\":7382:7432   */\n      tag_365\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7372:7432   */\n      swap2\n      pop\n        /* \"#utility.yul\":7327:7442   */\n      pop\n        /* \"#utility.yul\":6981:7449   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7455:7572   */\n    tag_366:\n        /* \"#utility.yul\":7564:7565   */\n      0x00\n        /* \"#utility.yul\":7561:7562   */\n      dup1\n        /* \"#utility.yul\":7554:7566   */\n      revert\n        /* \"#utility.yul\":7578:7695   */\n    tag_367:\n        /* \"#utility.yul\":7687:7688   */\n      0x00\n        /* \"#utility.yul\":7684:7685   */\n      dup1\n        /* \"#utility.yul\":7677:7689   */\n      revert\n        /* \"#utility.yul\":7701:7881   */\n    tag_260:\n        /* \"#utility.yul\":7749:7826   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7746:7747   */\n      0x00\n        /* \"#utility.yul\":7739:7827   */\n      mstore\n        /* \"#utility.yul\":7846:7850   */\n      0x41\n        /* \"#utility.yul\":7843:7844   */\n      0x04\n        /* \"#utility.yul\":7836:7851   */\n      mstore\n        /* \"#utility.yul\":7870:7874   */\n      0x24\n        /* \"#utility.yul\":7867:7868   */\n      0x00\n        /* \"#utility.yul\":7860:7875   */\n      revert\n        /* \"#utility.yul\":7887:8168   */\n    tag_368:\n        /* \"#utility.yul\":7970:7997   */\n      tag_479\n        /* \"#utility.yul\":7992:7996   */\n      dup3\n        /* \"#utility.yul\":7970:7997   */\n      tag_353\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7962:7968   */\n      dup2\n        /* \"#utility.yul\":7958:7998   */\n      add\n        /* \"#utility.yul\":8100:8106   */\n      dup2\n        /* \"#utility.yul\":8088:8098   */\n      dup2\n        /* \"#utility.yul\":8085:8107   */\n      lt\n        /* \"#utility.yul\":8064:8082   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8052:8062   */\n      dup3\n        /* \"#utility.yul\":8049:8083   */\n      gt\n        /* \"#utility.yul\":8046:8108   */\n      or\n        /* \"#utility.yul\":8043:8131   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":8111:8129   */\n      tag_481\n      tag_260\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8043:8131   */\n    tag_480:\n        /* \"#utility.yul\":8151:8161   */\n      dup1\n        /* \"#utility.yul\":8147:8149   */\n      0x40\n        /* \"#utility.yul\":8140:8162   */\n      mstore\n        /* \"#utility.yul\":7930:8168   */\n      pop\n        /* \"#utility.yul\":7887:8168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8174:8303   */\n    tag_369:\n        /* \"#utility.yul\":8208:8214   */\n      0x00\n        /* \"#utility.yul\":8235:8255   */\n      tag_483\n      tag_342\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8225:8255   */\n      swap1\n      pop\n        /* \"#utility.yul\":8264:8297   */\n      tag_484\n        /* \"#utility.yul\":8292:8296   */\n      dup3\n        /* \"#utility.yul\":8284:8290   */\n      dup3\n        /* \"#utility.yul\":8264:8297   */\n      tag_368\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8174:8303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8309:8616   */\n    tag_370:\n        /* \"#utility.yul\":8370:8374   */\n      0x00\n        /* \"#utility.yul\":8460:8478   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8452:8458   */\n      dup3\n        /* \"#utility.yul\":8449:8479   */\n      gt\n        /* \"#utility.yul\":8446:8502   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":8482:8500   */\n      tag_487\n      tag_260\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":8446:8502   */\n    tag_486:\n        /* \"#utility.yul\":8520:8549   */\n      tag_488\n        /* \"#utility.yul\":8542:8548   */\n      dup3\n        /* \"#utility.yul\":8520:8549   */\n      tag_353\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8512:8549   */\n      swap1\n      pop\n        /* \"#utility.yul\":8604:8608   */\n      0x20\n        /* \"#utility.yul\":8598:8602   */\n      dup2\n        /* \"#utility.yul\":8594:8609   */\n      add\n        /* \"#utility.yul\":8586:8609   */\n      swap1\n      pop\n        /* \"#utility.yul\":8309:8616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8622:8770   */\n    tag_371:\n        /* \"#utility.yul\":8720:8726   */\n      dup3\n        /* \"#utility.yul\":8715:8718   */\n      dup2\n        /* \"#utility.yul\":8710:8713   */\n      dup4\n        /* \"#utility.yul\":8697:8727   */\n      calldatacopy\n        /* \"#utility.yul\":8761:8762   */\n      0x00\n        /* \"#utility.yul\":8752:8758   */\n      dup4\n        /* \"#utility.yul\":8747:8750   */\n      dup4\n        /* \"#utility.yul\":8743:8759   */\n      add\n        /* \"#utility.yul\":8736:8763   */\n      mstore\n        /* \"#utility.yul\":8622:8770   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8776:9199   */\n    tag_372:\n        /* \"#utility.yul\":8853:8858   */\n      0x00\n        /* \"#utility.yul\":8878:8943   */\n      tag_491\n        /* \"#utility.yul\":8894:8942   */\n      tag_492\n        /* \"#utility.yul\":8935:8941   */\n      dup5\n        /* \"#utility.yul\":8894:8942   */\n      tag_370\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8878:8943   */\n      tag_369\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8869:8943   */\n      swap1\n      pop\n        /* \"#utility.yul\":8966:8972   */\n      dup3\n        /* \"#utility.yul\":8959:8964   */\n      dup2\n        /* \"#utility.yul\":8952:8973   */\n      mstore\n        /* \"#utility.yul\":9004:9008   */\n      0x20\n        /* \"#utility.yul\":8997:9002   */\n      dup2\n        /* \"#utility.yul\":8993:9009   */\n      add\n        /* \"#utility.yul\":9042:9045   */\n      dup5\n        /* \"#utility.yul\":9033:9039   */\n      dup5\n        /* \"#utility.yul\":9028:9031   */\n      dup5\n        /* \"#utility.yul\":9024:9040   */\n      add\n        /* \"#utility.yul\":9021:9046   */\n      gt\n        /* \"#utility.yul\":9018:9130   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":9049:9128   */\n      tag_494\n      tag_367\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9018:9130   */\n    tag_493:\n        /* \"#utility.yul\":9139:9193   */\n      tag_495\n        /* \"#utility.yul\":9186:9192   */\n      dup5\n        /* \"#utility.yul\":9181:9184   */\n      dup3\n        /* \"#utility.yul\":9176:9179   */\n      dup6\n        /* \"#utility.yul\":9139:9193   */\n      tag_371\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8859:9199   */\n      pop\n        /* \"#utility.yul\":8776:9199   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9218:9556   */\n    tag_373:\n        /* \"#utility.yul\":9273:9278   */\n      0x00\n        /* \"#utility.yul\":9322:9325   */\n      dup3\n        /* \"#utility.yul\":9315:9319   */\n      0x1f\n        /* \"#utility.yul\":9307:9313   */\n      dup4\n        /* \"#utility.yul\":9303:9320   */\n      add\n        /* \"#utility.yul\":9299:9326   */\n      slt\n        /* \"#utility.yul\":9289:9411   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":9330:9409   */\n      tag_498\n      tag_366\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9289:9411   */\n    tag_497:\n        /* \"#utility.yul\":9447:9453   */\n      dup2\n        /* \"#utility.yul\":9434:9454   */\n      calldataload\n        /* \"#utility.yul\":9472:9550   */\n      tag_499\n        /* \"#utility.yul\":9546:9549   */\n      dup5\n        /* \"#utility.yul\":9538:9544   */\n      dup3\n        /* \"#utility.yul\":9531:9535   */\n      0x20\n        /* \"#utility.yul\":9523:9529   */\n      dup7\n        /* \"#utility.yul\":9519:9536   */\n      add\n        /* \"#utility.yul\":9472:9550   */\n      tag_372\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9463:9550   */\n      swap2\n      pop\n        /* \"#utility.yul\":9279:9556   */\n      pop\n        /* \"#utility.yul\":9218:9556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9562:10505   */\n    tag_87:\n        /* \"#utility.yul\":9657:9663   */\n      0x00\n        /* \"#utility.yul\":9665:9671   */\n      dup1\n        /* \"#utility.yul\":9673:9679   */\n      0x00\n        /* \"#utility.yul\":9681:9687   */\n      dup1\n        /* \"#utility.yul\":9730:9733   */\n      0x80\n        /* \"#utility.yul\":9718:9727   */\n      dup6\n        /* \"#utility.yul\":9709:9716   */\n      dup8\n        /* \"#utility.yul\":9705:9728   */\n      sub\n        /* \"#utility.yul\":9701:9734   */\n      slt\n        /* \"#utility.yul\":9698:9818   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":9737:9816   */\n      tag_502\n      tag_343\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9698:9818   */\n    tag_501:\n        /* \"#utility.yul\":9857:9858   */\n      0x00\n        /* \"#utility.yul\":9882:9935   */\n      tag_503\n        /* \"#utility.yul\":9927:9934   */\n      dup8\n        /* \"#utility.yul\":9918:9924   */\n      dup3\n        /* \"#utility.yul\":9907:9916   */\n      dup9\n        /* \"#utility.yul\":9903:9925   */\n      add\n        /* \"#utility.yul\":9882:9935   */\n      tag_362\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9872:9935   */\n      swap5\n      pop\n        /* \"#utility.yul\":9828:9945   */\n      pop\n        /* \"#utility.yul\":9984:9986   */\n      0x20\n        /* \"#utility.yul\":10010:10063   */\n      tag_504\n        /* \"#utility.yul\":10055:10062   */\n      dup8\n        /* \"#utility.yul\":10046:10052   */\n      dup3\n        /* \"#utility.yul\":10035:10044   */\n      dup9\n        /* \"#utility.yul\":10031:10053   */\n      add\n        /* \"#utility.yul\":10010:10063   */\n      tag_362\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":10000:10063   */\n      swap4\n      pop\n        /* \"#utility.yul\":9955:10073   */\n      pop\n        /* \"#utility.yul\":10112:10114   */\n      0x40\n        /* \"#utility.yul\":10138:10191   */\n      tag_505\n        /* \"#utility.yul\":10183:10190   */\n      dup8\n        /* \"#utility.yul\":10174:10180   */\n      dup3\n        /* \"#utility.yul\":10163:10172   */\n      dup9\n        /* \"#utility.yul\":10159:10181   */\n      add\n        /* \"#utility.yul\":10138:10191   */\n      tag_357\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10128:10191   */\n      swap3\n      pop\n        /* \"#utility.yul\":10083:10201   */\n      pop\n        /* \"#utility.yul\":10268:10270   */\n      0x60\n        /* \"#utility.yul\":10257:10266   */\n      dup6\n        /* \"#utility.yul\":10253:10271   */\n      add\n        /* \"#utility.yul\":10240:10272   */\n      calldataload\n        /* \"#utility.yul\":10299:10317   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10291:10297   */\n      dup2\n        /* \"#utility.yul\":10288:10318   */\n      gt\n        /* \"#utility.yul\":10285:10402   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":10321:10400   */\n      tag_507\n      tag_344\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10285:10402   */\n    tag_506:\n        /* \"#utility.yul\":10426:10488   */\n      tag_508\n        /* \"#utility.yul\":10480:10487   */\n      dup8\n        /* \"#utility.yul\":10471:10477   */\n      dup3\n        /* \"#utility.yul\":10460:10469   */\n      dup9\n        /* \"#utility.yul\":10456:10478   */\n      add\n        /* \"#utility.yul\":10426:10488   */\n      tag_373\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10416:10488   */\n      swap2\n      pop\n        /* \"#utility.yul\":10211:10498   */\n      pop\n        /* \"#utility.yul\":9562:10505   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10511:10985   */\n    tag_95:\n        /* \"#utility.yul\":10579:10585   */\n      0x00\n        /* \"#utility.yul\":10587:10593   */\n      dup1\n        /* \"#utility.yul\":10636:10638   */\n      0x40\n        /* \"#utility.yul\":10624:10633   */\n      dup4\n        /* \"#utility.yul\":10615:10622   */\n      dup6\n        /* \"#utility.yul\":10611:10634   */\n      sub\n        /* \"#utility.yul\":10607:10639   */\n      slt\n        /* \"#utility.yul\":10604:10723   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":10642:10721   */\n      tag_511\n      tag_343\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10604:10723   */\n    tag_510:\n        /* \"#utility.yul\":10762:10763   */\n      0x00\n        /* \"#utility.yul\":10787:10840   */\n      tag_512\n        /* \"#utility.yul\":10832:10839   */\n      dup6\n        /* \"#utility.yul\":10823:10829   */\n      dup3\n        /* \"#utility.yul\":10812:10821   */\n      dup7\n        /* \"#utility.yul\":10808:10830   */\n      add\n        /* \"#utility.yul\":10787:10840   */\n      tag_362\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10777:10840   */\n      swap3\n      pop\n        /* \"#utility.yul\":10733:10850   */\n      pop\n        /* \"#utility.yul\":10889:10891   */\n      0x20\n        /* \"#utility.yul\":10915:10968   */\n      tag_513\n        /* \"#utility.yul\":10960:10967   */\n      dup6\n        /* \"#utility.yul\":10951:10957   */\n      dup3\n        /* \"#utility.yul\":10940:10949   */\n      dup7\n        /* \"#utility.yul\":10936:10958   */\n      add\n        /* \"#utility.yul\":10915:10968   */\n      tag_362\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10905:10968   */\n      swap2\n      pop\n        /* \"#utility.yul\":10860:10978   */\n      pop\n        /* \"#utility.yul\":10511:10985   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10991:11171   */\n    tag_374:\n        /* \"#utility.yul\":11039:11116   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11036:11037   */\n      0x00\n        /* \"#utility.yul\":11029:11117   */\n      mstore\n        /* \"#utility.yul\":11136:11140   */\n      0x22\n        /* \"#utility.yul\":11133:11134   */\n      0x04\n        /* \"#utility.yul\":11126:11141   */\n      mstore\n        /* \"#utility.yul\":11160:11164   */\n      0x24\n        /* \"#utility.yul\":11157:11158   */\n      0x00\n        /* \"#utility.yul\":11150:11165   */\n      revert\n        /* \"#utility.yul\":11177:11497   */\n    tag_108:\n        /* \"#utility.yul\":11221:11227   */\n      0x00\n        /* \"#utility.yul\":11258:11259   */\n      0x02\n        /* \"#utility.yul\":11252:11256   */\n      dup3\n        /* \"#utility.yul\":11248:11260   */\n      div\n        /* \"#utility.yul\":11238:11260   */\n      swap1\n      pop\n        /* \"#utility.yul\":11305:11306   */\n      0x01\n        /* \"#utility.yul\":11299:11303   */\n      dup3\n        /* \"#utility.yul\":11295:11307   */\n      and\n        /* \"#utility.yul\":11326:11344   */\n      dup1\n        /* \"#utility.yul\":11316:11397   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":11382:11386   */\n      0x7f\n        /* \"#utility.yul\":11374:11380   */\n      dup3\n        /* \"#utility.yul\":11370:11387   */\n      and\n        /* \"#utility.yul\":11360:11387   */\n      swap2\n      pop\n        /* \"#utility.yul\":11316:11397   */\n    tag_516:\n        /* \"#utility.yul\":11444:11446   */\n      0x20\n        /* \"#utility.yul\":11436:11442   */\n      dup3\n        /* \"#utility.yul\":11433:11447   */\n      lt\n        /* \"#utility.yul\":11413:11431   */\n      dup2\n        /* \"#utility.yul\":11410:11448   */\n      sub\n        /* \"#utility.yul\":11407:11491   */\n      tag_517\n      jumpi\n        /* \"#utility.yul\":11463:11481   */\n      tag_518\n      tag_374\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11407:11491   */\n    tag_517:\n        /* \"#utility.yul\":11228:11497   */\n      pop\n        /* \"#utility.yul\":11177:11497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11503:11723   */\n    tag_375:\n        /* \"#utility.yul\":11643:11677   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11639:11640   */\n      0x00\n        /* \"#utility.yul\":11631:11637   */\n      dup3\n        /* \"#utility.yul\":11627:11641   */\n      add\n        /* \"#utility.yul\":11620:11678   */\n      mstore\n        /* \"#utility.yul\":11712:11715   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11707:11709   */\n      0x20\n        /* \"#utility.yul\":11699:11705   */\n      dup3\n        /* \"#utility.yul\":11695:11710   */\n      add\n        /* \"#utility.yul\":11688:11716   */\n      mstore\n        /* \"#utility.yul\":11503:11723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11729:12095   */\n    tag_376:\n        /* \"#utility.yul\":11871:11874   */\n      0x00\n        /* \"#utility.yul\":11892:11959   */\n      tag_521\n        /* \"#utility.yul\":11956:11958   */\n      0x21\n        /* \"#utility.yul\":11951:11954   */\n      dup4\n        /* \"#utility.yul\":11892:11959   */\n      tag_351\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11885:11959   */\n      swap2\n      pop\n        /* \"#utility.yul\":11968:12061   */\n      tag_522\n        /* \"#utility.yul\":12057:12060   */\n      dup3\n        /* \"#utility.yul\":11968:12061   */\n      tag_375\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":12086:12088   */\n      0x40\n        /* \"#utility.yul\":12081:12084   */\n      dup3\n        /* \"#utility.yul\":12077:12089   */\n      add\n        /* \"#utility.yul\":12070:12089   */\n      swap1\n      pop\n        /* \"#utility.yul\":11729:12095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12101:12520   */\n    tag_127:\n        /* \"#utility.yul\":12267:12271   */\n      0x00\n        /* \"#utility.yul\":12305:12307   */\n      0x20\n        /* \"#utility.yul\":12294:12303   */\n      dup3\n        /* \"#utility.yul\":12290:12308   */\n      add\n        /* \"#utility.yul\":12282:12308   */\n      swap1\n      pop\n        /* \"#utility.yul\":12354:12363   */\n      dup2\n        /* \"#utility.yul\":12348:12352   */\n      dup2\n        /* \"#utility.yul\":12344:12364   */\n      sub\n        /* \"#utility.yul\":12340:12341   */\n      0x00\n        /* \"#utility.yul\":12329:12338   */\n      dup4\n        /* \"#utility.yul\":12325:12342   */\n      add\n        /* \"#utility.yul\":12318:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12513   */\n      tag_524\n        /* \"#utility.yul\":12508:12512   */\n      dup2\n        /* \"#utility.yul\":12382:12513   */\n      tag_376\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":12374:12513   */\n      swap1\n      pop\n        /* \"#utility.yul\":12101:12520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12526:12769   */\n    tag_377:\n        /* \"#utility.yul\":12666:12700   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":12662:12663   */\n      0x00\n        /* \"#utility.yul\":12654:12660   */\n      dup3\n        /* \"#utility.yul\":12650:12664   */\n      add\n        /* \"#utility.yul\":12643:12701   */\n      mstore\n        /* \"#utility.yul\":12735:12761   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":12730:12732   */\n      0x20\n        /* \"#utility.yul\":12722:12728   */\n      dup3\n        /* \"#utility.yul\":12718:12733   */\n      add\n        /* \"#utility.yul\":12711:12762   */\n      mstore\n        /* \"#utility.yul\":12526:12769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12775:13141   */\n    tag_378:\n        /* \"#utility.yul\":12917:12920   */\n      0x00\n        /* \"#utility.yul\":12938:13005   */\n      tag_527\n        /* \"#utility.yul\":13002:13004   */\n      0x38\n        /* \"#utility.yul\":12997:13000   */\n      dup4\n        /* \"#utility.yul\":12938:13005   */\n      tag_351\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":12931:13005   */\n      swap2\n      pop\n        /* \"#utility.yul\":13014:13107   */\n      tag_528\n        /* \"#utility.yul\":13103:13106   */\n      dup3\n        /* \"#utility.yul\":13014:13107   */\n      tag_377\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":13132:13134   */\n      0x40\n        /* \"#utility.yul\":13127:13130   */\n      dup3\n        /* \"#utility.yul\":13123:13135   */\n      add\n        /* \"#utility.yul\":13116:13135   */\n      swap1\n      pop\n        /* \"#utility.yul\":12775:13141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13147:13566   */\n    tag_134:\n        /* \"#utility.yul\":13313:13317   */\n      0x00\n        /* \"#utility.yul\":13351:13353   */\n      0x20\n        /* \"#utility.yul\":13340:13349   */\n      dup3\n        /* \"#utility.yul\":13336:13354   */\n      add\n        /* \"#utility.yul\":13328:13354   */\n      swap1\n      pop\n        /* \"#utility.yul\":13400:13409   */\n      dup2\n        /* \"#utility.yul\":13394:13398   */\n      dup2\n        /* \"#utility.yul\":13390:13410   */\n      sub\n        /* \"#utility.yul\":13386:13387   */\n      0x00\n        /* \"#utility.yul\":13375:13384   */\n      dup4\n        /* \"#utility.yul\":13371:13388   */\n      add\n        /* \"#utility.yul\":13364:13411   */\n      mstore\n        /* \"#utility.yul\":13428:13559   */\n      tag_530\n        /* \"#utility.yul\":13554:13558   */\n      dup2\n        /* \"#utility.yul\":13428:13559   */\n      tag_378\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":13420:13559   */\n      swap1\n      pop\n        /* \"#utility.yul\":13147:13566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13572:13808   */\n    tag_379:\n        /* \"#utility.yul\":13712:13746   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":13708:13709   */\n      0x00\n        /* \"#utility.yul\":13700:13706   */\n      dup3\n        /* \"#utility.yul\":13696:13710   */\n      add\n        /* \"#utility.yul\":13689:13747   */\n      mstore\n        /* \"#utility.yul\":13781:13800   */\n      0x776e6572206e6f7220617070726f766564000000000000000000000000000000\n        /* \"#utility.yul\":13776:13778   */\n      0x20\n        /* \"#utility.yul\":13768:13774   */\n      dup3\n        /* \"#utility.yul\":13764:13779   */\n      add\n        /* \"#utility.yul\":13757:13801   */\n      mstore\n        /* \"#utility.yul\":13572:13808   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13814:14180   */\n    tag_380:\n        /* \"#utility.yul\":13956:13959   */\n      0x00\n        /* \"#utility.yul\":13977:14044   */\n      tag_533\n        /* \"#utility.yul\":14041:14043   */\n      0x31\n        /* \"#utility.yul\":14036:14039   */\n      dup4\n        /* \"#utility.yul\":13977:14044   */\n      tag_351\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":13970:14044   */\n      swap2\n      pop\n        /* \"#utility.yul\":14053:14146   */\n      tag_534\n        /* \"#utility.yul\":14142:14145   */\n      dup3\n        /* \"#utility.yul\":14053:14146   */\n      tag_379\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":14171:14173   */\n      0x40\n        /* \"#utility.yul\":14166:14169   */\n      dup3\n        /* \"#utility.yul\":14162:14174   */\n      add\n        /* \"#utility.yul\":14155:14174   */\n      swap1\n      pop\n        /* \"#utility.yul\":13814:14180   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14186:14605   */\n    tag_142:\n        /* \"#utility.yul\":14352:14356   */\n      0x00\n        /* \"#utility.yul\":14390:14392   */\n      0x20\n        /* \"#utility.yul\":14379:14388   */\n      dup3\n        /* \"#utility.yul\":14375:14393   */\n      add\n        /* \"#utility.yul\":14367:14393   */\n      swap1\n      pop\n        /* \"#utility.yul\":14439:14448   */\n      dup2\n        /* \"#utility.yul\":14433:14437   */\n      dup2\n        /* \"#utility.yul\":14429:14449   */\n      sub\n        /* \"#utility.yul\":14425:14426   */\n      0x00\n        /* \"#utility.yul\":14414:14423   */\n      dup4\n        /* \"#utility.yul\":14410:14427   */\n      add\n        /* \"#utility.yul\":14403:14450   */\n      mstore\n        /* \"#utility.yul\":14467:14598   */\n      tag_536\n        /* \"#utility.yul\":14593:14597   */\n      dup2\n        /* \"#utility.yul\":14467:14598   */\n      tag_380\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":14459:14598   */\n      swap1\n      pop\n        /* \"#utility.yul\":14186:14605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14611:14791   */\n    tag_381:\n        /* \"#utility.yul\":14659:14736   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14656:14657   */\n      0x00\n        /* \"#utility.yul\":14649:14737   */\n      mstore\n        /* \"#utility.yul\":14756:14760   */\n      0x11\n        /* \"#utility.yul\":14753:14754   */\n      0x04\n        /* \"#utility.yul\":14746:14761   */\n      mstore\n        /* \"#utility.yul\":14780:14784   */\n      0x24\n        /* \"#utility.yul\":14777:14778   */\n      0x00\n        /* \"#utility.yul\":14770:14785   */\n      revert\n        /* \"#utility.yul\":14797:15030   */\n    tag_158:\n        /* \"#utility.yul\":14836:14839   */\n      0x00\n        /* \"#utility.yul\":14859:14883   */\n      tag_539\n        /* \"#utility.yul\":14877:14882   */\n      dup3\n        /* \"#utility.yul\":14859:14883   */\n      tag_355\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":14850:14883   */\n      swap2\n      pop\n        /* \"#utility.yul\":14905:14971   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14898:14903   */\n      dup3\n        /* \"#utility.yul\":14895:14972   */\n      sub\n        /* \"#utility.yul\":14892:14995   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":14975:14993   */\n      tag_541\n      tag_381\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14892:14995   */\n    tag_540:\n        /* \"#utility.yul\":15022:15023   */\n      0x01\n        /* \"#utility.yul\":15015:15020   */\n      dup3\n        /* \"#utility.yul\":15011:15024   */\n      add\n        /* \"#utility.yul\":15004:15024   */\n      swap1\n      pop\n        /* \"#utility.yul\":14797:15030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15036:15184   */\n    tag_382:\n        /* \"#utility.yul\":15138:15149   */\n      0x00\n        /* \"#utility.yul\":15175:15178   */\n      dup2\n        /* \"#utility.yul\":15160:15178   */\n      swap1\n      pop\n        /* \"#utility.yul\":15036:15184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15190:15580   */\n    tag_383:\n        /* \"#utility.yul\":15296:15299   */\n      0x00\n        /* \"#utility.yul\":15324:15363   */\n      tag_544\n        /* \"#utility.yul\":15357:15362   */\n      dup3\n        /* \"#utility.yul\":15324:15363   */\n      tag_350\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":15379:15468   */\n      tag_545\n        /* \"#utility.yul\":15461:15467   */\n      dup2\n        /* \"#utility.yul\":15456:15459   */\n      dup6\n        /* \"#utility.yul\":15379:15468   */\n      tag_382\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":15372:15468   */\n      swap4\n      pop\n        /* \"#utility.yul\":15477:15542   */\n      tag_546\n        /* \"#utility.yul\":15535:15541   */\n      dup2\n        /* \"#utility.yul\":15530:15533   */\n      dup6\n        /* \"#utility.yul\":15523:15527   */\n      0x20\n        /* \"#utility.yul\":15516:15521   */\n      dup7\n        /* \"#utility.yul\":15512:15528   */\n      add\n        /* \"#utility.yul\":15477:15542   */\n      tag_352\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":15567:15573   */\n      dup1\n        /* \"#utility.yul\":15562:15565   */\n      dup5\n        /* \"#utility.yul\":15558:15574   */\n      add\n        /* \"#utility.yul\":15551:15574   */\n      swap2\n      pop\n        /* \"#utility.yul\":15300:15580   */\n      pop\n        /* \"#utility.yul\":15190:15580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15586:16021   */\n    tag_195:\n        /* \"#utility.yul\":15766:15769   */\n      0x00\n        /* \"#utility.yul\":15788:15883   */\n      tag_548\n        /* \"#utility.yul\":15879:15882   */\n      dup3\n        /* \"#utility.yul\":15870:15876   */\n      dup6\n        /* \"#utility.yul\":15788:15883   */\n      tag_383\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":15781:15883   */\n      swap2\n      pop\n        /* \"#utility.yul\":15900:15995   */\n      tag_549\n        /* \"#utility.yul\":15991:15994   */\n      dup3\n        /* \"#utility.yul\":15982:15988   */\n      dup5\n        /* \"#utility.yul\":15900:15995   */\n      tag_383\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":15893:15995   */\n      swap2\n      pop\n        /* \"#utility.yul\":16012:16015   */\n      dup2\n        /* \"#utility.yul\":16005:16015   */\n      swap1\n      pop\n        /* \"#utility.yul\":15586:16021   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16027:16469   */\n    tag_233:\n        /* \"#utility.yul\":16176:16180   */\n      0x00\n        /* \"#utility.yul\":16214:16216   */\n      0x60\n        /* \"#utility.yul\":16203:16212   */\n      dup3\n        /* \"#utility.yul\":16199:16217   */\n      add\n        /* \"#utility.yul\":16191:16217   */\n      swap1\n      pop\n        /* \"#utility.yul\":16227:16298   */\n      tag_551\n        /* \"#utility.yul\":16295:16296   */\n      0x00\n        /* \"#utility.yul\":16284:16293   */\n      dup4\n        /* \"#utility.yul\":16280:16297   */\n      add\n        /* \"#utility.yul\":16271:16277   */\n      dup7\n        /* \"#utility.yul\":16227:16298   */\n      tag_360\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":16308:16380   */\n      tag_552\n        /* \"#utility.yul\":16376:16378   */\n      0x20\n        /* \"#utility.yul\":16365:16374   */\n      dup4\n        /* \"#utility.yul\":16361:16379   */\n      add\n        /* \"#utility.yul\":16352:16358   */\n      dup6\n        /* \"#utility.yul\":16308:16380   */\n      tag_363\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":16390:16462   */\n      tag_553\n        /* \"#utility.yul\":16458:16460   */\n      0x40\n        /* \"#utility.yul\":16447:16456   */\n      dup4\n        /* \"#utility.yul\":16443:16461   */\n      add\n        /* \"#utility.yul\":16434:16440   */\n      dup5\n        /* \"#utility.yul\":16390:16462   */\n      tag_360\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":16027:16469   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16475:16655   */\n    tag_266:\n        /* \"#utility.yul\":16523:16600   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16520:16521   */\n      0x00\n        /* \"#utility.yul\":16513:16601   */\n      mstore\n        /* \"#utility.yul\":16620:16624   */\n      0x12\n        /* \"#utility.yul\":16617:16618   */\n      0x04\n        /* \"#utility.yul\":16610:16625   */\n      mstore\n        /* \"#utility.yul\":16644:16648   */\n      0x24\n        /* \"#utility.yul\":16641:16642   */\n      0x00\n        /* \"#utility.yul\":16634:16649   */\n      revert\n        /* \"#utility.yul\":16661:16759   */\n    tag_384:\n        /* \"#utility.yul\":16712:16718   */\n      0x00\n        /* \"#utility.yul\":16746:16751   */\n      dup2\n        /* \"#utility.yul\":16740:16752   */\n      mload\n        /* \"#utility.yul\":16730:16752   */\n      swap1\n      pop\n        /* \"#utility.yul\":16661:16759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16765:16933   */\n    tag_385:\n        /* \"#utility.yul\":16848:16859   */\n      0x00\n        /* \"#utility.yul\":16882:16888   */\n      dup3\n        /* \"#utility.yul\":16877:16880   */\n      dup3\n        /* \"#utility.yul\":16870:16889   */\n      mstore\n        /* \"#utility.yul\":16922:16926   */\n      0x20\n        /* \"#utility.yul\":16917:16920   */\n      dup3\n        /* \"#utility.yul\":16913:16927   */\n      add\n        /* \"#utility.yul\":16898:16927   */\n      swap1\n      pop\n        /* \"#utility.yul\":16765:16933   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16939:17312   */\n    tag_386:\n        /* \"#utility.yul\":17025:17028   */\n      0x00\n        /* \"#utility.yul\":17053:17091   */\n      tag_558\n        /* \"#utility.yul\":17085:17090   */\n      dup3\n        /* \"#utility.yul\":17053:17091   */\n      tag_384\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":17107:17177   */\n      tag_559\n        /* \"#utility.yul\":17170:17176   */\n      dup2\n        /* \"#utility.yul\":17165:17168   */\n      dup6\n        /* \"#utility.yul\":17107:17177   */\n      tag_385\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":17100:17177   */\n      swap4\n      pop\n        /* \"#utility.yul\":17186:17251   */\n      tag_560\n        /* \"#utility.yul\":17244:17250   */\n      dup2\n        /* \"#utility.yul\":17239:17242   */\n      dup6\n        /* \"#utility.yul\":17232:17236   */\n      0x20\n        /* \"#utility.yul\":17225:17230   */\n      dup7\n        /* \"#utility.yul\":17221:17237   */\n      add\n        /* \"#utility.yul\":17186:17251   */\n      tag_352\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":17276:17305   */\n      tag_561\n        /* \"#utility.yul\":17298:17304   */\n      dup2\n        /* \"#utility.yul\":17276:17305   */\n      tag_353\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":17271:17274   */\n      dup5\n        /* \"#utility.yul\":17267:17306   */\n      add\n        /* \"#utility.yul\":17260:17306   */\n      swap2\n      pop\n        /* \"#utility.yul\":17029:17312   */\n      pop\n        /* \"#utility.yul\":16939:17312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17318:17958   */\n    tag_285:\n        /* \"#utility.yul\":17513:17517   */\n      0x00\n        /* \"#utility.yul\":17551:17554   */\n      0x80\n        /* \"#utility.yul\":17540:17549   */\n      dup3\n        /* \"#utility.yul\":17536:17555   */\n      add\n        /* \"#utility.yul\":17528:17555   */\n      swap1\n      pop\n        /* \"#utility.yul\":17565:17636   */\n      tag_563\n        /* \"#utility.yul\":17633:17634   */\n      0x00\n        /* \"#utility.yul\":17622:17631   */\n      dup4\n        /* \"#utility.yul\":17618:17635   */\n      add\n        /* \"#utility.yul\":17609:17615   */\n      dup8\n        /* \"#utility.yul\":17565:17636   */\n      tag_360\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":17646:17718   */\n      tag_564\n        /* \"#utility.yul\":17714:17716   */\n      0x20\n        /* \"#utility.yul\":17703:17712   */\n      dup4\n        /* \"#utility.yul\":17699:17717   */\n      add\n        /* \"#utility.yul\":17690:17696   */\n      dup7\n        /* \"#utility.yul\":17646:17718   */\n      tag_360\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":17728:17800   */\n      tag_565\n        /* \"#utility.yul\":17796:17798   */\n      0x40\n        /* \"#utility.yul\":17785:17794   */\n      dup4\n        /* \"#utility.yul\":17781:17799   */\n      add\n        /* \"#utility.yul\":17772:17778   */\n      dup6\n        /* \"#utility.yul\":17728:17800   */\n      tag_363\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":17847:17856   */\n      dup2\n        /* \"#utility.yul\":17841:17845   */\n      dup2\n        /* \"#utility.yul\":17837:17857   */\n      sub\n        /* \"#utility.yul\":17832:17834   */\n      0x60\n        /* \"#utility.yul\":17821:17830   */\n      dup4\n        /* \"#utility.yul\":17817:17835   */\n      add\n        /* \"#utility.yul\":17810:17858   */\n      mstore\n        /* \"#utility.yul\":17875:17951   */\n      tag_566\n        /* \"#utility.yul\":17946:17950   */\n      dup2\n        /* \"#utility.yul\":17937:17943   */\n      dup5\n        /* \"#utility.yul\":17875:17951   */\n      tag_386\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":17867:17951   */\n      swap1\n      pop\n        /* \"#utility.yul\":17318:17958   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17964:18105   */\n    tag_387:\n        /* \"#utility.yul\":18020:18025   */\n      0x00\n        /* \"#utility.yul\":18051:18057   */\n      dup2\n        /* \"#utility.yul\":18045:18058   */\n      mload\n        /* \"#utility.yul\":18036:18058   */\n      swap1\n      pop\n        /* \"#utility.yul\":18067:18099   */\n      tag_568\n        /* \"#utility.yul\":18093:18098   */\n      dup2\n        /* \"#utility.yul\":18067:18099   */\n      tag_346\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":17964:18105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18111:18460   */\n    tag_288:\n        /* \"#utility.yul\":18180:18186   */\n      0x00\n        /* \"#utility.yul\":18229:18231   */\n      0x20\n        /* \"#utility.yul\":18217:18226   */\n      dup3\n        /* \"#utility.yul\":18208:18215   */\n      dup5\n        /* \"#utility.yul\":18204:18227   */\n      sub\n        /* \"#utility.yul\":18200:18232   */\n      slt\n        /* \"#utility.yul\":18197:18316   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":18235:18314   */\n      tag_571\n      tag_343\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":18197:18316   */\n    tag_570:\n        /* \"#utility.yul\":18355:18356   */\n      0x00\n        /* \"#utility.yul\":18380:18443   */\n      tag_572\n        /* \"#utility.yul\":18435:18442   */\n      dup5\n        /* \"#utility.yul\":18426:18432   */\n      dup3\n        /* \"#utility.yul\":18415:18424   */\n      dup6\n        /* \"#utility.yul\":18411:18433   */\n      add\n        /* \"#utility.yul\":18380:18443   */\n      tag_387\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":18370:18443   */\n      swap2\n      pop\n        /* \"#utility.yul\":18326:18453   */\n      pop\n        /* \"#utility.yul\":18111:18460   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18466:18798   */\n    tag_329:\n        /* \"#utility.yul\":18587:18591   */\n      0x00\n        /* \"#utility.yul\":18625:18627   */\n      0x40\n        /* \"#utility.yul\":18614:18623   */\n      dup3\n        /* \"#utility.yul\":18610:18628   */\n      add\n        /* \"#utility.yul\":18602:18628   */\n      swap1\n      pop\n        /* \"#utility.yul\":18638:18709   */\n      tag_574\n        /* \"#utility.yul\":18706:18707   */\n      0x00\n        /* \"#utility.yul\":18695:18704   */\n      dup4\n        /* \"#utility.yul\":18691:18708   */\n      add\n        /* \"#utility.yul\":18682:18688   */\n      dup6\n        /* \"#utility.yul\":18638:18709   */\n      tag_360\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":18719:18791   */\n      tag_575\n        /* \"#utility.yul\":18787:18789   */\n      0x20\n        /* \"#utility.yul\":18776:18785   */\n      dup4\n        /* \"#utility.yul\":18772:18790   */\n      add\n        /* \"#utility.yul\":18763:18769   */\n      dup5\n        /* \"#utility.yul\":18719:18791   */\n      tag_363\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":18466:18798   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220299a20cba6963ae9b5234bdd0ebd5377f214c1b32faa0e3e5f777e3f3297fc4164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_235": {
									"entryPoint": null,
									"id": 235,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_539": {
									"entryPoint": null,
									"id": 539,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_331": {
									"entryPoint": 332,
									"id": 331,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:13",
										"nodeType": "YulBlock",
										"src": "0:6778:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "922:274:13",
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:13",
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nativeSrc": "970:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nativeSrc": "970:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nativeSrc": "939:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nativeSrc": "935:32:13",
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nativeSrc": "932:119:13",
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nativeSrc": "1061:128:13",
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nativeSrc": "1076:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nativeSrc": "1147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nativeSrc": "1115:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:13",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:13",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:13",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											},
											{
												"body": {
													"nativeSrc": "1261:40:13",
													"nodeType": "YulBlock",
													"src": "1261:40:13",
													"statements": [
														{
															"nativeSrc": "1272:22:13",
															"nodeType": "YulAssignment",
															"src": "1272:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:13"
																},
																"nativeSrc": "1282:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:13",
														"nodeType": "YulTypedName",
														"src": "1244:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:13",
														"nodeType": "YulTypedName",
														"src": "1254:6:13",
														"type": ""
													}
												],
												"src": "1202:99:13"
											},
											{
												"body": {
													"nativeSrc": "1335:152:13",
													"nodeType": "YulBlock",
													"src": "1335:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:13"
																},
																"nativeSrc": "1345:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:13"
															},
															"nativeSrc": "1345:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:13"
																},
																"nativeSrc": "1442:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:13"
															},
															"nativeSrc": "1442:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:13"
																},
																"nativeSrc": "1466:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:13"
															},
															"nativeSrc": "1466:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:13"
											},
											{
												"body": {
													"nativeSrc": "1521:152:13",
													"nodeType": "YulBlock",
													"src": "1521:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:13"
																},
																"nativeSrc": "1531:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:13"
															},
															"nativeSrc": "1531:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:13"
																},
																"nativeSrc": "1628:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:13"
															},
															"nativeSrc": "1628:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																},
																"nativeSrc": "1652:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:13"
															},
															"nativeSrc": "1652:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:13"
											},
											{
												"body": {
													"nativeSrc": "1730:269:13",
													"nodeType": "YulBlock",
													"src": "1730:269:13",
													"statements": [
														{
															"nativeSrc": "1740:22:13",
															"nodeType": "YulAssignment",
															"src": "1740:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:13"
																},
																"nativeSrc": "1750:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:13"
																}
															]
														},
														{
															"nativeSrc": "1771:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:13"
																},
																"nativeSrc": "1797:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:13",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:13",
																"nodeType": "YulBlock",
																"src": "1848:51:13",
																"statements": [
																	{
																		"nativeSrc": "1862:27:13",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:13",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:13"
																			},
																			"nativeSrc": "1872:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:13"
																},
																"nativeSrc": "1821:26:13",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:13"
															},
															"nativeSrc": "1818:81:13",
															"nodeType": "YulIf",
															"src": "1818:81:13"
														},
														{
															"body": {
																"nativeSrc": "1951:42:13",
																"nodeType": "YulBlock",
																"src": "1951:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:13"
																			},
																			"nativeSrc": "1965:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:13"
																		},
																		"nativeSrc": "1965:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:13"
																		},
																		"nativeSrc": "1935:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:13"
																},
																"nativeSrc": "1912:38:13",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:13"
															},
															"nativeSrc": "1909:84:13",
															"nodeType": "YulIf",
															"src": "1909:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:13",
														"nodeType": "YulTypedName",
														"src": "1714:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:13",
														"nodeType": "YulTypedName",
														"src": "1723:6:13",
														"type": ""
													}
												],
												"src": "1679:320:13"
											},
											{
												"body": {
													"nativeSrc": "2059:87:13",
													"nodeType": "YulBlock",
													"src": "2059:87:13",
													"statements": [
														{
															"nativeSrc": "2069:11:13",
															"nodeType": "YulAssignment",
															"src": "2069:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:13",
																"nodeType": "YulIdentifier",
																"src": "2077:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:13"
																},
																"nativeSrc": "2090:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:13"
															},
															"nativeSrc": "2090:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:13"
														},
														{
															"nativeSrc": "2113:26:13",
															"nodeType": "YulAssignment",
															"src": "2113:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:13"
																},
																"nativeSrc": "2121:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:13",
														"nodeType": "YulTypedName",
														"src": "2046:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:13",
														"nodeType": "YulTypedName",
														"src": "2054:4:13",
														"type": ""
													}
												],
												"src": "2005:141:13"
											},
											{
												"body": {
													"nativeSrc": "2196:49:13",
													"nodeType": "YulBlock",
													"src": "2196:49:13",
													"statements": [
														{
															"nativeSrc": "2206:33:13",
															"nodeType": "YulAssignment",
															"src": "2206:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:13"
																		},
																		"nativeSrc": "2220:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:13"
																},
																"nativeSrc": "2216:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:13",
														"nodeType": "YulTypedName",
														"src": "2179:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:13",
														"nodeType": "YulTypedName",
														"src": "2189:6:13",
														"type": ""
													}
												],
												"src": "2152:93:13"
											},
											{
												"body": {
													"nativeSrc": "2304:54:13",
													"nodeType": "YulBlock",
													"src": "2304:54:13",
													"statements": [
														{
															"nativeSrc": "2314:37:13",
															"nodeType": "YulAssignment",
															"src": "2314:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:13"
																},
																"nativeSrc": "2335:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:13",
														"nodeType": "YulTypedName",
														"src": "2279:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:13",
														"nodeType": "YulTypedName",
														"src": "2285:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:13",
														"nodeType": "YulTypedName",
														"src": "2295:8:13",
														"type": ""
													}
												],
												"src": "2251:107:13"
											},
											{
												"body": {
													"nativeSrc": "2440:317:13",
													"nodeType": "YulBlock",
													"src": "2440:317:13",
													"statements": [
														{
															"nativeSrc": "2450:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:13"
																},
																"nativeSrc": "2467:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:13",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:13",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:13"
																},
																"nativeSrc": "2506:97:13",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:13",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:13",
															"nodeType": "YulAssignment",
															"src": "2612:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:13"
																},
																"nativeSrc": "2624:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:13"
																}
															]
														},
														{
															"nativeSrc": "2672:30:13",
															"nodeType": "YulAssignment",
															"src": "2672:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:13"
																		},
																		"nativeSrc": "2692:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:13"
																},
																"nativeSrc": "2681:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:13"
																}
															]
														},
														{
															"nativeSrc": "2711:40:13",
															"nodeType": "YulAssignment",
															"src": "2711:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nativeSrc": "2731:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:13"
																},
																"nativeSrc": "2721:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:13",
														"nodeType": "YulTypedName",
														"src": "2401:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:13",
														"nodeType": "YulTypedName",
														"src": "2408:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:13",
														"nodeType": "YulTypedName",
														"src": "2420:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:13",
														"nodeType": "YulTypedName",
														"src": "2433:6:13",
														"type": ""
													}
												],
												"src": "2364:393:13"
											},
											{
												"body": {
													"nativeSrc": "2808:32:13",
													"nodeType": "YulBlock",
													"src": "2808:32:13",
													"statements": [
														{
															"nativeSrc": "2818:16:13",
															"nodeType": "YulAssignment",
															"src": "2818:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:13",
																"nodeType": "YulIdentifier",
																"src": "2829:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:13",
														"nodeType": "YulTypedName",
														"src": "2790:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:13",
														"nodeType": "YulTypedName",
														"src": "2800:7:13",
														"type": ""
													}
												],
												"src": "2763:77:13"
											},
											{
												"body": {
													"nativeSrc": "2878:28:13",
													"nodeType": "YulBlock",
													"src": "2878:28:13",
													"statements": [
														{
															"nativeSrc": "2888:12:13",
															"nodeType": "YulAssignment",
															"src": "2888:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:13",
																"nodeType": "YulIdentifier",
																"src": "2895:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:13",
														"nodeType": "YulTypedName",
														"src": "2864:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:13",
														"nodeType": "YulTypedName",
														"src": "2874:3:13",
														"type": ""
													}
												],
												"src": "2846:60:13"
											},
											{
												"body": {
													"nativeSrc": "2972:82:13",
													"nodeType": "YulBlock",
													"src": "2972:82:13",
													"statements": [
														{
															"nativeSrc": "2982:66:13",
															"nodeType": "YulAssignment",
															"src": "2982:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:13"
																				},
																				"nativeSrc": "3022:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:13"
																		},
																		"nativeSrc": "3013:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:13"
																},
																"nativeSrc": "2995:53:13",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:13",
														"nodeType": "YulTypedName",
														"src": "2952:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:13",
														"nodeType": "YulTypedName",
														"src": "2962:9:13",
														"type": ""
													}
												],
												"src": "2912:142:13"
											},
											{
												"body": {
													"nativeSrc": "3107:28:13",
													"nodeType": "YulBlock",
													"src": "3107:28:13",
													"statements": [
														{
															"nativeSrc": "3117:12:13",
															"nodeType": "YulAssignment",
															"src": "3117:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:13",
																"nodeType": "YulIdentifier",
																"src": "3124:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:13",
														"nodeType": "YulTypedName",
														"src": "3093:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:13",
														"nodeType": "YulTypedName",
														"src": "3103:3:13",
														"type": ""
													}
												],
												"src": "3060:75:13"
											},
											{
												"body": {
													"nativeSrc": "3217:193:13",
													"nodeType": "YulBlock",
													"src": "3217:193:13",
													"statements": [
														{
															"nativeSrc": "3227:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:13"
																},
																"nativeSrc": "3251:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:13",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:13"
																				},
																				"nativeSrc": "3340:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:13"
																				},
																				"nativeSrc": "3361:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:13"
																		},
																		"nativeSrc": "3312:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:13"
																},
																"nativeSrc": "3299:105:13",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:13"
															},
															"nativeSrc": "3299:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:13",
														"nodeType": "YulTypedName",
														"src": "3194:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:13",
														"nodeType": "YulTypedName",
														"src": "3200:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:13",
														"nodeType": "YulTypedName",
														"src": "3208:7:13",
														"type": ""
													}
												],
												"src": "3141:269:13"
											},
											{
												"body": {
													"nativeSrc": "3465:24:13",
													"nodeType": "YulBlock",
													"src": "3465:24:13",
													"statements": [
														{
															"nativeSrc": "3475:8:13",
															"nodeType": "YulAssignment",
															"src": "3475:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:13",
																"nodeType": "YulLiteral",
																"src": "3482:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:13",
														"nodeType": "YulTypedName",
														"src": "3461:3:13",
														"type": ""
													}
												],
												"src": "3416:73:13"
											},
											{
												"body": {
													"nativeSrc": "3548:136:13",
													"nodeType": "YulBlock",
													"src": "3548:136:13",
													"statements": [
														{
															"nativeSrc": "3558:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:13"
																},
																"nativeSrc": "3572:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:13"
																},
																"nativeSrc": "3613:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:13"
															},
															"nativeSrc": "3613:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:13",
														"nodeType": "YulTypedName",
														"src": "3534:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:13",
														"nodeType": "YulTypedName",
														"src": "3540:6:13",
														"type": ""
													}
												],
												"src": "3495:189:13"
											},
											{
												"body": {
													"nativeSrc": "3740:136:13",
													"nodeType": "YulBlock",
													"src": "3740:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:13",
																"nodeType": "YulBlock",
																"src": "3807:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:13"
																			},
																			"nativeSrc": "3821:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:13"
																		},
																		"nativeSrc": "3821:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:13"
																},
																"nativeSrc": "3757:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:13"
															},
															"nativeSrc": "3750:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:13",
																"nodeType": "YulBlock",
																"src": "3772:26:13",
																"statements": [
																	{
																		"nativeSrc": "3774:22:13",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:13"
																			},
																			"nativeSrc": "3783:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:13",
																"nodeType": "YulBlock",
																"src": "3754:2:13",
																"statements": []
															},
															"src": "3750:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:13",
														"nodeType": "YulTypedName",
														"src": "3728:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:13",
														"nodeType": "YulTypedName",
														"src": "3735:3:13",
														"type": ""
													}
												],
												"src": "3690:186:13"
											},
											{
												"body": {
													"nativeSrc": "3961:464:13",
													"nodeType": "YulBlock",
													"src": "3961:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:13",
																"nodeType": "YulBlock",
																"src": "3987:431:13",
																"statements": [
																	{
																		"nativeSrc": "4001:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:13"
																			},
																			"nativeSrc": "4017:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:13",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:13"
																					},
																					"nativeSrc": "4101:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:13"
																			},
																			"nativeSrc": "4087:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:13",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:13",
																			"nodeType": "YulBlock",
																			"src": "4288:27:13",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:13",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:13",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:13"
																			},
																			"nativeSrc": "4269:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:13"
																		},
																		"nativeSrc": "4266:49:13",
																		"nodeType": "YulIf",
																		"src": "4266:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:13"
																							},
																							"nativeSrc": "4384:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:13"
																					},
																					"nativeSrc": "4370:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:13"
																			},
																			"nativeSrc": "4328:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:13"
																		},
																		"nativeSrc": "4328:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:13"
																},
																"nativeSrc": "3975:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:13"
															},
															"nativeSrc": "3972:446:13",
															"nodeType": "YulIf",
															"src": "3972:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:13",
														"nodeType": "YulTypedName",
														"src": "3937:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:13",
														"nodeType": "YulTypedName",
														"src": "3944:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:13",
														"nodeType": "YulTypedName",
														"src": "3949:10:13",
														"type": ""
													}
												],
												"src": "3882:543:13"
											},
											{
												"body": {
													"nativeSrc": "4494:54:13",
													"nodeType": "YulBlock",
													"src": "4494:54:13",
													"statements": [
														{
															"nativeSrc": "4504:37:13",
															"nodeType": "YulAssignment",
															"src": "4504:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:13"
																},
																"nativeSrc": "4525:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:13",
														"nodeType": "YulTypedName",
														"src": "4469:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:13",
														"nodeType": "YulTypedName",
														"src": "4475:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:13",
														"nodeType": "YulTypedName",
														"src": "4485:8:13",
														"type": ""
													}
												],
												"src": "4431:117:13"
											},
											{
												"body": {
													"nativeSrc": "4605:118:13",
													"nodeType": "YulBlock",
													"src": "4605:118:13",
													"statements": [
														{
															"nativeSrc": "4615:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:13"
																				},
																				"nativeSrc": "4660:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:13"
																				},
																				"nativeSrc": "4675:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:13"
																		},
																		"nativeSrc": "4631:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:13"
																},
																"nativeSrc": "4627:56:13",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:13",
															"nodeType": "YulAssignment",
															"src": "4692:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:13"
																},
																"nativeSrc": "4702:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:13",
														"nodeType": "YulTypedName",
														"src": "4582:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:13",
														"nodeType": "YulTypedName",
														"src": "4588:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:13",
														"nodeType": "YulTypedName",
														"src": "4598:6:13",
														"type": ""
													}
												],
												"src": "4554:169:13"
											},
											{
												"body": {
													"nativeSrc": "4809:214:13",
													"nodeType": "YulBlock",
													"src": "4809:214:13",
													"statements": [
														{
															"nativeSrc": "4942:37:13",
															"nodeType": "YulAssignment",
															"src": "4942:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:13"
																},
																"nativeSrc": "4950:29:13",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:13"
																}
															]
														},
														{
															"nativeSrc": "4988:29:13",
															"nodeType": "YulAssignment",
															"src": "4988:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:13"
																		},
																		"nativeSrc": "5005:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:13"
																},
																"nativeSrc": "4996:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:13",
														"nodeType": "YulTypedName",
														"src": "4790:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:13",
														"nodeType": "YulTypedName",
														"src": "4796:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:13",
														"nodeType": "YulTypedName",
														"src": "4804:4:13",
														"type": ""
													}
												],
												"src": "4728:295:13"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:13",
													"nodeType": "YulBlock",
													"src": "5120:1303:13",
													"statements": [
														{
															"nativeSrc": "5131:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:13"
																},
																"nativeSrc": "5145:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:13",
																"nodeType": "YulBlock",
																"src": "5267:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:13"
																			},
																			"nativeSrc": "5269:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:13"
																		},
																		"nativeSrc": "5269:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:13"
																},
																"nativeSrc": "5236:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:13"
															},
															"nativeSrc": "5233:56:13",
															"nodeType": "YulIf",
															"src": "5233:56:13"
														},
														{
															"nativeSrc": "5299:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:13"
																		},
																		"nativeSrc": "5339:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:13"
																},
																"nativeSrc": "5313:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:13"
																},
																"nativeSrc": "5398:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:13"
															},
															"nativeSrc": "5398:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:13"
														},
														{
															"nativeSrc": "5475:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:13",
																"nodeType": "YulLiteral",
																"src": "5492:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:13",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:13",
															"nodeType": "YulAssignment",
															"src": "5503:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:13",
																"nodeType": "YulLiteral",
																"src": "5516:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:13",
																		"nodeType": "YulBlock",
																		"src": "5567:611:13",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:13",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:13"
																							},
																							"nativeSrc": "5608:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:13"
																					},
																					"nativeSrc": "5596:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:13",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:13"
																					},
																					"nativeSrc": "5646:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:13",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:13",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:13",
																					"nodeType": "YulBlock",
																					"src": "5764:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:13"
																												},
																												"nativeSrc": "5803:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:13"
																										},
																										"nativeSrc": "5797:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:13"
																								},
																								"nativeSrc": "5782:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:13"
																							},
																							"nativeSrc": "5782:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:13"
																						},
																						{
																							"nativeSrc": "5841:24:13",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:13",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:13"
																								},
																								"nativeSrc": "5851:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:13",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:13",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:13"
																								},
																								"nativeSrc": "5895:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:13"
																					},
																					"nativeSrc": "5727:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:13"
																				},
																				"nativeSrc": "5719:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:13",
																					"nodeType": "YulBlock",
																					"src": "5742:21:13",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:13",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:13",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:13"
																								},
																								"nativeSrc": "5749:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:13",
																					"nodeType": "YulBlock",
																					"src": "5723:3:13",
																					"statements": []
																				},
																				"src": "5719:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:13",
																					"nodeType": "YulBlock",
																					"src": "5963:156:13",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:13"
																										},
																										"nativeSrc": "6004:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:13"
																								},
																								"nativeSrc": "5998:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:13",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:13",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:13"
																												},
																												"nativeSrc": "6086:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:13"
																										},
																										"nativeSrc": "6056:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:13"
																								},
																								"nativeSrc": "6041:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:13"
																							},
																							"nativeSrc": "6041:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:13"
																					},
																					"nativeSrc": "5943:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:13"
																				},
																				"nativeSrc": "5940:179:13",
																				"nodeType": "YulIf",
																				"src": "5940:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:13",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:13"
																									},
																									"nativeSrc": "6149:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:13",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:13"
																							},
																							"nativeSrc": "6145:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:13"
																					},
																					"nativeSrc": "6132:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:13"
																				},
																				"nativeSrc": "6132:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:13"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:13",
																	"nodeType": "YulCase",
																	"src": "5560:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:13",
																		"nodeType": "YulBlock",
																		"src": "6195:222:13",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:13",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:13",
																					"nodeType": "YulBlock",
																					"src": "6246:67:13",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:13",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:13"
																										},
																										"nativeSrc": "6279:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:13"
																								},
																								"nativeSrc": "6273:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:13"
																				},
																				"nativeSrc": "6236:77:13",
																				"nodeType": "YulIf",
																				"src": "6236:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:13"
																							},
																							"nativeSrc": "6339:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:13"
																					},
																					"nativeSrc": "6326:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:13"
																				},
																				"nativeSrc": "6326:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:13"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:13",
																	"nodeType": "YulCase",
																	"src": "6187:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:13"
																},
																"nativeSrc": "5537:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:13"
															},
															"nativeSrc": "5530:887:13",
															"nodeType": "YulSwitch",
															"src": "5530:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:13",
														"nodeType": "YulTypedName",
														"src": "5109:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:13",
														"nodeType": "YulTypedName",
														"src": "5115:3:13",
														"type": ""
													}
												],
												"src": "5028:1395:13"
											},
											{
												"body": {
													"nativeSrc": "6494:53:13",
													"nodeType": "YulBlock",
													"src": "6494:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:13"
																		},
																		"nativeSrc": "6516:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:13"
																},
																"nativeSrc": "6504:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:13"
															},
															"nativeSrc": "6504:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:13",
														"nodeType": "YulTypedName",
														"src": "6482:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:13",
														"nodeType": "YulTypedName",
														"src": "6489:3:13",
														"type": ""
													}
												],
												"src": "6429:118:13"
											},
											{
												"body": {
													"nativeSrc": "6651:124:13",
													"nodeType": "YulBlock",
													"src": "6651:124:13",
													"statements": [
														{
															"nativeSrc": "6661:26:13",
															"nodeType": "YulAssignment",
															"src": "6661:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:13"
																},
																"nativeSrc": "6669:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:13"
																		},
																		"nativeSrc": "6750:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:13"
																},
																"nativeSrc": "6697:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:13"
															},
															"nativeSrc": "6697:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:13",
														"nodeType": "YulTypedName",
														"src": "6623:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:13",
														"nodeType": "YulTypedName",
														"src": "6635:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:13",
														"nodeType": "YulTypedName",
														"src": "6646:4:13",
														"type": ""
													}
												],
												"src": "6553:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612b3e380380612b3e8339818101604052810190610031919061026d565b806040518060400160405280600981526020017f53696d706c654e465400000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f534e465400000000000000000000000000000000000000000000000000000000815250815f90816100ac91906104d2565b5080600190816100bc91906104d2565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012691906105b0565b60405180910390fd5b61013e8161014c60201b60201c565b505f600781905550506105c9565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61023c82610213565b9050919050565b61024c81610232565b8114610256575f80fd5b50565b5f8151905061026781610243565b92915050565b5f602082840312156102825761028161020f565b5b5f61028f84828501610259565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061031357607f821691505b602082108103610326576103256102cf565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261034d565b610392868361034d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103d66103d16103cc846103aa565b6103b3565b6103aa565b9050919050565b5f819050919050565b6103ef836103bc565b6104036103fb826103dd565b848454610359565b825550505050565b5f90565b61041761040b565b6104228184846103e6565b505050565b5b818110156104455761043a5f8261040f565b600181019050610428565b5050565b601f82111561048a5761045b8161032c565b6104648461033e565b81016020851015610473578190505b61048761047f8561033e565b830182610427565b50505b505050565b5f82821c905092915050565b5f6104aa5f198460080261048f565b1980831691505092915050565b5f6104c2838361049b565b9150826002028217905092915050565b6104db82610298565b67ffffffffffffffff8111156104f4576104f36102a2565b5b6104fe82546102fc565b610509828285610449565b5f60209050601f83116001811461053a575f8415610528578287015190505b61053285826104b7565b865550610599565b601f1984166105488661032c565b5f5b8281101561056f5784890151825560018201915060208501945060208101905061054a565b8683101561058c5784890151610588601f89168261049b565b8355505b6001600288020188555050505b505050505050565b6105aa81610232565b82525050565b5f6020820190506105c35f8301846105a1565b92915050565b612568806105d65f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c80636a627842116100ab578063a22cb4651161006f578063a22cb46514610303578063b88d4fde1461031f578063c87b56dd1461033b578063e985e9c51461036b578063f2fde38b1461039b5761011f565b80636a6278421461027157806370a082311461028d578063715018a6146102bd5780638da5cb5b146102c757806395d89b41146102e55761011f565b80631271f09a116100f25780631271f09a146101bd57806323b872dd146101d957806342842e0e146101f55780634cdc9549146102115780636352211e146102415761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc14610171578063095ea7b3146101a1575b5f80fd5b61013d60048036038101906101389190611ba5565b6103b7565b60405161014a9190611bea565b60405180910390f35b61015b610498565b6040516101689190611c73565b60405180910390f35b61018b60048036038101906101869190611cc6565b610527565b6040516101989190611d30565b60405180910390f35b6101bb60048036038101906101b69190611d73565b610542565b005b6101d760048036038101906101d29190611db1565b610558565b005b6101f360048036038101906101ee9190611e01565b610672565b005b61020f600480360381019061020a9190611e01565b6106d2565b005b61022b60048036038101906102269190611d73565b6106f1565b6040516102389190611bea565b60405180910390f35b61025b60048036038101906102569190611cc6565b610774565b6040516102689190611d30565b60405180910390f35b61028b60048036038101906102869190611e51565b610785565b005b6102a760048036038101906102a29190611e51565b6107b0565b6040516102b49190611e8b565b60405180910390f35b6102c5610866565b005b6102cf610879565b6040516102dc9190611d30565b60405180910390f35b6102ed6108a1565b6040516102fa9190611c73565b60405180910390f35b61031d60048036038101906103189190611ece565b610931565b005b61033960048036038101906103349190612038565b610947565b005b61035560048036038101906103509190611cc6565b6109a9565b6040516103629190611c73565b60405180910390f35b610385600480360381019061038091906120b8565b610a0f565b6040516103929190611bea565b60405180910390f35b6103b560048036038101906103b09190611e51565b610a9d565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610491575061049082610b21565b5b9050919050565b60605f80546104a690612123565b80601f01602080910402602001604051908101604052809291908181526020018280546104d290612123565b801561051d5780601f106104f45761010080835404028352916020019161051d565b820191905f5260205f20905b81548152906001019060200180831161050057829003601f168201915b5050505050905090565b5f61053182610b8a565b5061053b82610c10565b9050919050565b610554828261054f610c49565b610c50565b5050565b5f61056283610774565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036105d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c9906121c3565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105f1610c49565b73ffffffffffffffffffffffffffffffffffffffff161480610620575061061f8161061a610c49565b610a0f565b5b61065f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065690612251565b60405180910390fd5b61066c8484846001610c62565b50505050565b61068361067d610c49565b826106f1565b6106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b9906122df565b60405180910390fd5b6106cd838383610e21565b505050565b6106ec83838360405180602001604052805f815250610947565b505050565b5f806106fc83610774565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061076b57508373ffffffffffffffffffffffffffffffffffffffff1661075384610527565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b5f61077e82610f89565b9050919050565b5f60075490506107958282610f9a565b60075f8154809291906107a79061232a565b91905055505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610821575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108189190611d30565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61086e610fb7565b6108775f61103e565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108b090612123565b80601f01602080910402602001604051908101604052809291908181526020018280546108dc90612123565b80156109275780601f106108fe57610100808354040283529160200191610927565b820191905f5260205f20905b81548152906001019060200180831161090a57829003601f168201915b5050505050905090565b61094361093c610c49565b8383611101565b5050565b610958610952610c49565b836106f1565b610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e906122df565b60405180910390fd5b6109a38484848461126a565b50505050565b60606109b482610b8a565b505f6109be611287565b90505f8151116109dc5760405180602001604052805f815250610a07565b806109e68461129d565b6040516020016109f79291906123ab565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610aa5610fb7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b15575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b0c9190611d30565b60405180910390fd5b610b1e8161103e565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610b9583611367565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c0757826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610bfe9190611e8b565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610c5d8383836001610c62565b505050565b8080610c9a57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610dcc575f610ca984610b8a565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610d1357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015610d265750610d248184610a0f565b155b15610d6857826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401610d5f9190611d30565b60405180910390fd5b8115610dca57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e91575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610e889190611d30565b60405180910390fd5b5f610e9d83835f6113a0565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f0f57816040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610f069190611e8b565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f83578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610f7a939291906123ce565b60405180910390fd5b50505050565b5f610f9382610b8a565b9050919050565b610fb3828260405180602001604052805f8152506115ab565b5050565b610fbf610c49565b73ffffffffffffffffffffffffffffffffffffffff16610fdd610879565b73ffffffffffffffffffffffffffffffffffffffff161461103c57611000610c49565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110339190611d30565b60405180910390fd5b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117157816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111689190611d30565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161125d9190611bea565b60405180910390a3505050565b611275848484610e21565b611281848484846115c6565b50505050565b606060405180602001604052805f815250905090565b60605f60016112ab84611778565b0190505f8167ffffffffffffffff8111156112c9576112c8611f14565b5b6040519080825280601f01601f1916602001820160405280156112fb5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561135c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161135157611350612403565b5b0494505f8503611308575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f806113ab84611367565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146113ec576113eb8184866118c9565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114775761142b5f855f80610c62565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146114f657600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6115b5838361198c565b6115c15f8484846115c6565b505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611772578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611609610c49565b8685856040518563ffffffff1660e01b815260040161162b9493929190612482565b6020604051808303815f875af192505050801561166657506040513d601f19601f8201168201806040525081019061166391906124e0565b60015b6116e7573d805f8114611694576040519150601f19603f3d011682016040523d82523d5f602084013e611699565b606091505b505f8151036116df57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116d69190611d30565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461177057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016117679190611d30565b60405180910390fd5b505b50505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106117d4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816117ca576117c9612403565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611811576d04ee2d6d415b85acef8100000000838161180757611806612403565b5b0492506020810190505b662386f26fc10000831061184057662386f26fc10000838161183657611835612403565b5b0492506010810190505b6305f5e1008310611869576305f5e100838161185f5761185e612403565b5b0492506008810190505b612710831061188e57612710838161188457611883612403565b5b0492506004810190505b606483106118b157606483816118a7576118a6612403565b5b0492506002810190505b600a83106118c0576001810190505b80915050919050565b6118d4838383611a7f565b611987575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361194857806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161193f9190611e8b565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161197e92919061250b565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119fc575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119f39190611d30565b60405180910390fd5b5f611a0883835f6113a0565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a7a575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611a719190611d30565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b3657508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611af75750611af68484610a0f565b5b80611b3557508273ffffffffffffffffffffffffffffffffffffffff16611b1d83610c10565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b8481611b50565b8114611b8e575f80fd5b50565b5f81359050611b9f81611b7b565b92915050565b5f60208284031215611bba57611bb9611b48565b5b5f611bc784828501611b91565b91505092915050565b5f8115159050919050565b611be481611bd0565b82525050565b5f602082019050611bfd5f830184611bdb565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611c4582611c03565b611c4f8185611c0d565b9350611c5f818560208601611c1d565b611c6881611c2b565b840191505092915050565b5f6020820190508181035f830152611c8b8184611c3b565b905092915050565b5f819050919050565b611ca581611c93565b8114611caf575f80fd5b50565b5f81359050611cc081611c9c565b92915050565b5f60208284031215611cdb57611cda611b48565b5b5f611ce884828501611cb2565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d1a82611cf1565b9050919050565b611d2a81611d10565b82525050565b5f602082019050611d435f830184611d21565b92915050565b611d5281611d10565b8114611d5c575f80fd5b50565b5f81359050611d6d81611d49565b92915050565b5f8060408385031215611d8957611d88611b48565b5b5f611d9685828601611d5f565b9250506020611da785828601611cb2565b9150509250929050565b5f805f60608486031215611dc857611dc7611b48565b5b5f611dd586828701611d5f565b9350506020611de686828701611cb2565b9250506040611df786828701611d5f565b9150509250925092565b5f805f60608486031215611e1857611e17611b48565b5b5f611e2586828701611d5f565b9350506020611e3686828701611d5f565b9250506040611e4786828701611cb2565b9150509250925092565b5f60208284031215611e6657611e65611b48565b5b5f611e7384828501611d5f565b91505092915050565b611e8581611c93565b82525050565b5f602082019050611e9e5f830184611e7c565b92915050565b611ead81611bd0565b8114611eb7575f80fd5b50565b5f81359050611ec881611ea4565b92915050565b5f8060408385031215611ee457611ee3611b48565b5b5f611ef185828601611d5f565b9250506020611f0285828601611eba565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f4a82611c2b565b810181811067ffffffffffffffff82111715611f6957611f68611f14565b5b80604052505050565b5f611f7b611b3f565b9050611f878282611f41565b919050565b5f67ffffffffffffffff821115611fa657611fa5611f14565b5b611faf82611c2b565b9050602081019050919050565b828183375f83830152505050565b5f611fdc611fd784611f8c565b611f72565b905082815260208101848484011115611ff857611ff7611f10565b5b612003848285611fbc565b509392505050565b5f82601f83011261201f5761201e611f0c565b5b813561202f848260208601611fca565b91505092915050565b5f805f80608085870312156120505761204f611b48565b5b5f61205d87828801611d5f565b945050602061206e87828801611d5f565b935050604061207f87828801611cb2565b925050606085013567ffffffffffffffff8111156120a05761209f611b4c565b5b6120ac8782880161200b565b91505092959194509250565b5f80604083850312156120ce576120cd611b48565b5b5f6120db85828601611d5f565b92505060206120ec85828601611d5f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061213a57607f821691505b60208210810361214d5761214c6120f6565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f6121ad602183611c0d565b91506121b882612153565b604082019050919050565b5f6020820190508181035f8301526121da816121a1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f775f8201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b5f61223b603883611c0d565b9150612246826121e1565b604082019050919050565b5f6020820190508181035f8301526122688161222f565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f5f8201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b5f6122c9603183611c0d565b91506122d48261226f565b604082019050919050565b5f6020820190508181035f8301526122f6816122bd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61233482611c93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612366576123656122fd565b5b600182019050919050565b5f81905092915050565b5f61238582611c03565b61238f8185612371565b935061239f818560208601611c1d565b80840191505092915050565b5f6123b6828561237b565b91506123c2828461237b565b91508190509392505050565b5f6060820190506123e15f830186611d21565b6123ee6020830185611e7c565b6123fb6040830184611d21565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f61245482612430565b61245e818561243a565b935061246e818560208601611c1d565b61247781611c2b565b840191505092915050565b5f6080820190506124955f830187611d21565b6124a26020830186611d21565b6124af6040830185611e7c565b81810360608301526124c1818461244a565b905095945050505050565b5f815190506124da81611b7b565b92915050565b5f602082840312156124f5576124f4611b48565b5b5f612502848285016124cc565b91505092915050565b5f60408201905061251e5f830185611d21565b61252b6020830184611e7c565b939250505056fea2646970667358221220299a20cba6963ae9b5234bdd0ebd5377f214c1b32faa0e3e5f777e3f3297fc4164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2B3E CODESIZE SUB DUP1 PUSH2 0x2B3E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x26D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53696D706C654E46540000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E DUP2 PUSH2 0x14C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP PUSH2 0x5C9 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23C DUP3 PUSH2 0x213 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24C DUP2 PUSH2 0x232 JUMP JUMPDEST DUP2 EQ PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x267 DUP2 PUSH2 0x243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x282 JUMPI PUSH2 0x281 PUSH2 0x20F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28F DUP5 DUP3 DUP6 ADD PUSH2 0x259 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x313 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x326 JUMPI PUSH2 0x325 PUSH2 0x2CF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x388 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x34D JUMP JUMPDEST PUSH2 0x392 DUP7 DUP4 PUSH2 0x34D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3D6 PUSH2 0x3D1 PUSH2 0x3CC DUP5 PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EF DUP4 PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x403 PUSH2 0x3FB DUP3 PUSH2 0x3DD JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x359 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x417 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x422 DUP2 DUP5 DUP5 PUSH2 0x3E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x445 JUMPI PUSH2 0x43A PUSH0 DUP3 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x428 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x48A JUMPI PUSH2 0x45B DUP2 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x464 DUP5 PUSH2 0x33E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x473 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x487 PUSH2 0x47F DUP6 PUSH2 0x33E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x427 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4AA PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x48F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4C2 DUP4 DUP4 PUSH2 0x49B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4DB DUP3 PUSH2 0x298 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4F4 JUMPI PUSH2 0x4F3 PUSH2 0x2A2 JUMP JUMPDEST JUMPDEST PUSH2 0x4FE DUP3 SLOAD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x509 DUP3 DUP3 DUP6 PUSH2 0x449 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x53A JUMPI PUSH0 DUP5 ISZERO PUSH2 0x528 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x532 DUP6 DUP3 PUSH2 0x4B7 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x599 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x548 DUP7 PUSH2 0x32C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x56F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x54A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x58C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x588 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x49B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5AA DUP2 PUSH2 0x232 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2568 DUP1 PUSH2 0x5D6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E5 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1271F09A GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1271F09A EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x4CDC9549 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x241 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1BA5 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1DB1 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x866 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x20B8 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x481 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x491 JUMPI POP PUSH2 0x490 DUP3 PUSH2 0xB21 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4A6 SWAP1 PUSH2 0x2123 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D2 SWAP1 PUSH2 0x2123 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x51D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x500 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x531 DUP3 PUSH2 0xB8A JUMP JUMPDEST POP PUSH2 0x53B DUP3 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x554 DUP3 DUP3 PUSH2 0x54F PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x562 DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C9 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5F1 PUSH2 0xC49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x620 JUMPI POP PUSH2 0x61F DUP2 PUSH2 0x61A PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x656 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xC62 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x683 PUSH2 0x67D PUSH2 0xC49 JUMP JUMPDEST DUP3 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CD DUP4 DUP4 DUP4 PUSH2 0xE21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6EC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x947 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6FC DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x76B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x753 DUP5 PUSH2 0x527 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x77E DUP3 PUSH2 0xF89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x795 DUP3 DUP3 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7A7 SWAP1 PUSH2 0x232A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x821 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86E PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x877 PUSH0 PUSH2 0x103E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x2123 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8DC SWAP1 PUSH2 0x2123 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x927 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x927 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x943 PUSH2 0x93C PUSH2 0xC49 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1101 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x958 PUSH2 0x952 PUSH2 0xC49 JUMP JUMPDEST DUP4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP1 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x126A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9B4 DUP3 PUSH2 0xB8A JUMP JUMPDEST POP PUSH0 PUSH2 0x9BE PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA07 JUMP JUMPDEST DUP1 PUSH2 0x9E6 DUP5 PUSH2 0x129D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9F7 SWAP3 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA5 PUSH2 0xFB7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB15 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1E DUP2 PUSH2 0x103E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB95 DUP4 PUSH2 0x1367 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC07 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC5D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC62 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xC9A JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDCC JUMPI PUSH0 PUSH2 0xCA9 DUP5 PUSH2 0xB8A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD13 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD26 JUMPI POP PUSH2 0xD24 DUP2 DUP5 PUSH2 0xA0F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xD68 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xDCA JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE91 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE88 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE9D DUP4 DUP4 PUSH0 PUSH2 0x13A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF06 SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF83 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF93 DUP3 PUSH2 0xB8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB3 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFBF PUSH2 0xC49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFDD PUSH2 0x879 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103C JUMPI PUSH2 0x1000 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1033 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1171 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1275 DUP5 DUP5 DUP5 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x1281 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x12AB DUP5 PUSH2 0x1778 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12C9 JUMPI PUSH2 0x12C8 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x135C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1351 JUMPI PUSH2 0x1350 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1308 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13AB DUP5 PUSH2 0x1367 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13EC JUMPI PUSH2 0x13EB DUP2 DUP5 DUP7 PUSH2 0x18C9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1477 JUMPI PUSH2 0x142B PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14F6 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x15B5 DUP4 DUP4 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x15C1 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x15C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1772 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1609 PUSH2 0xC49 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1666 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1663 SWAP2 SWAP1 PUSH2 0x24E0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16E7 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x16DF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1770 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1767 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x17D4 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x17CA JUMPI PUSH2 0x17C9 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1811 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1807 JUMPI PUSH2 0x1806 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1840 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1836 JUMPI PUSH2 0x1835 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1869 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x185F JUMPI PUSH2 0x185E PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x188E JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x18B1 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x18A7 JUMPI PUSH2 0x18A6 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x18C0 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D4 DUP4 DUP4 DUP4 PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0x1987 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1948 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193F SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x197E SWAP3 SWAP2 SWAP1 PUSH2 0x250B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F3 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1A08 DUP4 DUP4 PUSH0 PUSH2 0x13A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A71 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B36 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AF7 JUMPI POP PUSH2 0x1AF6 DUP5 DUP5 PUSH2 0xA0F JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1B35 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B1D DUP4 PUSH2 0xC10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B84 DUP2 PUSH2 0x1B50 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9F DUP2 PUSH2 0x1B7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC7 DUP5 DUP3 DUP6 ADD PUSH2 0x1B91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE4 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BFD PUSH0 DUP4 ADD DUP5 PUSH2 0x1BDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C45 DUP3 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x1C4F DUP2 DUP6 PUSH2 0x1C0D JUMP JUMPDEST SWAP4 POP PUSH2 0x1C5F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x1C68 DUP2 PUSH2 0x1C2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C8B DUP2 DUP5 PUSH2 0x1C3B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CA5 DUP2 PUSH2 0x1C93 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CAF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC0 DUP2 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CDB JUMPI PUSH2 0x1CDA PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D1A DUP3 PUSH2 0x1CF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2A DUP2 PUSH2 0x1D10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D43 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D52 DUP2 PUSH2 0x1D10 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D5C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D6D DUP2 PUSH2 0x1D49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D96 DUP6 DUP3 DUP7 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DA7 DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DC8 JUMPI PUSH2 0x1DC7 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DD5 DUP7 DUP3 DUP8 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DE6 DUP7 DUP3 DUP8 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DF7 DUP7 DUP3 DUP8 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E18 JUMPI PUSH2 0x1E17 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E25 DUP7 DUP3 DUP8 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E36 DUP7 DUP3 DUP8 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E47 DUP7 DUP3 DUP8 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E66 JUMPI PUSH2 0x1E65 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E73 DUP5 DUP3 DUP6 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E85 DUP2 PUSH2 0x1C93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E9E PUSH0 DUP4 ADD DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EAD DUP2 PUSH2 0x1BD0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EC8 DUP2 PUSH2 0x1EA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F02 DUP6 DUP3 DUP7 ADD PUSH2 0x1EBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F4A DUP3 PUSH2 0x1C2B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F69 JUMPI PUSH2 0x1F68 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7B PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP PUSH2 0x1F87 DUP3 DUP3 PUSH2 0x1F41 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FA6 JUMPI PUSH2 0x1FA5 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST PUSH2 0x1FAF DUP3 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDC PUSH2 0x1FD7 DUP5 PUSH2 0x1F8C JUMP JUMPDEST PUSH2 0x1F72 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FF8 JUMPI PUSH2 0x1FF7 PUSH2 0x1F10 JUMP JUMPDEST JUMPDEST PUSH2 0x2003 DUP5 DUP3 DUP6 PUSH2 0x1FBC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x201F JUMPI PUSH2 0x201E PUSH2 0x1F0C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x202F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FCA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2050 JUMPI PUSH2 0x204F PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x205D DUP8 DUP3 DUP9 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x206E DUP8 DUP3 DUP9 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x207F DUP8 DUP3 DUP9 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A0 JUMPI PUSH2 0x209F PUSH2 0x1B4C JUMP JUMPDEST JUMPDEST PUSH2 0x20AC DUP8 DUP3 DUP9 ADD PUSH2 0x200B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CE JUMPI PUSH2 0x20CD PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20DB DUP6 DUP3 DUP7 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20EC DUP6 DUP3 DUP7 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x213A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x214D JUMPI PUSH2 0x214C PUSH2 0x20F6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21AD PUSH1 0x21 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x21B8 DUP3 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21DA DUP2 PUSH2 0x21A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223B PUSH1 0x38 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x2246 DUP3 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2268 DUP2 PUSH2 0x222F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22C9 PUSH1 0x31 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x22D4 DUP3 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22F6 DUP2 PUSH2 0x22BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2334 DUP3 PUSH2 0x1C93 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2366 JUMPI PUSH2 0x2365 PUSH2 0x22FD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2385 DUP3 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x238F DUP2 DUP6 PUSH2 0x2371 JUMP JUMPDEST SWAP4 POP PUSH2 0x239F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23B6 DUP3 DUP6 PUSH2 0x237B JUMP JUMPDEST SWAP2 POP PUSH2 0x23C2 DUP3 DUP5 PUSH2 0x237B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23E1 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x23EE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0x23FB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D21 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2454 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x245E DUP2 DUP6 PUSH2 0x243A JUMP JUMPDEST SWAP4 POP PUSH2 0x246E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x2477 DUP2 PUSH2 0x1C2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2495 PUSH0 DUP4 ADD DUP8 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x24A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x24AF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E7C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x24C1 DUP2 DUP5 PUSH2 0x244A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24DA DUP2 PUSH2 0x1B7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F5 JUMPI PUSH2 0x24F4 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2502 DUP5 DUP3 DUP6 ADD PUSH2 0x24CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x251E PUSH0 DUP4 ADD DUP6 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x252B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 SWAP11 KECCAK256 0xCB 0xA6 SWAP7 GASPRICE 0xE9 0xB5 0x23 0x4B 0xDD 0xE 0xBD MSTORE8 PUSH24 0xF214C1B32FAA0E3E5F777E3F3297FC4164736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "343:1978:0:-:0;;;427:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;497:12;1381:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;539:1:0::2;522:14;:18;;;;427:121:::0;343:1978;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;343:1978:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1281": {
									"entryPoint": 3152,
									"id": 1281,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1347": {
									"entryPoint": 3170,
									"id": 1347,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_674": {
									"entryPoint": 4743,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_929": {
									"entryPoint": 6345,
									"id": 929,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1477": {
									"entryPoint": 5574,
									"id": 1477,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_269": {
									"entryPoint": 4023,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_856": {
									"entryPoint": 3088,
									"id": 856,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_183": {
									"entryPoint": 1777,
									"id": 183,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isAuthorized_892": {
									"entryPoint": 6783,
									"id": 892,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1085": {
									"entryPoint": 6540,
									"id": 1085,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1653": {
									"entryPoint": 3145,
									"id": 1653,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_843": {
									"entryPoint": 4967,
									"id": 843,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1413": {
									"entryPoint": 2954,
									"id": 1413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_1100": {
									"entryPoint": 3994,
									"id": 1100,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1126": {
									"entryPoint": 5547,
									"id": 1126,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_1263": {
									"entryPoint": 4714,
									"id": 1263,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1384": {
									"entryPoint": 4353,
									"id": 1384,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_331": {
									"entryPoint": 4158,
									"id": 331,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1219": {
									"entryPoint": 3617,
									"id": 1219,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1035": {
									"entryPoint": 5024,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_102": {
									"entryPoint": 1368,
									"id": 102,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_690": {
									"entryPoint": 1346,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_598": {
									"entryPoint": 1968,
									"id": 598,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_707": {
									"entryPoint": 1319,
									"id": 707,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_740": {
									"entryPoint": 2575,
									"id": 740,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2836": {
									"entryPoint": 6008,
									"id": 2836,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_44": {
									"entryPoint": 1925,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_620": {
									"entryPoint": 1176,
									"id": 620,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_58": {
									"entryPoint": 1908,
									"id": 58,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownerOf_611": {
									"entryPoint": 3977,
									"id": 611,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_252": {
									"entryPoint": 2169,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_283": {
									"entryPoint": 2150,
									"id": 283,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_157": {
									"entryPoint": 2375,
									"id": 157,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_804": {
									"entryPoint": 1746,
									"id": 804,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_723": {
									"entryPoint": 2353,
									"id": 723,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1949": {
									"entryPoint": 2849,
									"id": 1949,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_570": {
									"entryPoint": 951,
									"id": 570,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_629": {
									"entryPoint": 2209,
									"id": 629,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1739": {
									"entryPoint": 4765,
									"id": 1739,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_665": {
									"entryPoint": 2473,
									"id": 665,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_128": {
									"entryPoint": 1650,
									"id": 128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_311": {
									"entryPoint": 2717,
									"id": 311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8138,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_address": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9131,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9346,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9483,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9166,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8124,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 9002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7952,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6988,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d": {
									"entryPoint": 8673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2": {
									"entryPoint": 8815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18801:13",
										"nodeType": "YulBlock",
										"src": "0:18801:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:77:13",
													"nodeType": "YulBlock",
													"src": "1860:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:13"
																},
																"nativeSrc": "1871:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:13"
															},
															"nativeSrc": "1871:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:13"
																		},
																		"nativeSrc": "1910:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:13"
																},
																"nativeSrc": "1903:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:13"
															},
															"nativeSrc": "1903:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:139:13"
											},
											{
												"body": {
													"nativeSrc": "1991:54:13",
													"nodeType": "YulBlock",
													"src": "1991:54:13",
													"statements": [
														{
															"nativeSrc": "2001:38:13",
															"nodeType": "YulAssignment",
															"src": "2001:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:13"
																		},
																		"nativeSrc": "2015:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:13"
																		},
																		"nativeSrc": "2031:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:13"
																},
																"nativeSrc": "2011:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:13",
														"nodeType": "YulTypedName",
														"src": "1974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:13",
														"nodeType": "YulTypedName",
														"src": "1984:6:13",
														"type": ""
													}
												],
												"src": "1943:102:13"
											},
											{
												"body": {
													"nativeSrc": "2143:285:13",
													"nodeType": "YulBlock",
													"src": "2143:285:13",
													"statements": [
														{
															"nativeSrc": "2153:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:13"
																},
																"nativeSrc": "2167:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:13",
															"nodeType": "YulAssignment",
															"src": "2215:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:13"
																},
																"nativeSrc": "2222:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nativeSrc": "2337:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:13"
																},
																"nativeSrc": "2302:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:13"
															},
															"nativeSrc": "2302:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:13"
														},
														{
															"nativeSrc": "2376:46:13",
															"nodeType": "YulAssignment",
															"src": "2376:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:13"
																		},
																		"nativeSrc": "2392:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																},
																"nativeSrc": "2383:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:13",
														"nodeType": "YulTypedName",
														"src": "2124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:13",
														"nodeType": "YulTypedName",
														"src": "2131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:13",
														"nodeType": "YulTypedName",
														"src": "2139:3:13",
														"type": ""
													}
												],
												"src": "2051:377:13"
											},
											{
												"body": {
													"nativeSrc": "2552:195:13",
													"nodeType": "YulBlock",
													"src": "2552:195:13",
													"statements": [
														{
															"nativeSrc": "2562:26:13",
															"nodeType": "YulAssignment",
															"src": "2562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:13"
																},
																"nativeSrc": "2570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nativeSrc": "2605:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:13"
																		},
																		"nativeSrc": "2624:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:13"
																},
																"nativeSrc": "2598:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:13"
															},
															"nativeSrc": "2598:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:13"
														},
														{
															"nativeSrc": "2654:86:13",
															"nodeType": "YulAssignment",
															"src": "2654:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:13"
																},
																"nativeSrc": "2662:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:13",
														"nodeType": "YulTypedName",
														"src": "2524:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:13",
														"nodeType": "YulTypedName",
														"src": "2536:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:13",
														"nodeType": "YulTypedName",
														"src": "2547:4:13",
														"type": ""
													}
												],
												"src": "2434:313:13"
											},
											{
												"body": {
													"nativeSrc": "2798:32:13",
													"nodeType": "YulBlock",
													"src": "2798:32:13",
													"statements": [
														{
															"nativeSrc": "2808:16:13",
															"nodeType": "YulAssignment",
															"src": "2808:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:13",
																"nodeType": "YulIdentifier",
																"src": "2819:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:13",
														"nodeType": "YulTypedName",
														"src": "2780:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:13",
														"nodeType": "YulTypedName",
														"src": "2790:7:13",
														"type": ""
													}
												],
												"src": "2753:77:13"
											},
											{
												"body": {
													"nativeSrc": "2879:79:13",
													"nodeType": "YulBlock",
													"src": "2879:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:13",
																"nodeType": "YulBlock",
																"src": "2936:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:13"
																			},
																			"nativeSrc": "2938:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:13"
																		},
																		"nativeSrc": "2938:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:13"
																				},
																				"nativeSrc": "2909:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:13"
																		},
																		"nativeSrc": "2899:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:13"
																},
																"nativeSrc": "2892:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:13"
															},
															"nativeSrc": "2889:63:13",
															"nodeType": "YulIf",
															"src": "2889:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:13",
														"nodeType": "YulTypedName",
														"src": "2872:5:13",
														"type": ""
													}
												],
												"src": "2836:122:13"
											},
											{
												"body": {
													"nativeSrc": "3016:87:13",
													"nodeType": "YulBlock",
													"src": "3016:87:13",
													"statements": [
														{
															"nativeSrc": "3026:29:13",
															"nodeType": "YulAssignment",
															"src": "3026:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:13"
																},
																"nativeSrc": "3035:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:13"
																},
																"nativeSrc": "3064:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:13"
															},
															"nativeSrc": "3064:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:13",
														"nodeType": "YulTypedName",
														"src": "2994:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:13",
														"nodeType": "YulTypedName",
														"src": "3002:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:13",
														"nodeType": "YulTypedName",
														"src": "3010:5:13",
														"type": ""
													}
												],
												"src": "2964:139:13"
											},
											{
												"body": {
													"nativeSrc": "3175:263:13",
													"nodeType": "YulBlock",
													"src": "3175:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:13",
																"nodeType": "YulBlock",
																"src": "3221:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:13"
																			},
																			"nativeSrc": "3223:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:13"
																		},
																		"nativeSrc": "3223:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:13"
																		},
																		"nativeSrc": "3192:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:13"
																},
																"nativeSrc": "3188:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:13"
															},
															"nativeSrc": "3185:119:13",
															"nodeType": "YulIf",
															"src": "3185:119:13"
														},
														{
															"nativeSrc": "3314:117:13",
															"nodeType": "YulBlock",
															"src": "3314:117:13",
															"statements": [
																{
																	"nativeSrc": "3329:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:13"
																				},
																				"nativeSrc": "3389:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:13"
																		},
																		"nativeSrc": "3368:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:13",
														"nodeType": "YulTypedName",
														"src": "3145:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:13",
														"nodeType": "YulTypedName",
														"src": "3156:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:13",
														"nodeType": "YulTypedName",
														"src": "3168:6:13",
														"type": ""
													}
												],
												"src": "3109:329:13"
											},
											{
												"body": {
													"nativeSrc": "3489:81:13",
													"nodeType": "YulBlock",
													"src": "3489:81:13",
													"statements": [
														{
															"nativeSrc": "3499:65:13",
															"nodeType": "YulAssignment",
															"src": "3499:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:13",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:13"
																},
																"nativeSrc": "3510:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:13",
														"nodeType": "YulTypedName",
														"src": "3471:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:13",
														"nodeType": "YulTypedName",
														"src": "3481:7:13",
														"type": ""
													}
												],
												"src": "3444:126:13"
											},
											{
												"body": {
													"nativeSrc": "3621:51:13",
													"nodeType": "YulBlock",
													"src": "3621:51:13",
													"statements": [
														{
															"nativeSrc": "3631:35:13",
															"nodeType": "YulAssignment",
															"src": "3631:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:13"
																},
																"nativeSrc": "3642:24:13",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:13",
														"nodeType": "YulTypedName",
														"src": "3603:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:13",
														"nodeType": "YulTypedName",
														"src": "3613:7:13",
														"type": ""
													}
												],
												"src": "3576:96:13"
											},
											{
												"body": {
													"nativeSrc": "3743:53:13",
													"nodeType": "YulBlock",
													"src": "3743:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:13"
																		},
																		"nativeSrc": "3765:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:13"
																},
																"nativeSrc": "3753:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:13"
															},
															"nativeSrc": "3753:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:13",
														"nodeType": "YulTypedName",
														"src": "3731:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:13",
														"nodeType": "YulTypedName",
														"src": "3738:3:13",
														"type": ""
													}
												],
												"src": "3678:118:13"
											},
											{
												"body": {
													"nativeSrc": "3900:124:13",
													"nodeType": "YulBlock",
													"src": "3900:124:13",
													"statements": [
														{
															"nativeSrc": "3910:26:13",
															"nodeType": "YulAssignment",
															"src": "3910:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:13"
																},
																"nativeSrc": "3918:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:13"
																		},
																		"nativeSrc": "3999:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:13"
																},
																"nativeSrc": "3946:71:13",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:13"
															},
															"nativeSrc": "3946:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:13",
														"nodeType": "YulTypedName",
														"src": "3872:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:13",
														"nodeType": "YulTypedName",
														"src": "3884:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:13",
														"nodeType": "YulTypedName",
														"src": "3895:4:13",
														"type": ""
													}
												],
												"src": "3802:222:13"
											},
											{
												"body": {
													"nativeSrc": "4073:79:13",
													"nodeType": "YulBlock",
													"src": "4073:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:13",
																"nodeType": "YulBlock",
																"src": "4130:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:13"
																			},
																			"nativeSrc": "4132:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:13"
																		},
																		"nativeSrc": "4132:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:13"
																				},
																				"nativeSrc": "4103:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:13"
																		},
																		"nativeSrc": "4093:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:13"
																},
																"nativeSrc": "4086:43:13",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:13"
															},
															"nativeSrc": "4083:63:13",
															"nodeType": "YulIf",
															"src": "4083:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:13",
														"nodeType": "YulTypedName",
														"src": "4066:5:13",
														"type": ""
													}
												],
												"src": "4030:122:13"
											},
											{
												"body": {
													"nativeSrc": "4210:87:13",
													"nodeType": "YulBlock",
													"src": "4210:87:13",
													"statements": [
														{
															"nativeSrc": "4220:29:13",
															"nodeType": "YulAssignment",
															"src": "4220:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:13"
																},
																"nativeSrc": "4229:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:13"
																},
																"nativeSrc": "4258:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:13"
															},
															"nativeSrc": "4258:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:13",
														"nodeType": "YulTypedName",
														"src": "4188:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:13",
														"nodeType": "YulTypedName",
														"src": "4196:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:13",
														"nodeType": "YulTypedName",
														"src": "4204:5:13",
														"type": ""
													}
												],
												"src": "4158:139:13"
											},
											{
												"body": {
													"nativeSrc": "4386:391:13",
													"nodeType": "YulBlock",
													"src": "4386:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:13",
																"nodeType": "YulBlock",
																"src": "4432:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:13"
																			},
																			"nativeSrc": "4434:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:13"
																		},
																		"nativeSrc": "4434:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:13"
																		},
																		"nativeSrc": "4403:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:13"
																},
																"nativeSrc": "4399:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:13"
															},
															"nativeSrc": "4396:119:13",
															"nodeType": "YulIf",
															"src": "4396:119:13"
														},
														{
															"nativeSrc": "4525:117:13",
															"nodeType": "YulBlock",
															"src": "4525:117:13",
															"statements": [
																{
																	"nativeSrc": "4540:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:13"
																				},
																				"nativeSrc": "4600:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:13"
																		},
																		"nativeSrc": "4579:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:13",
															"nodeType": "YulBlock",
															"src": "4652:118:13",
															"statements": [
																{
																	"nativeSrc": "4667:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:13"
																				},
																				"nativeSrc": "4728:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:13"
																		},
																		"nativeSrc": "4707:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:13",
														"nodeType": "YulTypedName",
														"src": "4348:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:13",
														"nodeType": "YulTypedName",
														"src": "4359:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:13",
														"nodeType": "YulTypedName",
														"src": "4371:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:13",
														"nodeType": "YulTypedName",
														"src": "4379:6:13",
														"type": ""
													}
												],
												"src": "4303:474:13"
											},
											{
												"body": {
													"nativeSrc": "4883:519:13",
													"nodeType": "YulBlock",
													"src": "4883:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:13",
																"nodeType": "YulBlock",
																"src": "4929:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:13"
																			},
																			"nativeSrc": "4931:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:13"
																		},
																		"nativeSrc": "4931:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:13"
																		},
																		"nativeSrc": "4900:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:13"
																},
																"nativeSrc": "4896:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:13"
															},
															"nativeSrc": "4893:119:13",
															"nodeType": "YulIf",
															"src": "4893:119:13"
														},
														{
															"nativeSrc": "5022:117:13",
															"nodeType": "YulBlock",
															"src": "5022:117:13",
															"statements": [
																{
																	"nativeSrc": "5037:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:13"
																				},
																				"nativeSrc": "5097:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:13"
																		},
																		"nativeSrc": "5076:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:13",
															"nodeType": "YulBlock",
															"src": "5149:118:13",
															"statements": [
																{
																	"nativeSrc": "5164:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:13"
																				},
																				"nativeSrc": "5225:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5204:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:13"
																		},
																		"nativeSrc": "5204:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:13",
															"nodeType": "YulBlock",
															"src": "5277:118:13",
															"statements": [
																{
																	"nativeSrc": "5292:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:13"
																				},
																				"nativeSrc": "5353:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5332:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:13"
																		},
																		"nativeSrc": "5332:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address",
												"nativeSrc": "4783:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:13",
														"nodeType": "YulTypedName",
														"src": "4837:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:13",
														"nodeType": "YulTypedName",
														"src": "4848:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:13",
														"nodeType": "YulTypedName",
														"src": "4860:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:13",
														"nodeType": "YulTypedName",
														"src": "4868:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:13",
														"nodeType": "YulTypedName",
														"src": "4876:6:13",
														"type": ""
													}
												],
												"src": "4783:619:13"
											},
											{
												"body": {
													"nativeSrc": "5508:519:13",
													"nodeType": "YulBlock",
													"src": "5508:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5554:83:13",
																"nodeType": "YulBlock",
																"src": "5554:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5556:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5556:77:13"
																			},
																			"nativeSrc": "5556:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5556:79:13"
																		},
																		"nativeSrc": "5556:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5556:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5529:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5529:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5538:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5525:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5525:3:13"
																		},
																		"nativeSrc": "5525:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5525:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5550:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5550:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5521:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:13"
																},
																"nativeSrc": "5521:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5521:32:13"
															},
															"nativeSrc": "5518:119:13",
															"nodeType": "YulIf",
															"src": "5518:119:13"
														},
														{
															"nativeSrc": "5647:117:13",
															"nodeType": "YulBlock",
															"src": "5647:117:13",
															"statements": [
																{
																	"nativeSrc": "5662:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5662:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5676:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5676:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5666:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5666:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5691:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5691:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5726:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5726:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5737:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5737:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5722:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5722:3:13"
																				},
																				"nativeSrc": "5722:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5722:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5746:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5746:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5701:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5701:20:13"
																		},
																		"nativeSrc": "5701:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5701:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5691:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5774:118:13",
															"nodeType": "YulBlock",
															"src": "5774:118:13",
															"statements": [
																{
																	"nativeSrc": "5789:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5789:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5803:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5803:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5793:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5793:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5819:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5819:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5854:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5854:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5865:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5865:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5850:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5850:3:13"
																				},
																				"nativeSrc": "5850:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5850:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5874:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5874:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5829:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5829:20:13"
																		},
																		"nativeSrc": "5829:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5829:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5819:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5819:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5902:118:13",
															"nodeType": "YulBlock",
															"src": "5902:118:13",
															"statements": [
																{
																	"nativeSrc": "5917:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5917:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5931:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5931:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5921:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5921:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5947:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5947:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5982:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5982:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5993:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5993:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5978:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5978:3:13"
																				},
																				"nativeSrc": "5978:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5978:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6002:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6002:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5957:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5957:20:13"
																		},
																		"nativeSrc": "5957:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5957:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5947:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5947:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5408:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5462:9:13",
														"nodeType": "YulTypedName",
														"src": "5462:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5473:7:13",
														"nodeType": "YulTypedName",
														"src": "5473:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5485:6:13",
														"nodeType": "YulTypedName",
														"src": "5485:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5493:6:13",
														"nodeType": "YulTypedName",
														"src": "5493:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5501:6:13",
														"nodeType": "YulTypedName",
														"src": "5501:6:13",
														"type": ""
													}
												],
												"src": "5408:619:13"
											},
											{
												"body": {
													"nativeSrc": "6099:263:13",
													"nodeType": "YulBlock",
													"src": "6099:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6145:83:13",
																"nodeType": "YulBlock",
																"src": "6145:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6147:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6147:77:13"
																			},
																			"nativeSrc": "6147:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6147:79:13"
																		},
																		"nativeSrc": "6147:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6147:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6120:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6120:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6129:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6129:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6116:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6116:3:13"
																		},
																		"nativeSrc": "6116:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6116:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6141:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6141:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6112:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6112:3:13"
																},
																"nativeSrc": "6112:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6112:32:13"
															},
															"nativeSrc": "6109:119:13",
															"nodeType": "YulIf",
															"src": "6109:119:13"
														},
														{
															"nativeSrc": "6238:117:13",
															"nodeType": "YulBlock",
															"src": "6238:117:13",
															"statements": [
																{
																	"nativeSrc": "6253:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6253:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6267:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6267:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6257:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6257:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6282:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6282:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6317:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6317:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6328:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6328:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6313:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6313:3:13"
																				},
																				"nativeSrc": "6313:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6313:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6337:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6337:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6292:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6292:20:13"
																		},
																		"nativeSrc": "6292:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6292:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6282:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6282:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6033:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6069:9:13",
														"nodeType": "YulTypedName",
														"src": "6069:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6080:7:13",
														"nodeType": "YulTypedName",
														"src": "6080:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6092:6:13",
														"nodeType": "YulTypedName",
														"src": "6092:6:13",
														"type": ""
													}
												],
												"src": "6033:329:13"
											},
											{
												"body": {
													"nativeSrc": "6433:53:13",
													"nodeType": "YulBlock",
													"src": "6433:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6450:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6450:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6473:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6473:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6455:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6455:17:13"
																		},
																		"nativeSrc": "6455:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6455:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6443:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6443:6:13"
																},
																"nativeSrc": "6443:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6443:37:13"
															},
															"nativeSrc": "6443:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6443:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6368:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6421:5:13",
														"nodeType": "YulTypedName",
														"src": "6421:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6428:3:13",
														"nodeType": "YulTypedName",
														"src": "6428:3:13",
														"type": ""
													}
												],
												"src": "6368:118:13"
											},
											{
												"body": {
													"nativeSrc": "6590:124:13",
													"nodeType": "YulBlock",
													"src": "6590:124:13",
													"statements": [
														{
															"nativeSrc": "6600:26:13",
															"nodeType": "YulAssignment",
															"src": "6600:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6612:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6612:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6623:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6623:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6608:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6608:3:13"
																},
																"nativeSrc": "6608:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6608:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6600:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6600:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6680:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6680:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6693:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6693:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6704:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6704:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6689:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6689:3:13"
																		},
																		"nativeSrc": "6689:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6689:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6636:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6636:43:13"
																},
																"nativeSrc": "6636:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6636:71:13"
															},
															"nativeSrc": "6636:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6636:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6492:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6562:9:13",
														"nodeType": "YulTypedName",
														"src": "6562:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6574:6:13",
														"nodeType": "YulTypedName",
														"src": "6574:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6585:4:13",
														"nodeType": "YulTypedName",
														"src": "6585:4:13",
														"type": ""
													}
												],
												"src": "6492:222:13"
											},
											{
												"body": {
													"nativeSrc": "6760:76:13",
													"nodeType": "YulBlock",
													"src": "6760:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6814:16:13",
																"nodeType": "YulBlock",
																"src": "6814:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6823:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6826:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6826:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6816:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6816:6:13"
																			},
																			"nativeSrc": "6816:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6816:12:13"
																		},
																		"nativeSrc": "6816:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6816:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6783:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6783:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6805:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6805:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6790:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "6790:14:13"
																				},
																				"nativeSrc": "6790:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6790:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6780:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6780:2:13"
																		},
																		"nativeSrc": "6780:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6780:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6773:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6773:6:13"
																},
																"nativeSrc": "6773:40:13",
																"nodeType": "YulFunctionCall",
																"src": "6773:40:13"
															},
															"nativeSrc": "6770:60:13",
															"nodeType": "YulIf",
															"src": "6770:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6720:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6753:5:13",
														"nodeType": "YulTypedName",
														"src": "6753:5:13",
														"type": ""
													}
												],
												"src": "6720:116:13"
											},
											{
												"body": {
													"nativeSrc": "6891:84:13",
													"nodeType": "YulBlock",
													"src": "6891:84:13",
													"statements": [
														{
															"nativeSrc": "6901:29:13",
															"nodeType": "YulAssignment",
															"src": "6901:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6923:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6923:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6910:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6910:12:13"
																},
																"nativeSrc": "6910:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6910:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6901:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6901:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6963:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6963:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6939:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "6939:23:13"
																},
																"nativeSrc": "6939:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6939:30:13"
															},
															"nativeSrc": "6939:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6939:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6842:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6869:6:13",
														"nodeType": "YulTypedName",
														"src": "6869:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6877:3:13",
														"nodeType": "YulTypedName",
														"src": "6877:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6885:5:13",
														"nodeType": "YulTypedName",
														"src": "6885:5:13",
														"type": ""
													}
												],
												"src": "6842:133:13"
											},
											{
												"body": {
													"nativeSrc": "7061:388:13",
													"nodeType": "YulBlock",
													"src": "7061:388:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7107:83:13",
																"nodeType": "YulBlock",
																"src": "7107:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7109:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7109:77:13"
																			},
																			"nativeSrc": "7109:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7109:79:13"
																		},
																		"nativeSrc": "7109:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7109:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7082:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7082:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7091:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7091:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7078:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7078:3:13"
																		},
																		"nativeSrc": "7078:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7078:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7103:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7103:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7074:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7074:3:13"
																},
																"nativeSrc": "7074:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7074:32:13"
															},
															"nativeSrc": "7071:119:13",
															"nodeType": "YulIf",
															"src": "7071:119:13"
														},
														{
															"nativeSrc": "7200:117:13",
															"nodeType": "YulBlock",
															"src": "7200:117:13",
															"statements": [
																{
																	"nativeSrc": "7215:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7215:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7229:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7229:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7219:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7219:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7244:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7244:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7279:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7279:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7290:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7290:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7275:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7275:3:13"
																				},
																				"nativeSrc": "7275:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7275:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7299:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7299:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7254:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7254:20:13"
																		},
																		"nativeSrc": "7254:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7254:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7244:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7244:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7327:115:13",
															"nodeType": "YulBlock",
															"src": "7327:115:13",
															"statements": [
																{
																	"nativeSrc": "7342:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7342:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7356:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7356:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7346:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7346:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7372:60:13",
																	"nodeType": "YulAssignment",
																	"src": "7372:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7404:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7404:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7415:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7415:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7400:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7400:3:13"
																				},
																				"nativeSrc": "7400:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7400:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7424:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7424:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7382:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "7382:17:13"
																		},
																		"nativeSrc": "7382:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7382:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7372:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7372:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6981:468:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7023:9:13",
														"nodeType": "YulTypedName",
														"src": "7023:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7034:7:13",
														"nodeType": "YulTypedName",
														"src": "7034:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7046:6:13",
														"nodeType": "YulTypedName",
														"src": "7046:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7054:6:13",
														"nodeType": "YulTypedName",
														"src": "7054:6:13",
														"type": ""
													}
												],
												"src": "6981:468:13"
											},
											{
												"body": {
													"nativeSrc": "7544:28:13",
													"nodeType": "YulBlock",
													"src": "7544:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7561:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7561:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7564:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7564:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7554:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7554:6:13"
																},
																"nativeSrc": "7554:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7554:12:13"
															},
															"nativeSrc": "7554:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "7554:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7455:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7455:117:13"
											},
											{
												"body": {
													"nativeSrc": "7667:28:13",
													"nodeType": "YulBlock",
													"src": "7667:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7684:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7684:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7687:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7687:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7677:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7677:6:13"
																},
																"nativeSrc": "7677:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7677:12:13"
															},
															"nativeSrc": "7677:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "7677:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7578:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7578:117:13"
											},
											{
												"body": {
													"nativeSrc": "7729:152:13",
													"nodeType": "YulBlock",
													"src": "7729:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7746:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7746:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7749:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7749:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7739:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7739:6:13"
																},
																"nativeSrc": "7739:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7739:88:13"
															},
															"nativeSrc": "7739:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7739:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7843:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7843:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7846:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7846:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7836:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7836:6:13"
																},
																"nativeSrc": "7836:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7836:15:13"
															},
															"nativeSrc": "7836:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7836:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7867:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7867:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7870:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7870:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7860:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7860:6:13"
																},
																"nativeSrc": "7860:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7860:15:13"
															},
															"nativeSrc": "7860:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7860:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7701:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7701:180:13"
											},
											{
												"body": {
													"nativeSrc": "7930:238:13",
													"nodeType": "YulBlock",
													"src": "7930:238:13",
													"statements": [
														{
															"nativeSrc": "7940:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7940:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7962:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7962:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7992:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7992:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7970:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "7970:21:13"
																		},
																		"nativeSrc": "7970:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7970:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7958:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7958:3:13"
																},
																"nativeSrc": "7958:40:13",
																"nodeType": "YulFunctionCall",
																"src": "7958:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7944:10:13",
																	"nodeType": "YulTypedName",
																	"src": "7944:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8109:22:13",
																"nodeType": "YulBlock",
																"src": "8109:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8111:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8111:16:13"
																			},
																			"nativeSrc": "8111:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8111:18:13"
																		},
																		"nativeSrc": "8111:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8111:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8052:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "8052:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8064:18:13",
																				"nodeType": "YulLiteral",
																				"src": "8064:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8049:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8049:2:13"
																		},
																		"nativeSrc": "8049:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8049:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8088:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "8088:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8100:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8100:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8085:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8085:2:13"
																		},
																		"nativeSrc": "8085:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8085:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8046:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8046:2:13"
																},
																"nativeSrc": "8046:62:13",
																"nodeType": "YulFunctionCall",
																"src": "8046:62:13"
															},
															"nativeSrc": "8043:88:13",
															"nodeType": "YulIf",
															"src": "8043:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8147:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8147:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8151:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "8151:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8140:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8140:6:13"
																},
																"nativeSrc": "8140:22:13",
																"nodeType": "YulFunctionCall",
																"src": "8140:22:13"
															},
															"nativeSrc": "8140:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "8140:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7887:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7916:6:13",
														"nodeType": "YulTypedName",
														"src": "7916:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7924:4:13",
														"nodeType": "YulTypedName",
														"src": "7924:4:13",
														"type": ""
													}
												],
												"src": "7887:281:13"
											},
											{
												"body": {
													"nativeSrc": "8215:88:13",
													"nodeType": "YulBlock",
													"src": "8215:88:13",
													"statements": [
														{
															"nativeSrc": "8225:30:13",
															"nodeType": "YulAssignment",
															"src": "8225:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8235:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "8235:18:13"
																},
																"nativeSrc": "8235:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8235:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8225:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8225:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8284:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8284:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8292:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8292:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8264:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "8264:19:13"
																},
																"nativeSrc": "8264:33:13",
																"nodeType": "YulFunctionCall",
																"src": "8264:33:13"
															},
															"nativeSrc": "8264:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "8264:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8174:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8199:4:13",
														"nodeType": "YulTypedName",
														"src": "8199:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8208:6:13",
														"nodeType": "YulTypedName",
														"src": "8208:6:13",
														"type": ""
													}
												],
												"src": "8174:129:13"
											},
											{
												"body": {
													"nativeSrc": "8375:241:13",
													"nodeType": "YulBlock",
													"src": "8375:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8480:22:13",
																"nodeType": "YulBlock",
																"src": "8480:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8482:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8482:16:13"
																			},
																			"nativeSrc": "8482:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8482:18:13"
																		},
																		"nativeSrc": "8482:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8482:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8452:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8452:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8460:18:13",
																		"nodeType": "YulLiteral",
																		"src": "8460:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8449:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8449:2:13"
																},
																"nativeSrc": "8449:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8449:30:13"
															},
															"nativeSrc": "8446:56:13",
															"nodeType": "YulIf",
															"src": "8446:56:13"
														},
														{
															"nativeSrc": "8512:37:13",
															"nodeType": "YulAssignment",
															"src": "8512:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8542:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8542:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8520:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "8520:21:13"
																},
																"nativeSrc": "8520:29:13",
																"nodeType": "YulFunctionCall",
																"src": "8520:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8512:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8512:4:13"
																}
															]
														},
														{
															"nativeSrc": "8586:23:13",
															"nodeType": "YulAssignment",
															"src": "8586:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8598:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8598:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8604:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8604:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8594:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8594:3:13"
																},
																"nativeSrc": "8594:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8594:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8586:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8586:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8309:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8359:6:13",
														"nodeType": "YulTypedName",
														"src": "8359:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8370:4:13",
														"nodeType": "YulTypedName",
														"src": "8370:4:13",
														"type": ""
													}
												],
												"src": "8309:307:13"
											},
											{
												"body": {
													"nativeSrc": "8686:84:13",
													"nodeType": "YulBlock",
													"src": "8686:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8710:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8710:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8715:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8715:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8720:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8720:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8697:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8697:12:13"
																},
																"nativeSrc": "8697:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8697:30:13"
															},
															"nativeSrc": "8697:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8697:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8747:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8747:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8752:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8752:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8743:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8743:3:13"
																		},
																		"nativeSrc": "8743:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8743:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8761:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8761:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8736:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8736:6:13"
																},
																"nativeSrc": "8736:27:13",
																"nodeType": "YulFunctionCall",
																"src": "8736:27:13"
															},
															"nativeSrc": "8736:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "8736:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8622:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8668:3:13",
														"nodeType": "YulTypedName",
														"src": "8668:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8673:3:13",
														"nodeType": "YulTypedName",
														"src": "8673:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8678:6:13",
														"nodeType": "YulTypedName",
														"src": "8678:6:13",
														"type": ""
													}
												],
												"src": "8622:148:13"
											},
											{
												"body": {
													"nativeSrc": "8859:340:13",
													"nodeType": "YulBlock",
													"src": "8859:340:13",
													"statements": [
														{
															"nativeSrc": "8869:74:13",
															"nodeType": "YulAssignment",
															"src": "8869:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8935:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8935:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8894:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "8894:40:13"
																		},
																		"nativeSrc": "8894:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8878:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "8878:15:13"
																},
																"nativeSrc": "8878:65:13",
																"nodeType": "YulFunctionCall",
																"src": "8878:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8869:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8869:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8959:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8959:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8966:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8966:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8952:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8952:6:13"
																},
																"nativeSrc": "8952:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8952:21:13"
															},
															"nativeSrc": "8952:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8952:21:13"
														},
														{
															"nativeSrc": "8982:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8982:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8997:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8997:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9004:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9004:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8993:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8993:3:13"
																},
																"nativeSrc": "8993:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8993:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8986:3:13",
																	"nodeType": "YulTypedName",
																	"src": "8986:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9047:83:13",
																"nodeType": "YulBlock",
																"src": "9047:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9049:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9049:77:13"
																			},
																			"nativeSrc": "9049:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9049:79:13"
																		},
																		"nativeSrc": "9049:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9049:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9028:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9028:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9033:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9033:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9024:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9024:3:13"
																		},
																		"nativeSrc": "9024:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9024:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9042:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9042:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9021:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9021:2:13"
																},
																"nativeSrc": "9021:25:13",
																"nodeType": "YulFunctionCall",
																"src": "9021:25:13"
															},
															"nativeSrc": "9018:112:13",
															"nodeType": "YulIf",
															"src": "9018:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9176:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9176:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9181:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9181:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9186:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9186:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9139:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "9139:36:13"
																},
																"nativeSrc": "9139:54:13",
																"nodeType": "YulFunctionCall",
																"src": "9139:54:13"
															},
															"nativeSrc": "9139:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "9139:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8776:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8832:3:13",
														"nodeType": "YulTypedName",
														"src": "8832:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8837:6:13",
														"nodeType": "YulTypedName",
														"src": "8837:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8845:3:13",
														"nodeType": "YulTypedName",
														"src": "8845:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8853:5:13",
														"nodeType": "YulTypedName",
														"src": "8853:5:13",
														"type": ""
													}
												],
												"src": "8776:423:13"
											},
											{
												"body": {
													"nativeSrc": "9279:277:13",
													"nodeType": "YulBlock",
													"src": "9279:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9328:83:13",
																"nodeType": "YulBlock",
																"src": "9328:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9330:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9330:77:13"
																			},
																			"nativeSrc": "9330:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9330:79:13"
																		},
																		"nativeSrc": "9330:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9330:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9307:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9307:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9315:4:13",
																						"nodeType": "YulLiteral",
																						"src": "9315:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9303:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9303:3:13"
																				},
																				"nativeSrc": "9303:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9303:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9322:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9322:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9299:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9299:3:13"
																		},
																		"nativeSrc": "9299:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9299:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9292:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9292:6:13"
																},
																"nativeSrc": "9292:35:13",
																"nodeType": "YulFunctionCall",
																"src": "9292:35:13"
															},
															"nativeSrc": "9289:122:13",
															"nodeType": "YulIf",
															"src": "9289:122:13"
														},
														{
															"nativeSrc": "9420:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9420:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9447:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9447:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9434:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9434:12:13"
																},
																"nativeSrc": "9434:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9434:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9424:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9424:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9463:87:13",
															"nodeType": "YulAssignment",
															"src": "9463:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9523:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9523:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9531:4:13",
																				"nodeType": "YulLiteral",
																				"src": "9531:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9519:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9519:3:13"
																		},
																		"nativeSrc": "9519:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9519:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9538:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9538:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9546:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9546:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9472:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "9472:46:13"
																},
																"nativeSrc": "9472:78:13",
																"nodeType": "YulFunctionCall",
																"src": "9472:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9463:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9463:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9218:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9257:6:13",
														"nodeType": "YulTypedName",
														"src": "9257:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9265:3:13",
														"nodeType": "YulTypedName",
														"src": "9265:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9273:5:13",
														"nodeType": "YulTypedName",
														"src": "9273:5:13",
														"type": ""
													}
												],
												"src": "9218:338:13"
											},
											{
												"body": {
													"nativeSrc": "9688:817:13",
													"nodeType": "YulBlock",
													"src": "9688:817:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9735:83:13",
																"nodeType": "YulBlock",
																"src": "9735:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9737:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9737:77:13"
																			},
																			"nativeSrc": "9737:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9737:79:13"
																		},
																		"nativeSrc": "9737:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9737:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9709:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9709:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9718:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9718:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9705:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9705:3:13"
																		},
																		"nativeSrc": "9705:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9705:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9730:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9730:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9701:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9701:3:13"
																},
																"nativeSrc": "9701:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9701:33:13"
															},
															"nativeSrc": "9698:120:13",
															"nodeType": "YulIf",
															"src": "9698:120:13"
														},
														{
															"nativeSrc": "9828:117:13",
															"nodeType": "YulBlock",
															"src": "9828:117:13",
															"statements": [
																{
																	"nativeSrc": "9843:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9843:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9857:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9857:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9847:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9847:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9872:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9872:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9907:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9907:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9918:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9918:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9903:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9903:3:13"
																				},
																				"nativeSrc": "9903:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9903:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9927:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9927:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9882:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9882:20:13"
																		},
																		"nativeSrc": "9882:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9882:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9872:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9872:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9955:118:13",
															"nodeType": "YulBlock",
															"src": "9955:118:13",
															"statements": [
																{
																	"nativeSrc": "9970:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9970:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9984:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9984:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9974:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9974:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10000:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10000:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10035:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10035:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10046:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10046:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10031:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10031:3:13"
																				},
																				"nativeSrc": "10031:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10031:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10055:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10055:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10010:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10010:20:13"
																		},
																		"nativeSrc": "10010:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10010:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10000:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10000:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10083:118:13",
															"nodeType": "YulBlock",
															"src": "10083:118:13",
															"statements": [
																{
																	"nativeSrc": "10098:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10098:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10112:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10112:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10102:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10102:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10128:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10128:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10163:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10163:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10174:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10174:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10159:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10159:3:13"
																				},
																				"nativeSrc": "10159:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10159:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10183:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10183:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10138:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10138:20:13"
																		},
																		"nativeSrc": "10138:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10138:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10128:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10128:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10211:287:13",
															"nodeType": "YulBlock",
															"src": "10211:287:13",
															"statements": [
																{
																	"nativeSrc": "10226:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10226:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10257:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10257:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10268:2:13",
																						"nodeType": "YulLiteral",
																						"src": "10268:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10253:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10253:3:13"
																				},
																				"nativeSrc": "10253:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10253:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10240:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "10240:12:13"
																		},
																		"nativeSrc": "10240:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10240:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10230:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10230:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10319:83:13",
																		"nodeType": "YulBlock",
																		"src": "10319:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10321:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "10321:77:13"
																					},
																					"nativeSrc": "10321:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10321:79:13"
																				},
																				"nativeSrc": "10321:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "10321:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10291:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10291:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10299:18:13",
																				"nodeType": "YulLiteral",
																				"src": "10299:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10288:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10288:2:13"
																		},
																		"nativeSrc": "10288:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10288:30:13"
																	},
																	"nativeSrc": "10285:117:13",
																	"nodeType": "YulIf",
																	"src": "10285:117:13"
																},
																{
																	"nativeSrc": "10416:72:13",
																	"nodeType": "YulAssignment",
																	"src": "10416:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10460:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10460:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10471:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10471:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10456:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10456:3:13"
																				},
																				"nativeSrc": "10456:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10456:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10480:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10480:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10426:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "10426:29:13"
																		},
																		"nativeSrc": "10426:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10426:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10416:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10416:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9562:943:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9634:9:13",
														"nodeType": "YulTypedName",
														"src": "9634:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9645:7:13",
														"nodeType": "YulTypedName",
														"src": "9645:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9657:6:13",
														"nodeType": "YulTypedName",
														"src": "9657:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9665:6:13",
														"nodeType": "YulTypedName",
														"src": "9665:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9673:6:13",
														"nodeType": "YulTypedName",
														"src": "9673:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9681:6:13",
														"nodeType": "YulTypedName",
														"src": "9681:6:13",
														"type": ""
													}
												],
												"src": "9562:943:13"
											},
											{
												"body": {
													"nativeSrc": "10594:391:13",
													"nodeType": "YulBlock",
													"src": "10594:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10640:83:13",
																"nodeType": "YulBlock",
																"src": "10640:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10642:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10642:77:13"
																			},
																			"nativeSrc": "10642:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10642:79:13"
																		},
																		"nativeSrc": "10642:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10642:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10615:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10615:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10624:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10624:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10611:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10611:3:13"
																		},
																		"nativeSrc": "10611:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10611:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10636:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10636:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10607:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10607:3:13"
																},
																"nativeSrc": "10607:32:13",
																"nodeType": "YulFunctionCall",
																"src": "10607:32:13"
															},
															"nativeSrc": "10604:119:13",
															"nodeType": "YulIf",
															"src": "10604:119:13"
														},
														{
															"nativeSrc": "10733:117:13",
															"nodeType": "YulBlock",
															"src": "10733:117:13",
															"statements": [
																{
																	"nativeSrc": "10748:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10748:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10762:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10762:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10752:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10752:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10777:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10777:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10812:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10812:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10823:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10823:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10808:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10808:3:13"
																				},
																				"nativeSrc": "10808:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10808:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10832:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10832:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10787:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10787:20:13"
																		},
																		"nativeSrc": "10787:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10787:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10777:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10777:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10860:118:13",
															"nodeType": "YulBlock",
															"src": "10860:118:13",
															"statements": [
																{
																	"nativeSrc": "10875:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10875:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10889:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10889:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10879:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10879:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10905:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10905:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10940:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10940:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10951:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10951:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10936:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10936:3:13"
																				},
																				"nativeSrc": "10936:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10936:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10960:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10960:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10915:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10915:20:13"
																		},
																		"nativeSrc": "10915:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10915:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10905:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10905:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10511:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10556:9:13",
														"nodeType": "YulTypedName",
														"src": "10556:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10567:7:13",
														"nodeType": "YulTypedName",
														"src": "10567:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10579:6:13",
														"nodeType": "YulTypedName",
														"src": "10579:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10587:6:13",
														"nodeType": "YulTypedName",
														"src": "10587:6:13",
														"type": ""
													}
												],
												"src": "10511:474:13"
											},
											{
												"body": {
													"nativeSrc": "11019:152:13",
													"nodeType": "YulBlock",
													"src": "11019:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11036:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11036:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11039:77:13",
																		"nodeType": "YulLiteral",
																		"src": "11039:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11029:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11029:6:13"
																},
																"nativeSrc": "11029:88:13",
																"nodeType": "YulFunctionCall",
																"src": "11029:88:13"
															},
															"nativeSrc": "11029:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "11029:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11133:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11133:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11136:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11136:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11126:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11126:6:13"
																},
																"nativeSrc": "11126:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11126:15:13"
															},
															"nativeSrc": "11126:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11126:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11157:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11157:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11160:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11160:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11150:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11150:6:13"
																},
																"nativeSrc": "11150:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11150:15:13"
															},
															"nativeSrc": "11150:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11150:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10991:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10991:180:13"
											},
											{
												"body": {
													"nativeSrc": "11228:269:13",
													"nodeType": "YulBlock",
													"src": "11228:269:13",
													"statements": [
														{
															"nativeSrc": "11238:22:13",
															"nodeType": "YulAssignment",
															"src": "11238:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11252:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11252:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11258:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11258:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11248:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11248:3:13"
																},
																"nativeSrc": "11248:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11248:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11238:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11238:6:13"
																}
															]
														},
														{
															"nativeSrc": "11269:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11269:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11299:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11299:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11305:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11305:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11295:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11295:3:13"
																},
																"nativeSrc": "11295:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11295:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11273:18:13",
																	"nodeType": "YulTypedName",
																	"src": "11273:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11346:51:13",
																"nodeType": "YulBlock",
																"src": "11346:51:13",
																"statements": [
																	{
																		"nativeSrc": "11360:27:13",
																		"nodeType": "YulAssignment",
																		"src": "11360:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11374:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "11374:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11382:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11382:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11370:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11370:3:13"
																			},
																			"nativeSrc": "11370:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11370:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11360:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11360:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11326:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "11326:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11319:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11319:6:13"
																},
																"nativeSrc": "11319:26:13",
																"nodeType": "YulFunctionCall",
																"src": "11319:26:13"
															},
															"nativeSrc": "11316:81:13",
															"nodeType": "YulIf",
															"src": "11316:81:13"
														},
														{
															"body": {
																"nativeSrc": "11449:42:13",
																"nodeType": "YulBlock",
																"src": "11449:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11463:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11463:16:13"
																			},
																			"nativeSrc": "11463:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11463:18:13"
																		},
																		"nativeSrc": "11463:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11463:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11413:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "11413:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11436:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11436:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11444:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11444:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11433:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11433:2:13"
																		},
																		"nativeSrc": "11433:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11433:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11410:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11410:2:13"
																},
																"nativeSrc": "11410:38:13",
																"nodeType": "YulFunctionCall",
																"src": "11410:38:13"
															},
															"nativeSrc": "11407:84:13",
															"nodeType": "YulIf",
															"src": "11407:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11177:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11212:4:13",
														"nodeType": "YulTypedName",
														"src": "11212:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11221:6:13",
														"nodeType": "YulTypedName",
														"src": "11221:6:13",
														"type": ""
													}
												],
												"src": "11177:320:13"
											},
											{
												"body": {
													"nativeSrc": "11609:114:13",
													"nodeType": "YulBlock",
													"src": "11609:114:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11631:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11631:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11639:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11639:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11627:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11627:3:13"
																		},
																		"nativeSrc": "11627:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11627:14:13"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "11643:34:13",
																		"nodeType": "YulLiteral",
																		"src": "11643:34:13",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11620:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11620:6:13"
																},
																"nativeSrc": "11620:58:13",
																"nodeType": "YulFunctionCall",
																"src": "11620:58:13"
															},
															"nativeSrc": "11620:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "11620:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11699:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11699:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11707:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11707:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11695:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11695:3:13"
																		},
																		"nativeSrc": "11695:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11695:15:13"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "11712:3:13",
																		"nodeType": "YulLiteral",
																		"src": "11712:3:13",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11688:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11688:6:13"
																},
																"nativeSrc": "11688:28:13",
																"nodeType": "YulFunctionCall",
																"src": "11688:28:13"
															},
															"nativeSrc": "11688:28:13",
															"nodeType": "YulExpressionStatement",
															"src": "11688:28:13"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nativeSrc": "11503:220:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11601:6:13",
														"nodeType": "YulTypedName",
														"src": "11601:6:13",
														"type": ""
													}
												],
												"src": "11503:220:13"
											},
											{
												"body": {
													"nativeSrc": "11875:220:13",
													"nodeType": "YulBlock",
													"src": "11875:220:13",
													"statements": [
														{
															"nativeSrc": "11885:74:13",
															"nodeType": "YulAssignment",
															"src": "11885:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11951:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11951:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11956:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11956:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11892:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11892:58:13"
																},
																"nativeSrc": "11892:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11892:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11885:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11885:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12057:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12057:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nativeSrc": "11968:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11968:88:13"
																},
																"nativeSrc": "11968:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11968:93:13"
															},
															"nativeSrc": "11968:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11968:93:13"
														},
														{
															"nativeSrc": "12070:19:13",
															"nodeType": "YulAssignment",
															"src": "12070:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12081:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12081:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12086:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12086:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12077:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12077:3:13"
																},
																"nativeSrc": "12077:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12077:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12070:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12070:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11729:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11863:3:13",
														"nodeType": "YulTypedName",
														"src": "11863:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11871:3:13",
														"nodeType": "YulTypedName",
														"src": "11871:3:13",
														"type": ""
													}
												],
												"src": "11729:366:13"
											},
											{
												"body": {
													"nativeSrc": "12272:248:13",
													"nodeType": "YulBlock",
													"src": "12272:248:13",
													"statements": [
														{
															"nativeSrc": "12282:26:13",
															"nodeType": "YulAssignment",
															"src": "12282:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12294:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12294:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12305:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12305:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12290:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12290:3:13"
																},
																"nativeSrc": "12290:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12290:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12282:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12282:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12329:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12329:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12340:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12340:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12325:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12325:3:13"
																		},
																		"nativeSrc": "12325:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12325:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12348:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12348:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12354:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12354:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12344:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12344:3:13"
																		},
																		"nativeSrc": "12344:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12344:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12318:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12318:6:13"
																},
																"nativeSrc": "12318:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12318:47:13"
															},
															"nativeSrc": "12318:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12318:47:13"
														},
														{
															"nativeSrc": "12374:139:13",
															"nodeType": "YulAssignment",
															"src": "12374:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12508:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12508:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12382:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12382:124:13"
																},
																"nativeSrc": "12382:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12382:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12374:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12374:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12101:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12252:9:13",
														"nodeType": "YulTypedName",
														"src": "12252:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12267:4:13",
														"nodeType": "YulTypedName",
														"src": "12267:4:13",
														"type": ""
													}
												],
												"src": "12101:419:13"
											},
											{
												"body": {
													"nativeSrc": "12632:137:13",
													"nodeType": "YulBlock",
													"src": "12632:137:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12654:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12654:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12662:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12662:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12650:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12650:3:13"
																		},
																		"nativeSrc": "12650:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12650:14:13"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nativeSrc": "12666:34:13",
																		"nodeType": "YulLiteral",
																		"src": "12666:34:13",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12643:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12643:6:13"
																},
																"nativeSrc": "12643:58:13",
																"nodeType": "YulFunctionCall",
																"src": "12643:58:13"
															},
															"nativeSrc": "12643:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "12643:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12722:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12722:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12730:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12730:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12718:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12718:3:13"
																		},
																		"nativeSrc": "12718:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12718:15:13"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "12735:26:13",
																		"nodeType": "YulLiteral",
																		"src": "12735:26:13",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12711:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12711:6:13"
																},
																"nativeSrc": "12711:51:13",
																"nodeType": "YulFunctionCall",
																"src": "12711:51:13"
															},
															"nativeSrc": "12711:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "12711:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
												"nativeSrc": "12526:243:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12624:6:13",
														"nodeType": "YulTypedName",
														"src": "12624:6:13",
														"type": ""
													}
												],
												"src": "12526:243:13"
											},
											{
												"body": {
													"nativeSrc": "12921:220:13",
													"nodeType": "YulBlock",
													"src": "12921:220:13",
													"statements": [
														{
															"nativeSrc": "12931:74:13",
															"nodeType": "YulAssignment",
															"src": "12931:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12997:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12997:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13002:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13002:2:13",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12938:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "12938:58:13"
																},
																"nativeSrc": "12938:67:13",
																"nodeType": "YulFunctionCall",
																"src": "12938:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12931:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12931:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13103:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13103:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																	"nativeSrc": "13014:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13014:88:13"
																},
																"nativeSrc": "13014:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13014:93:13"
															},
															"nativeSrc": "13014:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13014:93:13"
														},
														{
															"nativeSrc": "13116:19:13",
															"nodeType": "YulAssignment",
															"src": "13116:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13127:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13127:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13132:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13132:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13123:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13123:3:13"
																},
																"nativeSrc": "13123:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13123:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13116:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13116:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12775:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12909:3:13",
														"nodeType": "YulTypedName",
														"src": "12909:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12917:3:13",
														"nodeType": "YulTypedName",
														"src": "12917:3:13",
														"type": ""
													}
												],
												"src": "12775:366:13"
											},
											{
												"body": {
													"nativeSrc": "13318:248:13",
													"nodeType": "YulBlock",
													"src": "13318:248:13",
													"statements": [
														{
															"nativeSrc": "13328:26:13",
															"nodeType": "YulAssignment",
															"src": "13328:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13340:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13340:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13351:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13351:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13336:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13336:3:13"
																},
																"nativeSrc": "13336:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13336:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13328:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13328:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13375:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13375:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13386:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13386:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13371:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13371:3:13"
																		},
																		"nativeSrc": "13371:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13371:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13394:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13394:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13400:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13400:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13390:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13390:3:13"
																		},
																		"nativeSrc": "13390:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13390:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13364:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13364:6:13"
																},
																"nativeSrc": "13364:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13364:47:13"
															},
															"nativeSrc": "13364:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13364:47:13"
														},
														{
															"nativeSrc": "13420:139:13",
															"nodeType": "YulAssignment",
															"src": "13420:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13554:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13554:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13428:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "13428:124:13"
																},
																"nativeSrc": "13428:131:13",
																"nodeType": "YulFunctionCall",
																"src": "13428:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13420:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13420:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13147:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13298:9:13",
														"nodeType": "YulTypedName",
														"src": "13298:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13313:4:13",
														"nodeType": "YulTypedName",
														"src": "13313:4:13",
														"type": ""
													}
												],
												"src": "13147:419:13"
											},
											{
												"body": {
													"nativeSrc": "13678:130:13",
													"nodeType": "YulBlock",
													"src": "13678:130:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13700:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13700:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13708:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13708:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13696:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13696:3:13"
																		},
																		"nativeSrc": "13696:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13696:14:13"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nativeSrc": "13712:34:13",
																		"nodeType": "YulLiteral",
																		"src": "13712:34:13",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13689:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13689:6:13"
																},
																"nativeSrc": "13689:58:13",
																"nodeType": "YulFunctionCall",
																"src": "13689:58:13"
															},
															"nativeSrc": "13689:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "13689:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13768:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13768:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13776:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13776:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13764:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13764:3:13"
																		},
																		"nativeSrc": "13764:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13764:15:13"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "13781:19:13",
																		"nodeType": "YulLiteral",
																		"src": "13781:19:13",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13757:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13757:6:13"
																},
																"nativeSrc": "13757:44:13",
																"nodeType": "YulFunctionCall",
																"src": "13757:44:13"
															},
															"nativeSrc": "13757:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "13757:44:13"
														}
													]
												},
												"name": "store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
												"nativeSrc": "13572:236:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13670:6:13",
														"nodeType": "YulTypedName",
														"src": "13670:6:13",
														"type": ""
													}
												],
												"src": "13572:236:13"
											},
											{
												"body": {
													"nativeSrc": "13960:220:13",
													"nodeType": "YulBlock",
													"src": "13960:220:13",
													"statements": [
														{
															"nativeSrc": "13970:74:13",
															"nodeType": "YulAssignment",
															"src": "13970:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14036:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14036:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14041:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14041:2:13",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13977:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13977:58:13"
																},
																"nativeSrc": "13977:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13977:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13970:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13970:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14142:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14142:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																	"nativeSrc": "14053:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "14053:88:13"
																},
																"nativeSrc": "14053:93:13",
																"nodeType": "YulFunctionCall",
																"src": "14053:93:13"
															},
															"nativeSrc": "14053:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "14053:93:13"
														},
														{
															"nativeSrc": "14155:19:13",
															"nodeType": "YulAssignment",
															"src": "14155:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14166:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14166:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14171:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14171:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14162:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14162:3:13"
																},
																"nativeSrc": "14162:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14162:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14155:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14155:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13814:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13948:3:13",
														"nodeType": "YulTypedName",
														"src": "13948:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13956:3:13",
														"nodeType": "YulTypedName",
														"src": "13956:3:13",
														"type": ""
													}
												],
												"src": "13814:366:13"
											},
											{
												"body": {
													"nativeSrc": "14357:248:13",
													"nodeType": "YulBlock",
													"src": "14357:248:13",
													"statements": [
														{
															"nativeSrc": "14367:26:13",
															"nodeType": "YulAssignment",
															"src": "14367:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14379:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14379:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14390:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14390:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14375:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14375:3:13"
																},
																"nativeSrc": "14375:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14375:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14367:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14367:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14414:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14414:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14425:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14425:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14410:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14410:3:13"
																		},
																		"nativeSrc": "14410:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14410:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14433:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14433:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14439:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14439:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14429:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14429:3:13"
																		},
																		"nativeSrc": "14429:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14429:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14403:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14403:6:13"
																},
																"nativeSrc": "14403:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14403:47:13"
															},
															"nativeSrc": "14403:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14403:47:13"
														},
														{
															"nativeSrc": "14459:139:13",
															"nodeType": "YulAssignment",
															"src": "14459:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14593:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14593:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14467:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14467:124:13"
																},
																"nativeSrc": "14467:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14467:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14459:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14459:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14186:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14337:9:13",
														"nodeType": "YulTypedName",
														"src": "14337:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14352:4:13",
														"nodeType": "YulTypedName",
														"src": "14352:4:13",
														"type": ""
													}
												],
												"src": "14186:419:13"
											},
											{
												"body": {
													"nativeSrc": "14639:152:13",
													"nodeType": "YulBlock",
													"src": "14639:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14656:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14656:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14659:77:13",
																		"nodeType": "YulLiteral",
																		"src": "14659:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14649:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14649:6:13"
																},
																"nativeSrc": "14649:88:13",
																"nodeType": "YulFunctionCall",
																"src": "14649:88:13"
															},
															"nativeSrc": "14649:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "14649:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14753:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14753:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14756:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14756:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14746:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14746:6:13"
																},
																"nativeSrc": "14746:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14746:15:13"
															},
															"nativeSrc": "14746:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "14746:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14777:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14777:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14780:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14780:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14770:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14770:6:13"
																},
																"nativeSrc": "14770:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14770:15:13"
															},
															"nativeSrc": "14770:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "14770:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14611:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "14611:180:13"
											},
											{
												"body": {
													"nativeSrc": "14840:190:13",
													"nodeType": "YulBlock",
													"src": "14840:190:13",
													"statements": [
														{
															"nativeSrc": "14850:33:13",
															"nodeType": "YulAssignment",
															"src": "14850:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14877:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14877:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14859:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14859:17:13"
																},
																"nativeSrc": "14859:24:13",
																"nodeType": "YulFunctionCall",
																"src": "14859:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14850:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14850:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14973:22:13",
																"nodeType": "YulBlock",
																"src": "14973:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14975:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14975:16:13"
																			},
																			"nativeSrc": "14975:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14975:18:13"
																		},
																		"nativeSrc": "14975:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14975:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14898:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14898:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14905:66:13",
																		"nodeType": "YulLiteral",
																		"src": "14905:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14895:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14895:2:13"
																},
																"nativeSrc": "14895:77:13",
																"nodeType": "YulFunctionCall",
																"src": "14895:77:13"
															},
															"nativeSrc": "14892:103:13",
															"nodeType": "YulIf",
															"src": "14892:103:13"
														},
														{
															"nativeSrc": "15004:20:13",
															"nodeType": "YulAssignment",
															"src": "15004:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15015:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15015:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15022:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15022:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15011:3:13"
																},
																"nativeSrc": "15011:13:13",
																"nodeType": "YulFunctionCall",
																"src": "15011:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15004:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15004:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "14797:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14826:5:13",
														"nodeType": "YulTypedName",
														"src": "14826:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14836:3:13",
														"nodeType": "YulTypedName",
														"src": "14836:3:13",
														"type": ""
													}
												],
												"src": "14797:233:13"
											},
											{
												"body": {
													"nativeSrc": "15150:34:13",
													"nodeType": "YulBlock",
													"src": "15150:34:13",
													"statements": [
														{
															"nativeSrc": "15160:18:13",
															"nodeType": "YulAssignment",
															"src": "15160:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "15175:3:13",
																"nodeType": "YulIdentifier",
																"src": "15175:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15160:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "15160:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15036:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15122:3:13",
														"nodeType": "YulTypedName",
														"src": "15122:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15127:6:13",
														"nodeType": "YulTypedName",
														"src": "15127:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15138:11:13",
														"nodeType": "YulTypedName",
														"src": "15138:11:13",
														"type": ""
													}
												],
												"src": "15036:148:13"
											},
											{
												"body": {
													"nativeSrc": "15300:280:13",
													"nodeType": "YulBlock",
													"src": "15300:280:13",
													"statements": [
														{
															"nativeSrc": "15310:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15310:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15357:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15357:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "15324:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "15324:32:13"
																},
																"nativeSrc": "15324:39:13",
																"nodeType": "YulFunctionCall",
																"src": "15324:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15314:6:13",
																	"nodeType": "YulTypedName",
																	"src": "15314:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15372:96:13",
															"nodeType": "YulAssignment",
															"src": "15372:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15456:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15456:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15461:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15461:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15379:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "15379:76:13"
																},
																"nativeSrc": "15379:89:13",
																"nodeType": "YulFunctionCall",
																"src": "15379:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15372:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15372:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15516:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "15516:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15523:4:13",
																				"nodeType": "YulLiteral",
																				"src": "15523:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15512:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15512:3:13"
																		},
																		"nativeSrc": "15512:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15512:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15530:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15530:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15535:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15535:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "15477:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "15477:34:13"
																},
																"nativeSrc": "15477:65:13",
																"nodeType": "YulFunctionCall",
																"src": "15477:65:13"
															},
															"nativeSrc": "15477:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "15477:65:13"
														},
														{
															"nativeSrc": "15551:23:13",
															"nodeType": "YulAssignment",
															"src": "15551:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15562:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15562:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15567:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15567:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15558:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15558:3:13"
																},
																"nativeSrc": "15558:16:13",
																"nodeType": "YulFunctionCall",
																"src": "15558:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15551:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15551:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15190:390:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15281:5:13",
														"nodeType": "YulTypedName",
														"src": "15281:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15288:3:13",
														"nodeType": "YulTypedName",
														"src": "15288:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15296:3:13",
														"nodeType": "YulTypedName",
														"src": "15296:3:13",
														"type": ""
													}
												],
												"src": "15190:390:13"
											},
											{
												"body": {
													"nativeSrc": "15770:251:13",
													"nodeType": "YulBlock",
													"src": "15770:251:13",
													"statements": [
														{
															"nativeSrc": "15781:102:13",
															"nodeType": "YulAssignment",
															"src": "15781:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15870:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15870:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15879:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15879:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15788:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "15788:81:13"
																},
																"nativeSrc": "15788:95:13",
																"nodeType": "YulFunctionCall",
																"src": "15788:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15781:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15781:3:13"
																}
															]
														},
														{
															"nativeSrc": "15893:102:13",
															"nodeType": "YulAssignment",
															"src": "15893:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15982:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15982:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15991:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15991:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15900:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "15900:81:13"
																},
																"nativeSrc": "15900:95:13",
																"nodeType": "YulFunctionCall",
																"src": "15900:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15893:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15893:3:13"
																}
															]
														},
														{
															"nativeSrc": "16005:10:13",
															"nodeType": "YulAssignment",
															"src": "16005:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "16012:3:13",
																"nodeType": "YulIdentifier",
																"src": "16012:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16005:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16005:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15586:435:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15741:3:13",
														"nodeType": "YulTypedName",
														"src": "15741:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15747:6:13",
														"nodeType": "YulTypedName",
														"src": "15747:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15755:6:13",
														"nodeType": "YulTypedName",
														"src": "15755:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15766:3:13",
														"nodeType": "YulTypedName",
														"src": "15766:3:13",
														"type": ""
													}
												],
												"src": "15586:435:13"
											},
											{
												"body": {
													"nativeSrc": "16181:288:13",
													"nodeType": "YulBlock",
													"src": "16181:288:13",
													"statements": [
														{
															"nativeSrc": "16191:26:13",
															"nodeType": "YulAssignment",
															"src": "16191:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16203:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16203:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16214:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16214:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16199:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16199:3:13"
																},
																"nativeSrc": "16199:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16199:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16191:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16191:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16271:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16271:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16284:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16284:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16295:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16295:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16280:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16280:3:13"
																		},
																		"nativeSrc": "16280:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16280:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16227:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16227:43:13"
																},
																"nativeSrc": "16227:71:13",
																"nodeType": "YulFunctionCall",
																"src": "16227:71:13"
															},
															"nativeSrc": "16227:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "16227:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16352:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16352:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16365:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16365:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16376:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16376:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16361:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16361:3:13"
																		},
																		"nativeSrc": "16361:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16361:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16308:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16308:43:13"
																},
																"nativeSrc": "16308:72:13",
																"nodeType": "YulFunctionCall",
																"src": "16308:72:13"
															},
															"nativeSrc": "16308:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "16308:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16434:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16434:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16447:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16447:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16458:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16458:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16443:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16443:3:13"
																		},
																		"nativeSrc": "16443:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16443:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16390:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16390:43:13"
																},
																"nativeSrc": "16390:72:13",
																"nodeType": "YulFunctionCall",
																"src": "16390:72:13"
															},
															"nativeSrc": "16390:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "16390:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "16027:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16137:9:13",
														"nodeType": "YulTypedName",
														"src": "16137:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16149:6:13",
														"nodeType": "YulTypedName",
														"src": "16149:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16157:6:13",
														"nodeType": "YulTypedName",
														"src": "16157:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16165:6:13",
														"nodeType": "YulTypedName",
														"src": "16165:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16176:4:13",
														"nodeType": "YulTypedName",
														"src": "16176:4:13",
														"type": ""
													}
												],
												"src": "16027:442:13"
											},
											{
												"body": {
													"nativeSrc": "16503:152:13",
													"nodeType": "YulBlock",
													"src": "16503:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16520:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16520:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16523:77:13",
																		"nodeType": "YulLiteral",
																		"src": "16523:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16513:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16513:6:13"
																},
																"nativeSrc": "16513:88:13",
																"nodeType": "YulFunctionCall",
																"src": "16513:88:13"
															},
															"nativeSrc": "16513:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "16513:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16617:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16617:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16620:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16620:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16610:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16610:6:13"
																},
																"nativeSrc": "16610:15:13",
																"nodeType": "YulFunctionCall",
																"src": "16610:15:13"
															},
															"nativeSrc": "16610:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "16610:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16641:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16641:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16644:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16644:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16634:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16634:6:13"
																},
																"nativeSrc": "16634:15:13",
																"nodeType": "YulFunctionCall",
																"src": "16634:15:13"
															},
															"nativeSrc": "16634:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "16634:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16475:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "16475:180:13"
											},
											{
												"body": {
													"nativeSrc": "16719:40:13",
													"nodeType": "YulBlock",
													"src": "16719:40:13",
													"statements": [
														{
															"nativeSrc": "16730:22:13",
															"nodeType": "YulAssignment",
															"src": "16730:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16746:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16746:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16740:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "16740:5:13"
																},
																"nativeSrc": "16740:12:13",
																"nodeType": "YulFunctionCall",
																"src": "16740:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16730:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16730:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "16661:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16702:5:13",
														"nodeType": "YulTypedName",
														"src": "16702:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16712:6:13",
														"nodeType": "YulTypedName",
														"src": "16712:6:13",
														"type": ""
													}
												],
												"src": "16661:98:13"
											},
											{
												"body": {
													"nativeSrc": "16860:73:13",
													"nodeType": "YulBlock",
													"src": "16860:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16877:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16882:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16882:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16870:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16870:6:13"
																},
																"nativeSrc": "16870:19:13",
																"nodeType": "YulFunctionCall",
																"src": "16870:19:13"
															},
															"nativeSrc": "16870:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "16870:19:13"
														},
														{
															"nativeSrc": "16898:29:13",
															"nodeType": "YulAssignment",
															"src": "16898:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16917:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16917:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16922:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16922:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16913:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16913:3:13"
																},
																"nativeSrc": "16913:14:13",
																"nodeType": "YulFunctionCall",
																"src": "16913:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16898:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "16898:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "16765:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16832:3:13",
														"nodeType": "YulTypedName",
														"src": "16832:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16837:6:13",
														"nodeType": "YulTypedName",
														"src": "16837:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16848:11:13",
														"nodeType": "YulTypedName",
														"src": "16848:11:13",
														"type": ""
													}
												],
												"src": "16765:168:13"
											},
											{
												"body": {
													"nativeSrc": "17029:283:13",
													"nodeType": "YulBlock",
													"src": "17029:283:13",
													"statements": [
														{
															"nativeSrc": "17039:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17039:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17085:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17085:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "17053:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "17053:31:13"
																},
																"nativeSrc": "17053:38:13",
																"nodeType": "YulFunctionCall",
																"src": "17053:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17043:6:13",
																	"nodeType": "YulTypedName",
																	"src": "17043:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17100:77:13",
															"nodeType": "YulAssignment",
															"src": "17100:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17165:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17165:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17170:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17170:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "17107:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "17107:57:13"
																},
																"nativeSrc": "17107:70:13",
																"nodeType": "YulFunctionCall",
																"src": "17107:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17100:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17100:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17225:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "17225:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17232:4:13",
																				"nodeType": "YulLiteral",
																				"src": "17232:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17221:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17221:3:13"
																		},
																		"nativeSrc": "17221:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17221:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17239:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17239:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17244:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17244:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "17186:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "17186:34:13"
																},
																"nativeSrc": "17186:65:13",
																"nodeType": "YulFunctionCall",
																"src": "17186:65:13"
															},
															"nativeSrc": "17186:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "17186:65:13"
														},
														{
															"nativeSrc": "17260:46:13",
															"nodeType": "YulAssignment",
															"src": "17260:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17271:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17271:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "17298:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17298:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "17276:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "17276:21:13"
																		},
																		"nativeSrc": "17276:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17276:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17267:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17267:3:13"
																},
																"nativeSrc": "17267:39:13",
																"nodeType": "YulFunctionCall",
																"src": "17267:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17260:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17260:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "16939:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17010:5:13",
														"nodeType": "YulTypedName",
														"src": "17010:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17017:3:13",
														"nodeType": "YulTypedName",
														"src": "17017:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17025:3:13",
														"nodeType": "YulTypedName",
														"src": "17025:3:13",
														"type": ""
													}
												],
												"src": "16939:373:13"
											},
											{
												"body": {
													"nativeSrc": "17518:440:13",
													"nodeType": "YulBlock",
													"src": "17518:440:13",
													"statements": [
														{
															"nativeSrc": "17528:27:13",
															"nodeType": "YulAssignment",
															"src": "17528:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17540:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17540:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17551:3:13",
																		"nodeType": "YulLiteral",
																		"src": "17551:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17536:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17536:3:13"
																},
																"nativeSrc": "17536:19:13",
																"nodeType": "YulFunctionCall",
																"src": "17536:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17528:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17528:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17609:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17609:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17622:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17622:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17633:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17633:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17618:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17618:3:13"
																		},
																		"nativeSrc": "17618:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17618:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17565:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "17565:43:13"
																},
																"nativeSrc": "17565:71:13",
																"nodeType": "YulFunctionCall",
																"src": "17565:71:13"
															},
															"nativeSrc": "17565:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "17565:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17690:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17690:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17703:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17703:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17714:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17714:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17699:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17699:3:13"
																		},
																		"nativeSrc": "17699:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17699:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17646:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "17646:43:13"
																},
																"nativeSrc": "17646:72:13",
																"nodeType": "YulFunctionCall",
																"src": "17646:72:13"
															},
															"nativeSrc": "17646:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "17646:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17772:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17772:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17785:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17785:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17796:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17796:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17781:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17781:3:13"
																		},
																		"nativeSrc": "17781:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17781:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17728:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "17728:43:13"
																},
																"nativeSrc": "17728:72:13",
																"nodeType": "YulFunctionCall",
																"src": "17728:72:13"
															},
															"nativeSrc": "17728:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "17728:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17821:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17821:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17832:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17832:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17817:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17817:3:13"
																		},
																		"nativeSrc": "17817:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17817:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17841:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17841:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17847:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17847:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17837:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17837:3:13"
																		},
																		"nativeSrc": "17837:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17837:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17810:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17810:6:13"
																},
																"nativeSrc": "17810:48:13",
																"nodeType": "YulFunctionCall",
																"src": "17810:48:13"
															},
															"nativeSrc": "17810:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "17810:48:13"
														},
														{
															"nativeSrc": "17867:84:13",
															"nodeType": "YulAssignment",
															"src": "17867:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17937:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17937:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "17946:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17946:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "17875:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "17875:61:13"
																},
																"nativeSrc": "17875:76:13",
																"nodeType": "YulFunctionCall",
																"src": "17875:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17867:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17867:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "17318:640:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17466:9:13",
														"nodeType": "YulTypedName",
														"src": "17466:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17478:6:13",
														"nodeType": "YulTypedName",
														"src": "17478:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17486:6:13",
														"nodeType": "YulTypedName",
														"src": "17486:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17494:6:13",
														"nodeType": "YulTypedName",
														"src": "17494:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17502:6:13",
														"nodeType": "YulTypedName",
														"src": "17502:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17513:4:13",
														"nodeType": "YulTypedName",
														"src": "17513:4:13",
														"type": ""
													}
												],
												"src": "17318:640:13"
											},
											{
												"body": {
													"nativeSrc": "18026:79:13",
													"nodeType": "YulBlock",
													"src": "18026:79:13",
													"statements": [
														{
															"nativeSrc": "18036:22:13",
															"nodeType": "YulAssignment",
															"src": "18036:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18051:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18051:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18045:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18045:5:13"
																},
																"nativeSrc": "18045:13:13",
																"nodeType": "YulFunctionCall",
																"src": "18045:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18036:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18036:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18093:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18093:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "18067:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "18067:25:13"
																},
																"nativeSrc": "18067:32:13",
																"nodeType": "YulFunctionCall",
																"src": "18067:32:13"
															},
															"nativeSrc": "18067:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "18067:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "17964:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18004:6:13",
														"nodeType": "YulTypedName",
														"src": "18004:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18012:3:13",
														"nodeType": "YulTypedName",
														"src": "18012:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18020:5:13",
														"nodeType": "YulTypedName",
														"src": "18020:5:13",
														"type": ""
													}
												],
												"src": "17964:141:13"
											},
											{
												"body": {
													"nativeSrc": "18187:273:13",
													"nodeType": "YulBlock",
													"src": "18187:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "18233:83:13",
																"nodeType": "YulBlock",
																"src": "18233:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18235:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "18235:77:13"
																			},
																			"nativeSrc": "18235:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18235:79:13"
																		},
																		"nativeSrc": "18235:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18235:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18208:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18208:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18217:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18217:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18204:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18204:3:13"
																		},
																		"nativeSrc": "18204:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18204:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18229:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18229:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18200:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18200:3:13"
																},
																"nativeSrc": "18200:32:13",
																"nodeType": "YulFunctionCall",
																"src": "18200:32:13"
															},
															"nativeSrc": "18197:119:13",
															"nodeType": "YulIf",
															"src": "18197:119:13"
														},
														{
															"nativeSrc": "18326:127:13",
															"nodeType": "YulBlock",
															"src": "18326:127:13",
															"statements": [
																{
																	"nativeSrc": "18341:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18341:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18355:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18355:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18345:6:13",
																			"nodeType": "YulTypedName",
																			"src": "18345:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18370:73:13",
																	"nodeType": "YulAssignment",
																	"src": "18370:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18415:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "18415:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18426:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "18426:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18411:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18411:3:13"
																				},
																				"nativeSrc": "18411:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18411:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18435:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18435:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "18380:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "18380:30:13"
																		},
																		"nativeSrc": "18380:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18380:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18370:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "18370:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "18111:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18157:9:13",
														"nodeType": "YulTypedName",
														"src": "18157:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18168:7:13",
														"nodeType": "YulTypedName",
														"src": "18168:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18180:6:13",
														"nodeType": "YulTypedName",
														"src": "18180:6:13",
														"type": ""
													}
												],
												"src": "18111:349:13"
											},
											{
												"body": {
													"nativeSrc": "18592:206:13",
													"nodeType": "YulBlock",
													"src": "18592:206:13",
													"statements": [
														{
															"nativeSrc": "18602:26:13",
															"nodeType": "YulAssignment",
															"src": "18602:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18614:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18614:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18625:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18625:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18610:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18610:3:13"
																},
																"nativeSrc": "18610:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18610:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18602:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18602:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18682:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18682:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18695:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18695:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18706:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18706:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18691:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18691:3:13"
																		},
																		"nativeSrc": "18691:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18691:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18638:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18638:43:13"
																},
																"nativeSrc": "18638:71:13",
																"nodeType": "YulFunctionCall",
																"src": "18638:71:13"
															},
															"nativeSrc": "18638:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "18638:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18763:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18763:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18776:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18776:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18787:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18787:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18772:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18772:3:13"
																		},
																		"nativeSrc": "18772:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18772:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18719:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18719:43:13"
																},
																"nativeSrc": "18719:72:13",
																"nodeType": "YulFunctionCall",
																"src": "18719:72:13"
															},
															"nativeSrc": "18719:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "18719:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18466:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18556:9:13",
														"nodeType": "YulTypedName",
														"src": "18556:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18568:6:13",
														"nodeType": "YulTypedName",
														"src": "18568:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18576:6:13",
														"nodeType": "YulTypedName",
														"src": "18576:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18587:4:13",
														"nodeType": "YulTypedName",
														"src": "18587:4:13",
														"type": ""
													}
												],
												"src": "18466:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not ow\")\n\n        mstore(add(memPtr, 32), \"ner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E5 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1271F09A GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1271F09A EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x4CDC9549 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x241 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1BA5 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1DB1 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x866 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x20B8 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x481 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x491 JUMPI POP PUSH2 0x490 DUP3 PUSH2 0xB21 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4A6 SWAP1 PUSH2 0x2123 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D2 SWAP1 PUSH2 0x2123 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x51D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x500 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x531 DUP3 PUSH2 0xB8A JUMP JUMPDEST POP PUSH2 0x53B DUP3 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x554 DUP3 DUP3 PUSH2 0x54F PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x562 DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C9 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5F1 PUSH2 0xC49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x620 JUMPI POP PUSH2 0x61F DUP2 PUSH2 0x61A PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x656 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xC62 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x683 PUSH2 0x67D PUSH2 0xC49 JUMP JUMPDEST DUP3 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CD DUP4 DUP4 DUP4 PUSH2 0xE21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6EC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x947 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6FC DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x76B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x753 DUP5 PUSH2 0x527 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x77E DUP3 PUSH2 0xF89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x795 DUP3 DUP3 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7A7 SWAP1 PUSH2 0x232A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x821 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86E PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x877 PUSH0 PUSH2 0x103E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x2123 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8DC SWAP1 PUSH2 0x2123 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x927 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x927 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x943 PUSH2 0x93C PUSH2 0xC49 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1101 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x958 PUSH2 0x952 PUSH2 0xC49 JUMP JUMPDEST DUP4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP1 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x126A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9B4 DUP3 PUSH2 0xB8A JUMP JUMPDEST POP PUSH0 PUSH2 0x9BE PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA07 JUMP JUMPDEST DUP1 PUSH2 0x9E6 DUP5 PUSH2 0x129D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9F7 SWAP3 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA5 PUSH2 0xFB7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB15 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1E DUP2 PUSH2 0x103E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB95 DUP4 PUSH2 0x1367 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC07 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC5D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC62 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xC9A JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDCC JUMPI PUSH0 PUSH2 0xCA9 DUP5 PUSH2 0xB8A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD13 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD26 JUMPI POP PUSH2 0xD24 DUP2 DUP5 PUSH2 0xA0F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xD68 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xDCA JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE91 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE88 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE9D DUP4 DUP4 PUSH0 PUSH2 0x13A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF06 SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF83 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF93 DUP3 PUSH2 0xB8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB3 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFBF PUSH2 0xC49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFDD PUSH2 0x879 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103C JUMPI PUSH2 0x1000 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1033 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1171 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1275 DUP5 DUP5 DUP5 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x1281 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x12AB DUP5 PUSH2 0x1778 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12C9 JUMPI PUSH2 0x12C8 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x135C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1351 JUMPI PUSH2 0x1350 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1308 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13AB DUP5 PUSH2 0x1367 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13EC JUMPI PUSH2 0x13EB DUP2 DUP5 DUP7 PUSH2 0x18C9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1477 JUMPI PUSH2 0x142B PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14F6 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x15B5 DUP4 DUP4 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x15C1 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x15C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1772 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1609 PUSH2 0xC49 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1666 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1663 SWAP2 SWAP1 PUSH2 0x24E0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16E7 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x16DF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1770 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1767 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x17D4 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x17CA JUMPI PUSH2 0x17C9 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1811 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1807 JUMPI PUSH2 0x1806 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1840 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1836 JUMPI PUSH2 0x1835 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1869 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x185F JUMPI PUSH2 0x185E PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x188E JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x18B1 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x18A7 JUMPI PUSH2 0x18A6 PUSH2 0x2403 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x18C0 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D4 DUP4 DUP4 DUP4 PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0x1987 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1948 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193F SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x197E SWAP3 SWAP2 SWAP1 PUSH2 0x250B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F3 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1A08 DUP4 DUP4 PUSH0 PUSH2 0x13A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A71 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B36 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AF7 JUMPI POP PUSH2 0x1AF6 DUP5 DUP5 PUSH2 0xA0F JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1B35 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B1D DUP4 PUSH2 0xC10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B84 DUP2 PUSH2 0x1B50 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9F DUP2 PUSH2 0x1B7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC7 DUP5 DUP3 DUP6 ADD PUSH2 0x1B91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE4 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BFD PUSH0 DUP4 ADD DUP5 PUSH2 0x1BDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C45 DUP3 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x1C4F DUP2 DUP6 PUSH2 0x1C0D JUMP JUMPDEST SWAP4 POP PUSH2 0x1C5F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x1C68 DUP2 PUSH2 0x1C2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C8B DUP2 DUP5 PUSH2 0x1C3B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CA5 DUP2 PUSH2 0x1C93 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CAF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC0 DUP2 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CDB JUMPI PUSH2 0x1CDA PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D1A DUP3 PUSH2 0x1CF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2A DUP2 PUSH2 0x1D10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D43 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D52 DUP2 PUSH2 0x1D10 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D5C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D6D DUP2 PUSH2 0x1D49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D96 DUP6 DUP3 DUP7 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DA7 DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DC8 JUMPI PUSH2 0x1DC7 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DD5 DUP7 DUP3 DUP8 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DE6 DUP7 DUP3 DUP8 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DF7 DUP7 DUP3 DUP8 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E18 JUMPI PUSH2 0x1E17 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E25 DUP7 DUP3 DUP8 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E36 DUP7 DUP3 DUP8 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E47 DUP7 DUP3 DUP8 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E66 JUMPI PUSH2 0x1E65 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E73 DUP5 DUP3 DUP6 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E85 DUP2 PUSH2 0x1C93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E9E PUSH0 DUP4 ADD DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EAD DUP2 PUSH2 0x1BD0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EC8 DUP2 PUSH2 0x1EA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F02 DUP6 DUP3 DUP7 ADD PUSH2 0x1EBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F4A DUP3 PUSH2 0x1C2B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F69 JUMPI PUSH2 0x1F68 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7B PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP PUSH2 0x1F87 DUP3 DUP3 PUSH2 0x1F41 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FA6 JUMPI PUSH2 0x1FA5 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST PUSH2 0x1FAF DUP3 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDC PUSH2 0x1FD7 DUP5 PUSH2 0x1F8C JUMP JUMPDEST PUSH2 0x1F72 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FF8 JUMPI PUSH2 0x1FF7 PUSH2 0x1F10 JUMP JUMPDEST JUMPDEST PUSH2 0x2003 DUP5 DUP3 DUP6 PUSH2 0x1FBC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x201F JUMPI PUSH2 0x201E PUSH2 0x1F0C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x202F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FCA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2050 JUMPI PUSH2 0x204F PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x205D DUP8 DUP3 DUP9 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x206E DUP8 DUP3 DUP9 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x207F DUP8 DUP3 DUP9 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A0 JUMPI PUSH2 0x209F PUSH2 0x1B4C JUMP JUMPDEST JUMPDEST PUSH2 0x20AC DUP8 DUP3 DUP9 ADD PUSH2 0x200B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CE JUMPI PUSH2 0x20CD PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20DB DUP6 DUP3 DUP7 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20EC DUP6 DUP3 DUP7 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x213A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x214D JUMPI PUSH2 0x214C PUSH2 0x20F6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21AD PUSH1 0x21 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x21B8 DUP3 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21DA DUP2 PUSH2 0x21A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223B PUSH1 0x38 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x2246 DUP3 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2268 DUP2 PUSH2 0x222F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22C9 PUSH1 0x31 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x22D4 DUP3 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22F6 DUP2 PUSH2 0x22BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2334 DUP3 PUSH2 0x1C93 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2366 JUMPI PUSH2 0x2365 PUSH2 0x22FD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2385 DUP3 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x238F DUP2 DUP6 PUSH2 0x2371 JUMP JUMPDEST SWAP4 POP PUSH2 0x239F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23B6 DUP3 DUP6 PUSH2 0x237B JUMP JUMPDEST SWAP2 POP PUSH2 0x23C2 DUP3 DUP5 PUSH2 0x237B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23E1 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x23EE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0x23FB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D21 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2454 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x245E DUP2 DUP6 PUSH2 0x243A JUMP JUMPDEST SWAP4 POP PUSH2 0x246E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x2477 DUP2 PUSH2 0x1C2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2495 PUSH0 DUP4 ADD DUP8 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x24A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x24AF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E7C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x24C1 DUP2 DUP5 PUSH2 0x244A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24DA DUP2 PUSH2 0x1B7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F5 JUMPI PUSH2 0x24F4 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2502 DUP5 DUP3 DUP6 ADD PUSH2 0x24CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x251E PUSH0 DUP4 ADD DUP6 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x252B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 SWAP11 KECCAK256 0xCB 0xA6 SWAP7 GASPRICE 0xE9 0xB5 0x23 0x4B 0xDD 0xE 0xBD MSTORE8 PUSH24 0xF214C1B32FAA0E3E5F777E3F3297FC4164736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "343:1978:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;846:413:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1267:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1846:296:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;716:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;556:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1920:208:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:277:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:300:3;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;846:413:0:-;924:13;940:16;948:7;940;:16::i;:::-;924:32;;981:5;975:11;;:2;:11;;;967:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1075:5;1059:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;1084:37;1101:5;1108:12;:10;:12::i;:::-;1084:16;:37::i;:::-;1059:62;1037:168;;;;;;;;;;;;:::i;:::-;;;;;;;;;1218:33;1227:2;1231:7;1240:4;1246;1218:8;:33::i;:::-;913:346;846:413;;;:::o;1267:286::-;1411:41;1430:12;:10;:12::i;:::-;1444:7;1411:18;:41::i;:::-;1403:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;1517:28;1527:4;1533:2;1537:7;1517:9;:28::i;:::-;1267:286;;;:::o;4787:132:3:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1846:296:0:-;1930:4;2033:13;2049:16;2057:7;2049;:16::i;:::-;2033:32;;2093:5;2083:15;;:8;:15;;;:51;;;;2126:8;2102:32;;:20;2114:7;2102:11;:20::i;:::-;:32;;;2083:51;2076:58;;;1846:296;;;;:::o;716:122::-;780:7;807:23;822:7;807:14;:23::i;:::-;800:30;;716:122;;;:::o;556:152::-;602:18;623:14;;602:35;;648:25;658:2;662:10;648:9;:25::i;:::-;684:14;;:16;;;;;;;;;:::i;:::-;;;;;;591:117;556:152;:::o;1920:208:3:-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:3:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;1561:277:0:-;1685:41;1704:12;:10;:12::i;:::-;1718:7;1685:18;:41::i;:::-;1677:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;1791:39;1805:4;1811:2;1815:7;1824:5;1791:13;:39::i;:::-;1561:277;;;;:::o;2677:255:3:-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;3928:153::-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;762:146:9:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:3:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;14418:120:3:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;12013:460::-;12112:1;12098:16;;:2;:16;;;12094:87;;12167:1;12137:33;;;;;;;;;;;:::i;:::-;;;;;;;;12094:87;12190:21;12214:32;12222:2;12226:7;12243:1;12214:7;:32::i;:::-;12190:56;;12285:1;12260:27;;:13;:27;;;12256:211;;12333:7;12310:31;;;;;;;;;;;:::i;:::-;;;;;;;;12256:211;12379:4;12362:21;;:13;:21;;;12358:109;;12427:4;12433:7;12442:13;12406:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;12358:109;12084:389;12013:460;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;10633:100::-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:3:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;13771:204::-;13883:28;13893:4;13899:2;13903:7;13883:9;:28::i;:::-;13921:47;13944:4;13950:2;13954:7;13963:4;13921:22;:47::i;:::-;13771:204;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:8:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:3:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;12214:916:11:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7082:368:3:-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;6376:272::-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:::-;5485:6;5493;5501;5550:2;5538:9;5529:7;5525:23;5521:32;5518:119;;;5556:79;;:::i;:::-;5518:119;5676:1;5701:53;5746:7;5737:6;5726:9;5722:22;5701:53;:::i;:::-;5691:63;;5647:117;5803:2;5829:53;5874:7;5865:6;5854:9;5850:22;5829:53;:::i;:::-;5819:63;;5774:118;5931:2;5957:53;6002:7;5993:6;5982:9;5978:22;5957:53;:::i;:::-;5947:63;;5902:118;5408:619;;;;;:::o;6033:329::-;6092:6;6141:2;6129:9;6120:7;6116:23;6112:32;6109:119;;;6147:79;;:::i;:::-;6109:119;6267:1;6292:53;6337:7;6328:6;6317:9;6313:22;6292:53;:::i;:::-;6282:63;;6238:117;6033:329;;;;:::o;6368:118::-;6455:24;6473:5;6455:24;:::i;:::-;6450:3;6443:37;6368:118;;:::o;6492:222::-;6585:4;6623:2;6612:9;6608:18;6600:26;;6636:71;6704:1;6693:9;6689:17;6680:6;6636:71;:::i;:::-;6492:222;;;;:::o;6720:116::-;6790:21;6805:5;6790:21;:::i;:::-;6783:5;6780:32;6770:60;;6826:1;6823;6816:12;6770:60;6720:116;:::o;6842:133::-;6885:5;6923:6;6910:20;6901:29;;6939:30;6963:5;6939:30;:::i;:::-;6842:133;;;;:::o;6981:468::-;7046:6;7054;7103:2;7091:9;7082:7;7078:23;7074:32;7071:119;;;7109:79;;:::i;:::-;7071:119;7229:1;7254:53;7299:7;7290:6;7279:9;7275:22;7254:53;:::i;:::-;7244:63;;7200:117;7356:2;7382:50;7424:7;7415:6;7404:9;7400:22;7382:50;:::i;:::-;7372:60;;7327:115;6981:468;;;;;:::o;7455:117::-;7564:1;7561;7554:12;7578:117;7687:1;7684;7677:12;7701:180;7749:77;7746:1;7739:88;7846:4;7843:1;7836:15;7870:4;7867:1;7860:15;7887:281;7970:27;7992:4;7970:27;:::i;:::-;7962:6;7958:40;8100:6;8088:10;8085:22;8064:18;8052:10;8049:34;8046:62;8043:88;;;8111:18;;:::i;:::-;8043:88;8151:10;8147:2;8140:22;7930:238;7887:281;;:::o;8174:129::-;8208:6;8235:20;;:::i;:::-;8225:30;;8264:33;8292:4;8284:6;8264:33;:::i;:::-;8174:129;;;:::o;8309:307::-;8370:4;8460:18;8452:6;8449:30;8446:56;;;8482:18;;:::i;:::-;8446:56;8520:29;8542:6;8520:29;:::i;:::-;8512:37;;8604:4;8598;8594:15;8586:23;;8309:307;;;:::o;8622:148::-;8720:6;8715:3;8710;8697:30;8761:1;8752:6;8747:3;8743:16;8736:27;8622:148;;;:::o;8776:423::-;8853:5;8878:65;8894:48;8935:6;8894:48;:::i;:::-;8878:65;:::i;:::-;8869:74;;8966:6;8959:5;8952:21;9004:4;8997:5;8993:16;9042:3;9033:6;9028:3;9024:16;9021:25;9018:112;;;9049:79;;:::i;:::-;9018:112;9139:54;9186:6;9181:3;9176;9139:54;:::i;:::-;8859:340;8776:423;;;;;:::o;9218:338::-;9273:5;9322:3;9315:4;9307:6;9303:17;9299:27;9289:122;;9330:79;;:::i;:::-;9289:122;9447:6;9434:20;9472:78;9546:3;9538:6;9531:4;9523:6;9519:17;9472:78;:::i;:::-;9463:87;;9279:277;9218:338;;;;:::o;9562:943::-;9657:6;9665;9673;9681;9730:3;9718:9;9709:7;9705:23;9701:33;9698:120;;;9737:79;;:::i;:::-;9698:120;9857:1;9882:53;9927:7;9918:6;9907:9;9903:22;9882:53;:::i;:::-;9872:63;;9828:117;9984:2;10010:53;10055:7;10046:6;10035:9;10031:22;10010:53;:::i;:::-;10000:63;;9955:118;10112:2;10138:53;10183:7;10174:6;10163:9;10159:22;10138:53;:::i;:::-;10128:63;;10083:118;10268:2;10257:9;10253:18;10240:32;10299:18;10291:6;10288:30;10285:117;;;10321:79;;:::i;:::-;10285:117;10426:62;10480:7;10471:6;10460:9;10456:22;10426:62;:::i;:::-;10416:72;;10211:287;9562:943;;;;;;;:::o;10511:474::-;10579:6;10587;10636:2;10624:9;10615:7;10611:23;10607:32;10604:119;;;10642:79;;:::i;:::-;10604:119;10762:1;10787:53;10832:7;10823:6;10812:9;10808:22;10787:53;:::i;:::-;10777:63;;10733:117;10889:2;10915:53;10960:7;10951:6;10940:9;10936:22;10915:53;:::i;:::-;10905:63;;10860:118;10511:474;;;;;:::o;10991:180::-;11039:77;11036:1;11029:88;11136:4;11133:1;11126:15;11160:4;11157:1;11150:15;11177:320;11221:6;11258:1;11252:4;11248:12;11238:22;;11305:1;11299:4;11295:12;11326:18;11316:81;;11382:4;11374:6;11370:17;11360:27;;11316:81;11444:2;11436:6;11433:14;11413:18;11410:38;11407:84;;11463:18;;:::i;:::-;11407:84;11228:269;11177:320;;;:::o;11503:220::-;11643:34;11639:1;11631:6;11627:14;11620:58;11712:3;11707:2;11699:6;11695:15;11688:28;11503:220;:::o;11729:366::-;11871:3;11892:67;11956:2;11951:3;11892:67;:::i;:::-;11885:74;;11968:93;12057:3;11968:93;:::i;:::-;12086:2;12081:3;12077:12;12070:19;;11729:366;;;:::o;12101:419::-;12267:4;12305:2;12294:9;12290:18;12282:26;;12354:9;12348:4;12344:20;12340:1;12329:9;12325:17;12318:47;12382:131;12508:4;12382:131;:::i;:::-;12374:139;;12101:419;;;:::o;12526:243::-;12666:34;12662:1;12654:6;12650:14;12643:58;12735:26;12730:2;12722:6;12718:15;12711:51;12526:243;:::o;12775:366::-;12917:3;12938:67;13002:2;12997:3;12938:67;:::i;:::-;12931:74;;13014:93;13103:3;13014:93;:::i;:::-;13132:2;13127:3;13123:12;13116:19;;12775:366;;;:::o;13147:419::-;13313:4;13351:2;13340:9;13336:18;13328:26;;13400:9;13394:4;13390:20;13386:1;13375:9;13371:17;13364:47;13428:131;13554:4;13428:131;:::i;:::-;13420:139;;13147:419;;;:::o;13572:236::-;13712:34;13708:1;13700:6;13696:14;13689:58;13781:19;13776:2;13768:6;13764:15;13757:44;13572:236;:::o;13814:366::-;13956:3;13977:67;14041:2;14036:3;13977:67;:::i;:::-;13970:74;;14053:93;14142:3;14053:93;:::i;:::-;14171:2;14166:3;14162:12;14155:19;;13814:366;;;:::o;14186:419::-;14352:4;14390:2;14379:9;14375:18;14367:26;;14439:9;14433:4;14429:20;14425:1;14414:9;14410:17;14403:47;14467:131;14593:4;14467:131;:::i;:::-;14459:139;;14186:419;;;:::o;14611:180::-;14659:77;14656:1;14649:88;14756:4;14753:1;14746:15;14780:4;14777:1;14770:15;14797:233;14836:3;14859:24;14877:5;14859:24;:::i;:::-;14850:33;;14905:66;14898:5;14895:77;14892:103;;14975:18;;:::i;:::-;14892:103;15022:1;15015:5;15011:13;15004:20;;14797:233;;;:::o;15036:148::-;15138:11;15175:3;15160:18;;15036:148;;;;:::o;15190:390::-;15296:3;15324:39;15357:5;15324:39;:::i;:::-;15379:89;15461:6;15456:3;15379:89;:::i;:::-;15372:96;;15477:65;15535:6;15530:3;15523:4;15516:5;15512:16;15477:65;:::i;:::-;15567:6;15562:3;15558:16;15551:23;;15300:280;15190:390;;;;:::o;15586:435::-;15766:3;15788:95;15879:3;15870:6;15788:95;:::i;:::-;15781:102;;15900:95;15991:3;15982:6;15900:95;:::i;:::-;15893:102;;16012:3;16005:10;;15586:435;;;;;:::o;16027:442::-;16176:4;16214:2;16203:9;16199:18;16191:26;;16227:71;16295:1;16284:9;16280:17;16271:6;16227:71;:::i;:::-;16308:72;16376:2;16365:9;16361:18;16352:6;16308:72;:::i;:::-;16390;16458:2;16447:9;16443:18;16434:6;16390:72;:::i;:::-;16027:442;;;;;;:::o;16475:180::-;16523:77;16520:1;16513:88;16620:4;16617:1;16610:15;16644:4;16641:1;16634:15;16661:98;16712:6;16746:5;16740:12;16730:22;;16661:98;;;:::o;16765:168::-;16848:11;16882:6;16877:3;16870:19;16922:4;16917:3;16913:14;16898:29;;16765:168;;;;:::o;16939:373::-;17025:3;17053:38;17085:5;17053:38;:::i;:::-;17107:70;17170:6;17165:3;17107:70;:::i;:::-;17100:77;;17186:65;17244:6;17239:3;17232:4;17225:5;17221:16;17186:65;:::i;:::-;17276:29;17298:6;17276:29;:::i;:::-;17271:3;17267:39;17260:46;;17029:283;16939:373;;;;:::o;17318:640::-;17513:4;17551:3;17540:9;17536:19;17528:27;;17565:71;17633:1;17622:9;17618:17;17609:6;17565:71;:::i;:::-;17646:72;17714:2;17703:9;17699:18;17690:6;17646:72;:::i;:::-;17728;17796:2;17785:9;17781:18;17772:6;17728:72;:::i;:::-;17847:9;17841:4;17837:20;17832:2;17821:9;17817:18;17810:48;17875:76;17946:4;17937:6;17875:76;:::i;:::-;17867:84;;17318:640;;;;;;;:::o;17964:141::-;18020:5;18051:6;18045:13;18036:22;;18067:32;18093:5;18067:32;:::i;:::-;17964:141;;;;:::o;18111:349::-;18180:6;18229:2;18217:9;18208:7;18204:23;18200:32;18197:119;;;18235:79;;:::i;:::-;18197:119;18355:1;18380:63;18435:7;18426:6;18415:9;18411:22;18380:63;:::i;:::-;18370:73;;18326:127;18111:349;;;;:::o;18466:332::-;18587:4;18625:2;18614:9;18610:18;18602:26;;18638:71;18706:1;18695:9;18691:17;18682:6;18638:71;:::i;:::-;18719:72;18787:2;18776:9;18772:18;18763:6;18719:72;:::i;:::-;18466:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1915200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"approve(address,uint256,address)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 343,
									"end": 2321,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 427,
									"end": 548,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 548,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 427,
									"end": 548,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 427,
									"end": 548,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 427,
									"end": 548,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 427,
									"end": 548,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 427,
									"end": 548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 427,
									"end": 548,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 497,
									"end": 509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "53696D706C654E46540000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "534E465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 540,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 536,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 522,
									"end": 540,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 427,
									"end": 548,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2321,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220299a20cba6963ae9b5234bdd0ebd5377f214c1b32faa0e3e5f777e3f3297fc4164736f6c634300081a0033",
									".code": [
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "6A627842"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "6A627842"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1271F09A"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1271F09A"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "4CDC9549"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 2321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 846,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 846,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1267,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1267,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1846,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1846,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1846,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 716,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 716,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 556,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 556,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 556,
											"end": 708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 556,
											"end": 708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 556,
											"end": 708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 556,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 556,
											"end": 708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 556,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1561,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1561,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 924,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 948,
											"end": 955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 940,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 956,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 940,
											"end": 956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 924,
											"end": 956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 924,
											"end": 956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 975,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 975,
											"end": 977,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 975,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 975,
											"end": 986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 967,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 967,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1059,
											"end": 1080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1059,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1059,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1059,
											"end": 1080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1080,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1059,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1101,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1108,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1108,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1108,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1084,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1084,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1059,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1037,
											"end": 1205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1037,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1227,
											"end": 1229,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1238,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1250,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1218,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1218,
											"end": 1251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1251,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1218,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 913,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1430,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1430,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1411,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1452,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1411,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1403,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1403,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1527,
											"end": 1531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1517,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2057,
											"end": 2064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2049,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2093,
											"end": 2098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2083,
											"end": 2134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2102,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2122,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2102,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2134,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2134,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2083,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 716,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 822,
											"end": 829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 807,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 807,
											"end": 830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 807,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 556,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 637,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 623,
											"end": 637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 602,
											"end": 637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 648,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 662,
											"end": 672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 648,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 648,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 648,
											"end": 673,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 648,
											"end": 673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 684,
											"end": 698,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 684,
											"end": 698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 684,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 684,
											"end": 700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 684,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 684,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 591,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 556,
											"end": 708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1704,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1704,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1704,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1716,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1704,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1685,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1685,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1677,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1677,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1805,
											"end": 1809,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1811,
											"end": 1813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1791,
											"end": 1830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1830,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1791,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12112,
											"end": 12113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12098,
											"end": 12100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12167,
											"end": 12168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12190,
											"end": 12211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 12222,
											"end": 12224,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12243,
											"end": 12244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 12214,
											"end": 12246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12190,
											"end": 12246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12190,
											"end": 12246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12285,
											"end": 12286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12260,
											"end": 12273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12333,
											"end": 12340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 12310,
											"end": 12341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12379,
											"end": 12383,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12362,
											"end": 12375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12427,
											"end": 12431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12442,
											"end": 12455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 3,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 12406,
											"end": 12456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12084,
											"end": 12473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13771,
											"end": 13975,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 13771,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 13893,
											"end": 13897,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13899,
											"end": 13901,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13903,
											"end": 13910,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13883,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 13883,
											"end": 13911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 13883,
											"end": 13911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13921,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 13944,
											"end": 13948,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13950,
											"end": 13952,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13954,
											"end": 13961,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13963,
											"end": 13967,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13921,
											"end": 13943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 13921,
											"end": 13968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13921,
											"end": 13968,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 13921,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13771,
											"end": 13975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13771,
											"end": 13975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13771,
											"end": 13975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13771,
											"end": 13975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13771,
											"end": 13975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 8,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 6027,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 5408,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5552,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5538,
											"end": 5547,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5529,
											"end": 5536,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5521,
											"end": 5553,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 5556,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 5746,
											"end": 5753,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5737,
											"end": 5743,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5726,
											"end": 5735,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 5744,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5701,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 5701,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5701,
											"end": 5754,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 5701,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5647,
											"end": 5764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5803,
											"end": 5805,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 5874,
											"end": 5881,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 5871,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5854,
											"end": 5863,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5850,
											"end": 5872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5829,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 5829,
											"end": 5882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5829,
											"end": 5882,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 5829,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5882,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5774,
											"end": 5892,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5957,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 5999,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5982,
											"end": 5991,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 6000,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 5957,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6010,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 5957,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5947,
											"end": 6010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5947,
											"end": 6010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5902,
											"end": 6020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 6027,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 6027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 6027,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 6027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 6027,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 6027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6033,
											"end": 6362,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 6033,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6129,
											"end": 6138,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6120,
											"end": 6127,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6139,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6112,
											"end": 6144,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6109,
											"end": 6228,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6109,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 6109,
											"end": 6228,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6147,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 6147,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 6147,
											"end": 6226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6147,
											"end": 6226,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 6147,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6109,
											"end": 6228,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 6109,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6268,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 6337,
											"end": 6344,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6334,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6317,
											"end": 6326,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6313,
											"end": 6335,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6292,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 6292,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6292,
											"end": 6345,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 6292,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6238,
											"end": 6355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6033,
											"end": 6362,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6033,
											"end": 6362,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6033,
											"end": 6362,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6033,
											"end": 6362,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6033,
											"end": 6362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6486,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 6368,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6455,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6455,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 6455,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6455,
											"end": 6479,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 6455,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6453,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 6480,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6486,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6486,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6492,
											"end": 6714,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 6492,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6589,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6623,
											"end": 6625,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6612,
											"end": 6621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6600,
											"end": 6626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6600,
											"end": 6626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6702,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 6636,
											"end": 6707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6707,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 6636,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6492,
											"end": 6714,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6492,
											"end": 6714,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6492,
											"end": 6714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6492,
											"end": 6714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6492,
											"end": 6714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6720,
											"end": 6836,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6720,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6790,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 6805,
											"end": 6810,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6790,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 6790,
											"end": 6811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6790,
											"end": 6811,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 6790,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6783,
											"end": 6788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6812,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6770,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 6770,
											"end": 6830,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6826,
											"end": 6827,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6823,
											"end": 6824,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6770,
											"end": 6830,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 6770,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6720,
											"end": 6836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6720,
											"end": 6836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6975,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 6842,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6885,
											"end": 6890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6923,
											"end": 6929,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6910,
											"end": 6930,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6930,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6930,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6939,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 6963,
											"end": 6968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6939,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6939,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6939,
											"end": 6969,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 6939,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6975,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6975,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7449,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 6981,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7046,
											"end": 7052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7060,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7105,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7091,
											"end": 7100,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7082,
											"end": 7089,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7078,
											"end": 7101,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7074,
											"end": 7106,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7071,
											"end": 7190,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7071,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 7071,
											"end": 7190,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 7109,
											"end": 7188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7071,
											"end": 7190,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 7071,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7229,
											"end": 7230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 7299,
											"end": 7306,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7290,
											"end": 7296,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7279,
											"end": 7288,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7275,
											"end": 7297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7254,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 7254,
											"end": 7307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7254,
											"end": 7307,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 7254,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7244,
											"end": 7307,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7244,
											"end": 7307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7200,
											"end": 7317,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 7424,
											"end": 7431,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7404,
											"end": 7413,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7400,
											"end": 7422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 7382,
											"end": 7432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7432,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 7382,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7372,
											"end": 7432,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7372,
											"end": 7432,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7327,
											"end": 7442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7449,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7449,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7449,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7455,
											"end": 7572,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 7455,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7564,
											"end": 7565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7561,
											"end": 7562,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7566,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7578,
											"end": 7695,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 7578,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7687,
											"end": 7688,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7685,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7701,
											"end": 7881,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7701,
											"end": 7881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7749,
											"end": 7826,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7746,
											"end": 7747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7739,
											"end": 7827,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7846,
											"end": 7850,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 7843,
											"end": 7844,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7836,
											"end": 7851,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7874,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7860,
											"end": 7875,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7887,
											"end": 8168,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 7887,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7970,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 7992,
											"end": 7996,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7970,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 7970,
											"end": 7997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7970,
											"end": 7997,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 7970,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 7968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7958,
											"end": 7998,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8098,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8085,
											"end": 8107,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8064,
											"end": 8082,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8049,
											"end": 8083,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8046,
											"end": 8108,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8043,
											"end": 8131,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8043,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 8043,
											"end": 8131,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8111,
											"end": 8129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8043,
											"end": 8131,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 8043,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8161,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8147,
											"end": 8149,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8140,
											"end": 8162,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7930,
											"end": 8168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7887,
											"end": 8168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7887,
											"end": 8168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7887,
											"end": 8168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8303,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 8174,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 8235,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 8235,
											"end": 8255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8235,
											"end": 8255,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 8235,
											"end": 8255,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8225,
											"end": 8255,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8225,
											"end": 8255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 8292,
											"end": 8296,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8284,
											"end": 8290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 8264,
											"end": 8297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8297,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 8264,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8303,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8616,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8309,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8452,
											"end": 8458,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8449,
											"end": 8479,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8446,
											"end": 8502,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8446,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 8446,
											"end": 8502,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8482,
											"end": 8500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8446,
											"end": 8502,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 8446,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8520,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 8542,
											"end": 8548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8520,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 8520,
											"end": 8549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8520,
											"end": 8549,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 8520,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8549,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8604,
											"end": 8608,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8598,
											"end": 8602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8594,
											"end": 8609,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8586,
											"end": 8609,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8586,
											"end": 8609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8616,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8616,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8622,
											"end": 8770,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 8622,
											"end": 8770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8720,
											"end": 8726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8710,
											"end": 8713,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8697,
											"end": 8727,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 8761,
											"end": 8762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8752,
											"end": 8758,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8747,
											"end": 8750,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8743,
											"end": 8759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8736,
											"end": 8763,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8622,
											"end": 8770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8622,
											"end": 8770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8622,
											"end": 8770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8622,
											"end": 8770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 9199,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 8776,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8853,
											"end": 8858,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8878,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 8894,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 8935,
											"end": 8941,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8894,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8894,
											"end": 8942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8894,
											"end": 8942,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 8894,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8878,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 8878,
											"end": 8943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8878,
											"end": 8943,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 8878,
											"end": 8943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 8943,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 8943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8959,
											"end": 8964,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8952,
											"end": 8973,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9004,
											"end": 9008,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8997,
											"end": 9002,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 9009,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9045,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9039,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9028,
											"end": 9031,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9024,
											"end": 9040,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9046,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9018,
											"end": 9130,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9018,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 9018,
											"end": 9130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9049,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 9049,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 9049,
											"end": 9128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9049,
											"end": 9128,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 9049,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9018,
											"end": 9130,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 9018,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9139,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 9186,
											"end": 9192,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9181,
											"end": 9184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9179,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9139,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 9139,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9139,
											"end": 9193,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 9139,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8859,
											"end": 9199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 9199,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 9199,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 9199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 9199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 9199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 9199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9218,
											"end": 9556,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 9218,
											"end": 9556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9273,
											"end": 9278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9322,
											"end": 9325,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9319,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9303,
											"end": 9320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9299,
											"end": 9326,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9289,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 9289,
											"end": 9411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9330,
											"end": 9409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 9330,
											"end": 9409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 9330,
											"end": 9409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9330,
											"end": 9409,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 9330,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9289,
											"end": 9411,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 9289,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9434,
											"end": 9454,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9472,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 9546,
											"end": 9549,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9538,
											"end": 9544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9531,
											"end": 9535,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9523,
											"end": 9529,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9519,
											"end": 9536,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9472,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 9472,
											"end": 9550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9472,
											"end": 9550,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 9472,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9463,
											"end": 9550,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9463,
											"end": 9550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9279,
											"end": 9556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9218,
											"end": 9556,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9218,
											"end": 9556,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9218,
											"end": 9556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9218,
											"end": 9556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9218,
											"end": 9556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 10505,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 9562,
											"end": 10505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9657,
											"end": 9663,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9665,
											"end": 9671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9673,
											"end": 9679,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9730,
											"end": 9733,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9718,
											"end": 9727,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9709,
											"end": 9716,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9705,
											"end": 9728,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9701,
											"end": 9734,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9698,
											"end": 9818,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9698,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 9698,
											"end": 9818,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 9737,
											"end": 9816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 9737,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9698,
											"end": 9818,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 9698,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9857,
											"end": 9858,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 9927,
											"end": 9934,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9918,
											"end": 9924,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9907,
											"end": 9916,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 9882,
											"end": 9935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 9882,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9872,
											"end": 9935,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9872,
											"end": 9935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9828,
											"end": 9945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9984,
											"end": 9986,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10010,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 10055,
											"end": 10062,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10046,
											"end": 10052,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10035,
											"end": 10044,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10031,
											"end": 10053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 10010,
											"end": 10063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10063,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 10010,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10000,
											"end": 10063,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10000,
											"end": 10063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 10073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10112,
											"end": 10114,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10138,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 10183,
											"end": 10190,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10174,
											"end": 10180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10163,
											"end": 10172,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10159,
											"end": 10181,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10138,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 10138,
											"end": 10191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10138,
											"end": 10191,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 10138,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10128,
											"end": 10191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10128,
											"end": 10191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10083,
											"end": 10201,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10268,
											"end": 10270,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10257,
											"end": 10266,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10253,
											"end": 10271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10272,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10291,
											"end": 10297,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10288,
											"end": 10318,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10285,
											"end": 10402,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10285,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 10285,
											"end": 10402,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10321,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 10321,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 10321,
											"end": 10400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10321,
											"end": 10400,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 10321,
											"end": 10400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10285,
											"end": 10402,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 10285,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10426,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 10480,
											"end": 10487,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10477,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10460,
											"end": 10469,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10456,
											"end": 10478,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10426,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 10426,
											"end": 10488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10426,
											"end": 10488,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 10426,
											"end": 10488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10416,
											"end": 10488,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10416,
											"end": 10488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10211,
											"end": 10498,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 10505,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 10505,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 10505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 10505,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 10505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 10505,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 10505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 10505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10985,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 10511,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10579,
											"end": 10585,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10587,
											"end": 10593,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10636,
											"end": 10638,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10624,
											"end": 10633,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10615,
											"end": 10622,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10611,
											"end": 10634,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10639,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10604,
											"end": 10723,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10604,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 10604,
											"end": 10723,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10642,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 10642,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 10642,
											"end": 10721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10642,
											"end": 10721,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 10642,
											"end": 10721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10604,
											"end": 10723,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 10604,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10762,
											"end": 10763,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10787,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 10832,
											"end": 10839,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10823,
											"end": 10829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10812,
											"end": 10821,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10808,
											"end": 10830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10787,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 10787,
											"end": 10840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10787,
											"end": 10840,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 10787,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10777,
											"end": 10840,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10777,
											"end": 10840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10733,
											"end": 10850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10889,
											"end": 10891,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10915,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 10960,
											"end": 10967,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10951,
											"end": 10957,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10940,
											"end": 10949,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10936,
											"end": 10958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10915,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 10915,
											"end": 10968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10915,
											"end": 10968,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 10915,
											"end": 10968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10905,
											"end": 10968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10905,
											"end": 10968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10860,
											"end": 10978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10985,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10985,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10991,
											"end": 11171,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 10991,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11039,
											"end": 11116,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11036,
											"end": 11037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11029,
											"end": 11117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11136,
											"end": 11140,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 11133,
											"end": 11134,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11126,
											"end": 11141,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11157,
											"end": 11158,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11177,
											"end": 11497,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 11177,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11221,
											"end": 11227,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 11252,
											"end": 11256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11305,
											"end": 11306,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11299,
											"end": 11303,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11344,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11316,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 11316,
											"end": 11397,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11382,
											"end": 11386,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 11374,
											"end": 11380,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11370,
											"end": 11387,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11316,
											"end": 11397,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 11316,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11444,
											"end": 11446,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11436,
											"end": 11442,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11410,
											"end": 11448,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11407,
											"end": 11491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 11407,
											"end": 11491,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11463,
											"end": 11481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 11463,
											"end": 11481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 11463,
											"end": 11481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11463,
											"end": 11481,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 11463,
											"end": 11481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11407,
											"end": 11491,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 11407,
											"end": 11491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11228,
											"end": 11497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11177,
											"end": 11497,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11177,
											"end": 11497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11177,
											"end": 11497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11177,
											"end": 11497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11503,
											"end": 11723,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 11503,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11643,
											"end": 11677,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11639,
											"end": 11640,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11631,
											"end": 11637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11627,
											"end": 11641,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11620,
											"end": 11678,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11712,
											"end": 11715,
											"name": "PUSH",
											"source": 13,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11707,
											"end": 11709,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11699,
											"end": 11705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11695,
											"end": 11710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11688,
											"end": 11716,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11503,
											"end": 11723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11503,
											"end": 11723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 12095,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 11729,
											"end": 12095,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11871,
											"end": 11874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11892,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 11956,
											"end": 11958,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 11951,
											"end": 11954,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11892,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 11892,
											"end": 11959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11892,
											"end": 11959,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 11892,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11885,
											"end": 11959,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11885,
											"end": 11959,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11968,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 12057,
											"end": 12060,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11968,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 11968,
											"end": 12061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11968,
											"end": 12061,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 11968,
											"end": 12061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12086,
											"end": 12088,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12081,
											"end": 12084,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12077,
											"end": 12089,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12070,
											"end": 12089,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12070,
											"end": 12089,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 12095,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 12095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 12095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 12095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12101,
											"end": 12520,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 12101,
											"end": 12520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12267,
											"end": 12271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12305,
											"end": 12307,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12294,
											"end": 12303,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12290,
											"end": 12308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12282,
											"end": 12308,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12282,
											"end": 12308,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12354,
											"end": 12363,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12348,
											"end": 12352,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12344,
											"end": 12364,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12340,
											"end": 12341,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12329,
											"end": 12338,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12325,
											"end": 12342,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12318,
											"end": 12365,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12382,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 12508,
											"end": 12512,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12382,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 12382,
											"end": 12513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12382,
											"end": 12513,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 12382,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12513,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12513,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12101,
											"end": 12520,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12101,
											"end": 12520,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12101,
											"end": 12520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12101,
											"end": 12520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12526,
											"end": 12769,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 12526,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12666,
											"end": 12700,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 12662,
											"end": 12663,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12654,
											"end": 12660,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12650,
											"end": 12664,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 12701,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12735,
											"end": 12761,
											"name": "PUSH",
											"source": 13,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 12730,
											"end": 12732,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12722,
											"end": 12728,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12718,
											"end": 12733,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12711,
											"end": 12762,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12526,
											"end": 12769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12526,
											"end": 12769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12775,
											"end": 13141,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 12775,
											"end": 13141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12917,
											"end": 12920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12938,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 13002,
											"end": 13004,
											"name": "PUSH",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 12997,
											"end": 13000,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12938,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 12938,
											"end": 13005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12938,
											"end": 13005,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 12938,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12931,
											"end": 13005,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12931,
											"end": 13005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13014,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 13103,
											"end": 13106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13014,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 13014,
											"end": 13107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13014,
											"end": 13107,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 13014,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13127,
											"end": 13130,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13116,
											"end": 13135,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13116,
											"end": 13135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12775,
											"end": 13141,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12775,
											"end": 13141,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12775,
											"end": 13141,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12775,
											"end": 13141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13566,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 13147,
											"end": 13566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13351,
											"end": 13353,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13340,
											"end": 13349,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13336,
											"end": 13354,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13328,
											"end": 13354,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13328,
											"end": 13354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13400,
											"end": 13409,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13394,
											"end": 13398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13390,
											"end": 13410,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13386,
											"end": 13387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13384,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13388,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13428,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 13554,
											"end": 13558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13428,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 13428,
											"end": 13559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13428,
											"end": 13559,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 13428,
											"end": 13559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13420,
											"end": 13559,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13420,
											"end": 13559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13566,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13566,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13572,
											"end": 13808,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 13572,
											"end": 13808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13712,
											"end": 13746,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 13708,
											"end": 13709,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13700,
											"end": 13706,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13696,
											"end": 13710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13689,
											"end": 13747,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13781,
											"end": 13800,
											"name": "PUSH",
											"source": 13,
											"value": "776E6572206E6F7220617070726F766564000000000000000000000000000000"
										},
										{
											"begin": 13776,
											"end": 13778,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13768,
											"end": 13774,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13764,
											"end": 13779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13757,
											"end": 13801,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13572,
											"end": 13808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13572,
											"end": 13808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13814,
											"end": 14180,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 13814,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13956,
											"end": 13959,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13977,
											"end": 14044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 14041,
											"end": 14043,
											"name": "PUSH",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 14036,
											"end": 14039,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13977,
											"end": 14044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 13977,
											"end": 14044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13977,
											"end": 14044,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 13977,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13970,
											"end": 14044,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13970,
											"end": 14044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14053,
											"end": 14146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 14142,
											"end": 14145,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14053,
											"end": 14146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 14053,
											"end": 14146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14053,
											"end": 14146,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 14053,
											"end": 14146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14171,
											"end": 14173,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14166,
											"end": 14169,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14162,
											"end": 14174,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14155,
											"end": 14174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14155,
											"end": 14174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13814,
											"end": 14180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13814,
											"end": 14180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13814,
											"end": 14180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13814,
											"end": 14180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14186,
											"end": 14605,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 14186,
											"end": 14605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14352,
											"end": 14356,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14390,
											"end": 14392,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14379,
											"end": 14388,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14367,
											"end": 14393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14367,
											"end": 14393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14439,
											"end": 14448,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14433,
											"end": 14437,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14429,
											"end": 14449,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14425,
											"end": 14426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14414,
											"end": 14423,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14410,
											"end": 14427,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14403,
											"end": 14450,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14467,
											"end": 14598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 14593,
											"end": 14597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14467,
											"end": 14598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 14467,
											"end": 14598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14467,
											"end": 14598,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 14467,
											"end": 14598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14459,
											"end": 14598,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14459,
											"end": 14598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14186,
											"end": 14605,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14186,
											"end": 14605,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14186,
											"end": 14605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14186,
											"end": 14605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14611,
											"end": 14791,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 14611,
											"end": 14791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14659,
											"end": 14736,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14656,
											"end": 14657,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14649,
											"end": 14737,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14756,
											"end": 14760,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 14753,
											"end": 14754,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14746,
											"end": 14761,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14780,
											"end": 14784,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14777,
											"end": 14778,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14770,
											"end": 14785,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 15030,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 14797,
											"end": 15030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14836,
											"end": 14839,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14859,
											"end": 14883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 14877,
											"end": 14882,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14859,
											"end": 14883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 14859,
											"end": 14883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14859,
											"end": 14883,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 14859,
											"end": 14883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14850,
											"end": 14883,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14850,
											"end": 14883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14905,
											"end": 14971,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14898,
											"end": 14903,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14895,
											"end": 14972,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14892,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 14892,
											"end": 14995,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14975,
											"end": 14993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 14975,
											"end": 14993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 14975,
											"end": 14993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14975,
											"end": 14993,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 14975,
											"end": 14993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14892,
											"end": 14995,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 14892,
											"end": 14995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15022,
											"end": 15023,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15015,
											"end": 15020,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15011,
											"end": 15024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15004,
											"end": 15024,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15004,
											"end": 15024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 15030,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 15030,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 15030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 15030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15184,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 15036,
											"end": 15184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15138,
											"end": 15149,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15175,
											"end": 15178,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15160,
											"end": 15178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15160,
											"end": 15178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15184,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15184,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15190,
											"end": 15580,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 15190,
											"end": 15580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15296,
											"end": 15299,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15324,
											"end": 15363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 15357,
											"end": 15362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15324,
											"end": 15363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 15324,
											"end": 15363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15324,
											"end": 15363,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 15324,
											"end": 15363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15379,
											"end": 15468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 15461,
											"end": 15467,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15456,
											"end": 15459,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15379,
											"end": 15468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 15379,
											"end": 15468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15379,
											"end": 15468,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 15379,
											"end": 15468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15372,
											"end": 15468,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15372,
											"end": 15468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15477,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 15535,
											"end": 15541,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15530,
											"end": 15533,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15523,
											"end": 15527,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15516,
											"end": 15521,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15512,
											"end": 15528,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15477,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 15477,
											"end": 15542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15477,
											"end": 15542,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 15477,
											"end": 15542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15567,
											"end": 15573,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15562,
											"end": 15565,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15558,
											"end": 15574,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15551,
											"end": 15574,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15551,
											"end": 15574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15300,
											"end": 15580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15190,
											"end": 15580,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15190,
											"end": 15580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15190,
											"end": 15580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15190,
											"end": 15580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15190,
											"end": 15580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15586,
											"end": 16021,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 15586,
											"end": 16021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15766,
											"end": 15769,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15788,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 15879,
											"end": 15882,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15870,
											"end": 15876,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15788,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 15788,
											"end": 15883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15788,
											"end": 15883,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 15788,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15781,
											"end": 15883,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15781,
											"end": 15883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15900,
											"end": 15995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 15991,
											"end": 15994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 15988,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15900,
											"end": 15995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 15900,
											"end": 15995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15900,
											"end": 15995,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 15900,
											"end": 15995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15893,
											"end": 15995,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15893,
											"end": 15995,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16015,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16005,
											"end": 16015,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16005,
											"end": 16015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15586,
											"end": 16021,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15586,
											"end": 16021,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15586,
											"end": 16021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15586,
											"end": 16021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15586,
											"end": 16021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15586,
											"end": 16021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16469,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 16027,
											"end": 16469,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16214,
											"end": 16216,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 16203,
											"end": 16212,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16199,
											"end": 16217,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16191,
											"end": 16217,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16191,
											"end": 16217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16227,
											"end": 16298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 16295,
											"end": 16296,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16284,
											"end": 16293,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16280,
											"end": 16297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16271,
											"end": 16277,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16227,
											"end": 16298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 16227,
											"end": 16298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16227,
											"end": 16298,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 16227,
											"end": 16298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16308,
											"end": 16380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 16376,
											"end": 16378,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16365,
											"end": 16374,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16361,
											"end": 16379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16352,
											"end": 16358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16308,
											"end": 16380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 16308,
											"end": 16380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16308,
											"end": 16380,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 16308,
											"end": 16380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16390,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 16458,
											"end": 16460,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16447,
											"end": 16456,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16443,
											"end": 16461,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16434,
											"end": 16440,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16390,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 16390,
											"end": 16462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16390,
											"end": 16462,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 16390,
											"end": 16462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16469,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16469,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16469,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16469,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16469,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16469,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16475,
											"end": 16655,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 16475,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16523,
											"end": 16600,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16520,
											"end": 16521,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16513,
											"end": 16601,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16620,
											"end": 16624,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 16617,
											"end": 16618,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16610,
											"end": 16625,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16644,
											"end": 16648,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16641,
											"end": 16642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16634,
											"end": 16649,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 16759,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 16661,
											"end": 16759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16712,
											"end": 16718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16746,
											"end": 16751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16740,
											"end": 16752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16730,
											"end": 16752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16730,
											"end": 16752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 16759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 16759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 16759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 16759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16765,
											"end": 16933,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 16765,
											"end": 16933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16848,
											"end": 16859,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16882,
											"end": 16888,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16877,
											"end": 16880,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16870,
											"end": 16889,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16922,
											"end": 16926,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16917,
											"end": 16920,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16898,
											"end": 16927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16898,
											"end": 16927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16765,
											"end": 16933,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16765,
											"end": 16933,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16765,
											"end": 16933,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16765,
											"end": 16933,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16765,
											"end": 16933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16939,
											"end": 17312,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 16939,
											"end": 17312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17025,
											"end": 17028,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17053,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 17085,
											"end": 17090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17053,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 17053,
											"end": 17091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17053,
											"end": 17091,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 17053,
											"end": 17091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17107,
											"end": 17177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 17170,
											"end": 17176,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17165,
											"end": 17168,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17107,
											"end": 17177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 17107,
											"end": 17177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17107,
											"end": 17177,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 17107,
											"end": 17177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17100,
											"end": 17177,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17100,
											"end": 17177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 17244,
											"end": 17250,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17239,
											"end": 17242,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17232,
											"end": 17236,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17225,
											"end": 17230,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17221,
											"end": 17237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 17186,
											"end": 17251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17251,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 17186,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17276,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 17298,
											"end": 17304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17276,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 17276,
											"end": 17305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17276,
											"end": 17305,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 17276,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17271,
											"end": 17274,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17267,
											"end": 17306,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17260,
											"end": 17306,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17260,
											"end": 17306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17029,
											"end": 17312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16939,
											"end": 17312,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16939,
											"end": 17312,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16939,
											"end": 17312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16939,
											"end": 17312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16939,
											"end": 17312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17318,
											"end": 17958,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 17318,
											"end": 17958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17551,
											"end": 17554,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 17540,
											"end": 17549,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17536,
											"end": 17555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17528,
											"end": 17555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17528,
											"end": 17555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17565,
											"end": 17636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 17633,
											"end": 17634,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17622,
											"end": 17631,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17618,
											"end": 17635,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17609,
											"end": 17615,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 17565,
											"end": 17636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 17565,
											"end": 17636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17565,
											"end": 17636,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 17565,
											"end": 17636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17646,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 17714,
											"end": 17716,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17699,
											"end": 17717,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17690,
											"end": 17696,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17646,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 17646,
											"end": 17718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17646,
											"end": 17718,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 17646,
											"end": 17718,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17728,
											"end": 17800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 17796,
											"end": 17798,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17785,
											"end": 17794,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17781,
											"end": 17799,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17772,
											"end": 17778,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17728,
											"end": 17800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 17728,
											"end": 17800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17728,
											"end": 17800,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 17728,
											"end": 17800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17847,
											"end": 17856,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17841,
											"end": 17845,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17837,
											"end": 17857,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17832,
											"end": 17834,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 17821,
											"end": 17830,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17817,
											"end": 17835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17810,
											"end": 17858,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17875,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 17946,
											"end": 17950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17937,
											"end": 17943,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17875,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 17875,
											"end": 17951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17875,
											"end": 17951,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 17875,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17867,
											"end": 17951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17867,
											"end": 17951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17318,
											"end": 17958,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 17318,
											"end": 17958,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 17318,
											"end": 17958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17318,
											"end": 17958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17318,
											"end": 17958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17318,
											"end": 17958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17318,
											"end": 17958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17318,
											"end": 17958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17964,
											"end": 18105,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 17964,
											"end": 18105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18020,
											"end": 18025,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18051,
											"end": 18057,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18045,
											"end": 18058,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18036,
											"end": 18058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18036,
											"end": 18058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18067,
											"end": 18099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 18093,
											"end": 18098,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18067,
											"end": 18099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 18067,
											"end": 18099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18067,
											"end": 18099,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 18067,
											"end": 18099,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17964,
											"end": 18105,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17964,
											"end": 18105,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17964,
											"end": 18105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17964,
											"end": 18105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17964,
											"end": 18105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18111,
											"end": 18460,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 18111,
											"end": 18460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18180,
											"end": 18186,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18229,
											"end": 18231,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18217,
											"end": 18226,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18208,
											"end": 18215,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18204,
											"end": 18227,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18200,
											"end": 18232,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 18197,
											"end": 18316,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18197,
											"end": 18316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 18197,
											"end": 18316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18235,
											"end": 18314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 18235,
											"end": 18314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 18235,
											"end": 18314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18235,
											"end": 18314,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 18235,
											"end": 18314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18197,
											"end": 18316,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 18197,
											"end": 18316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18355,
											"end": 18356,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18380,
											"end": 18443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 18435,
											"end": 18442,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18426,
											"end": 18432,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18415,
											"end": 18424,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18411,
											"end": 18433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18380,
											"end": 18443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 18380,
											"end": 18443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18380,
											"end": 18443,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 18380,
											"end": 18443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18370,
											"end": 18443,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18370,
											"end": 18443,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18326,
											"end": 18453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18111,
											"end": 18460,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18111,
											"end": 18460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18111,
											"end": 18460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18111,
											"end": 18460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18111,
											"end": 18460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18466,
											"end": 18798,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 18466,
											"end": 18798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18587,
											"end": 18591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18625,
											"end": 18627,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18614,
											"end": 18623,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18610,
											"end": 18628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18602,
											"end": 18628,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18602,
											"end": 18628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18638,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 18706,
											"end": 18707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18695,
											"end": 18704,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18691,
											"end": 18708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18682,
											"end": 18688,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18638,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 18638,
											"end": 18709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18638,
											"end": 18709,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 18638,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18719,
											"end": 18791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 18787,
											"end": 18789,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18776,
											"end": 18785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18772,
											"end": 18790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18763,
											"end": 18769,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18719,
											"end": 18791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 18719,
											"end": 18791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18719,
											"end": 18791,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 18719,
											"end": 18791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18466,
											"end": 18798,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18466,
											"end": 18798,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18466,
											"end": 18798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18466,
											"end": 18798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18466,
											"end": 18798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18466,
											"end": 18798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"contracts/SimpleNft.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_isApprovedOrOwner(address,uint256)": "4cdc9549",
							"approve(address,uint256)": "095ea7b3",
							"approve(address,uint256,address)": "1271f09a",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleNft.sol\":\"SimpleNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleNft.sol\":{\"keccak256\":\"0x206aad635e185582da3183e11e03ae352eec3813fddb9fd1c629e5e77c28d3e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df62be7270a77370b1bc1daf0271163d6eea82789f7aebf7c63e090c2f74a23b\",\"dweb:/ipfs/QmP8krByw8yJMDes38YcFmEkN65Uk8bPDvLXSrHxsp7Rpo\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 502,
								"contract": "contracts/SimpleNft.sol:SimpleNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 504,
								"contract": "contracts/SimpleNft.sol:SimpleNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 508,
								"contract": "contracts/SimpleNft.sol:SimpleNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 512,
								"contract": "contracts/SimpleNft.sol:SimpleNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 516,
								"contract": "contracts/SimpleNft.sol:SimpleNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 522,
								"contract": "contracts/SimpleNft.sol:SimpleNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 193,
								"contract": "contracts/SimpleNft.sol:SimpleNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "contracts/SimpleNft.sol:SimpleNFT",
								"label": "tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 193,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 502,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 504,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 508,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 512,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 516,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 522,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220aa0ff2ee2569bad2260a49a359b1a0f9bcd2b88075cc0e432379a63232c856f264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220aa0ff2ee2569bad2260a49a359b1a0f9bcd2b88075cc0e432379a63232c856f264736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xF CALLCODE 0xEE 0x25 PUSH10 0xBAD2260A49A359B1A0F9 0xBC 0xD2 0xB8 DUP1 PUSH22 0xCC0E432379A63232C856F264736F6C634300081A0033 ",
							"sourceMap": "251:2847:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220aa0ff2ee2569bad2260a49a359b1a0f9bcd2b88075cc0e432379a63232c856f264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xF CALLCODE 0xEE 0x25 PUSH10 0xBAD2260A49A359B1A0F9 0xBC 0xD2 0xB8 DUP1 PUSH22 0xCC0E432379A63232C856F264736F6C634300081A0033 ",
							"sourceMap": "251:2847:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aa0ff2ee2569bad2260a49a359b1a0f9bcd2b88075cc0e432379a63232c856f264736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/SimpleNft.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e1e8a0160a7f533b3c5860f12838ae390dfdc133beecf4424f394109167d95064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e1e8a0160a7f533b3c5860f12838ae390dfdc133beecf4424f394109167d95064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x1E DUP11 ADD PUSH1 0xA7 CREATE2 CALLER 0xB3 0xC5 DUP7 0xF SLT DUP4 DUP11 0xE3 SWAP1 0xDF 0xDC SGT EXTCODESIZE 0xEE 0xCF PREVRANDAO 0x24 RETURN SWAP5 LT SWAP2 PUSH8 0xD95064736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e1e8a0160a7f533b3c5860f12838ae390dfdc133beecf4424f394109167d95064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x1E DUP11 ADD PUSH1 0xA7 CREATE2 CALLER 0xB3 0xC5 DUP7 0xF SLT DUP4 DUP11 0xE3 SWAP1 0xDF 0xDC SGT EXTCODESIZE 0xEE 0xCF PREVRANDAO 0x24 RETURN SWAP5 LT SWAP2 PUSH8 0xD95064736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e1e8a0160a7f533b3c5860f12838ae390dfdc133beecf4424f394109167d95064736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/SimpleNft.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a04ec07e67c51a2ea5b6d67871319a596f6f02f5ffccad5a033bb1093c086e6664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a04ec07e67c51a2ea5b6d67871319a596f6f02f5ffccad5a033bb1093c086e6664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x4E 0xC0 PUSH31 0x67C51A2EA5B6D67871319A596F6F02F5FFCCAD5A033BB1093C086E6664736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "216:1047:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a04ec07e67c51a2ea5b6d67871319a596f6f02f5ffccad5a033bb1093c086e6664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x4E 0xC0 PUSH31 0x67C51A2EA5B6D67871319A596F6F02F5FFCCAD5A033BB1093C086E6664736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "216:1047:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a04ec07e67c51a2ea5b6d67871319a596f6f02f5ffccad5a033bb1093c086e6664736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"contracts/SimpleNft.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SimpleNft.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleNft.sol",
					"exportedSymbols": {
						"Context": [
							1671
						],
						"ERC165": [
							1950
						],
						"ERC721": [
							1478
						],
						"IERC165": [
							1962
						],
						"IERC721": [
							1595
						],
						"IERC721Errors": [
							422
						],
						"IERC721Metadata": [
							1641
						],
						"IERC721Receiver": [
							1613
						],
						"Ownable": [
							332
						],
						"SimpleNFT": [
							184
						],
						"Strings": [
							1926
						]
					},
					"id": 185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 1479,
							"src": "122:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 333,
							"src": "234:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC721",
										"nameLocations": [
											"365:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1478,
										"src": "365:6:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "365:6:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "Ownable",
										"nameLocations": [
											"373:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 332,
										"src": "373:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "373:7:0"
								}
							],
							"canonicalName": "SimpleNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184,
								332,
								1478,
								422,
								1641,
								1595,
								1950,
								1962,
								1671
							],
							"name": "SimpleNFT",
							"nameLocation": "352:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "tokenIdCounter",
									"nameLocation": "404:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "388:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "388:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "511:37:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "522:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "522:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "522:18:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53696d706c654e4654",
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "468:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ec267fca141c764221852299d9f5858d47427ee7d73224d7f49061ac8e3af920",
														"typeString": "literal_string \"SimpleNFT\""
													},
													"value": "SimpleNFT"
												},
												{
													"hexValue": "534e4654",
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a18789003a02245e0d622227aa1c8c4381221a4274a0fd7a60fd5b2a63f59639",
														"typeString": "literal_string \"SNFT\""
													},
													"value": "SNFT"
												}
											],
											"id": 16,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 13,
												"name": "ERC721",
												"nameLocations": [
													"461:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1478,
												"src": "461:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "461:27:0"
										},
										{
											"arguments": [
												{
													"id": 18,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "497:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 19,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 17,
												"name": "Ownable",
												"nameLocations": [
													"489:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 332,
												"src": "489:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "489:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "447:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "439:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:22:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:0:0"
									},
									"scope": 184,
									"src": "427:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "591:117:0",
										"statements": [
											{
												"assignments": [
													32
												],
												"declarations": [
													{
														"constant": false,
														"id": 32,
														"mutability": "mutable",
														"name": "newTokenId",
														"nameLocation": "610:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "602:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 31,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "602:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"id": 33,
													"name": "tokenIdCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "623:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "602:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "658:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 37,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "662:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 35,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1100,
															1126
														],
														"referencedDeclaration": 1100,
														"src": "648:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "648:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "648:25:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "684:16:0",
													"subExpression": {
														"id": 40,
														"name": "tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "684:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "684:16:0"
											}
										]
									},
									"functionSelector": "6a627842",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "565:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "578:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "570:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:12:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:0:0"
									},
									"scope": 184,
									"src": "556:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										611
									],
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "789:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 54,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 52,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1478_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "814:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 611,
														"src": "807:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "807:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 51,
												"id": 56,
												"nodeType": "Return",
												"src": "800:30:0"
											}
										]
									},
									"functionSelector": "6352211e",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "725:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 48,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "750:8:0"
									},
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "741:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "733:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:17:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "780:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:9:0"
									},
									"scope": 184,
									"src": "716:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "913:346:0",
										"statements": [
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "932:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "924:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 67,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "924:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 72,
												"initialValue": {
													"arguments": [
														{
															"id": 70,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 69,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "924:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "975:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 75,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "981:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "975:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "988:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "967:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "967:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 81,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "1059:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1059:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 83,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 68,
																	"src": "1075:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1059:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 86,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 68,
																		"src": "1101:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 87,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "1108:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 88,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1108:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 85,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "1084:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1084:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1059:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1136:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 80,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1037:168:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1037:168:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 95,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1227:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 96,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1231:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 97,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1240:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 94,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1281,
															1347
														],
														"referencedDeclaration": 1347,
														"src": "1218:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1218:33:0"
											}
										]
									},
									"functionSelector": "1271f09a",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "855:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "871:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "863:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "883:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "875:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "900:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "892:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:43:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:0"
									},
									"scope": 184,
									"src": "846:413:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										786
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1348:205:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 114,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "1430:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1430:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 116,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "1444:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 113,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1411:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1411:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1454:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1403:103:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1527:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 123,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1533:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 124,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1537:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 121,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "1517:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1517:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1517:28:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1276:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 110,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1339:8:0"
									},
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1297:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1289:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1311:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1303:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1323:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1315:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:43:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:0:0"
									},
									"scope": 184,
									"src": "1267:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										830
									],
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1666:172:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 142,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "1704:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1704:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 144,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "1718:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 141,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1685:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1685:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1677:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1677:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1677:103:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 150,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1805:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 151,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1811:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 152,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "1815:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 153,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1824:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 149,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1237,
															1263
														],
														"referencedDeclaration": 1263,
														"src": "1791:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1791:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1791:39:0"
											}
										]
									},
									"functionSelector": "b88d4fde",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1570:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 138,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1657:8:0"
									},
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1595:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1587:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1609:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1601:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1621:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1613:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1643:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1630:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:63:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1666:0:0"
									},
									"scope": 184,
									"src": "1561:277:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1936:206:0",
										"statements": [
											{
												"assignments": [
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2041:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 182,
														"src": "2033:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 166,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2033:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": {
													"arguments": [
														{
															"id": 169,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2057:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 168,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "2049:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2049:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2033:32:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 172,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 173,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "2093:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2083:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 176,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2114:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 175,
																"name": "getApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "2102:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2102:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 178,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2126:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2102:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2083:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 165,
												"id": 181,
												"nodeType": "Return",
												"src": "2076:58:0"
											}
										]
									},
									"functionSelector": "4cdc9549",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "1855:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1882:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1874:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1900:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1892:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:35:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1930:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1930:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:6:0"
									},
									"scope": 184,
									"src": "1846:296:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 185,
							"src": "343:1978:0",
							"usedErrors": [
								198,
								203,
								380,
								385,
								394,
								399,
								404,
								411,
								416,
								421
							],
							"usedEvents": [
								209,
								1494,
								1503,
								1512
							]
						}
					],
					"src": "33:2290:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1671
						],
						"Ownable": [
							332
						]
					},
					"id": 333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 186,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 333,
							"sourceUnit": 1672,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 187,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1671,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 190,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1671,
										"src": "692:7:1"
									},
									"id": 191,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 189,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 332,
							"linearizedBaseContracts": [
								332,
								1671
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 193,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 192,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 198,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 203,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 209,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 228,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 222,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 221,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 227,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 235,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 332,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 238,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 241,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 243,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 249,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 193,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 332,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 256,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 258,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 267,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 266,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 262,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 261,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 265,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 332,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 276,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 275,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 273,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 272,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 243,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 332,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 291,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 298,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 297,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 303,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 306,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 289,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 288,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 243,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 332,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													318
												],
												"declarations": [
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 330,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 317,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"id": 319,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 193,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 321,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 322,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 326,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 325,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 332,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 333,
							"src": "663:2438:1",
							"usedErrors": [
								198,
								203
							],
							"usedEvents": [
								209
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							469
						],
						"IERC20Errors": [
							374
						],
						"IERC721Errors": [
							422
						]
					},
					"id": 470,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 335,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 344,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 349,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 354,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 363,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 368,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 373,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 470,
							"src": "278:1764:2",
							"usedErrors": [
								344,
								349,
								354,
								363,
								368,
								373
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 375,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 422,
							"linearizedBaseContracts": [
								422
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 380,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 385,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 394,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 399,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 404,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 411,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 416,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 421,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 470,
							"src": "2186:2092:2",
							"usedErrors": [
								380,
								385,
								394,
								399,
								404,
								411,
								416,
								421
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 423,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 469,
							"linearizedBaseContracts": [
								469
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 434,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 439,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 444,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 451,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 456,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 461,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 468,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 470,
							"src": "4424:2107:2",
							"usedErrors": [
								434,
								439,
								444,
								451,
								456,
								461,
								468
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1671
						],
						"ERC165": [
							1950
						],
						"ERC721": [
							1478
						],
						"IERC165": [
							1962
						],
						"IERC721": [
							1595
						],
						"IERC721Errors": [
							422
						],
						"IERC721Metadata": [
							1641
						],
						"IERC721Receiver": [
							1613
						],
						"Strings": [
							1926
						]
					},
					"id": 1479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 471,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 473,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 1596,
							"src": "133:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 472,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1595,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 1614,
							"src": "172:54:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 474,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1613,
										"src": "180:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 477,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 1642,
							"src": "227:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 476,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1641,
										"src": "235:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 1672,
							"src": "293:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 478,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1671,
										"src": "301:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 1927,
							"src": "342:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 480,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1926,
										"src": "350:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 484,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 1951,
							"src": "391:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 482,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1962,
										"src": "399:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 483,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1950,
										"src": "408:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 486,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1479,
							"sourceUnit": 470,
							"src": "461:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 485,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 422,
										"src": "469:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 488,
										"name": "Context",
										"nameLocations": [
											"804:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1671,
										"src": "804:7:3"
									},
									"id": 489,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:3"
								},
								{
									"baseName": {
										"id": 490,
										"name": "ERC165",
										"nameLocations": [
											"813:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1950,
										"src": "813:6:3"
									},
									"id": 491,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:3"
								},
								{
									"baseName": {
										"id": 492,
										"name": "IERC721",
										"nameLocations": [
											"821:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1595,
										"src": "821:7:3"
									},
									"id": 493,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:3"
								},
								{
									"baseName": {
										"id": 494,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1641,
										"src": "830:15:3"
									},
									"id": 495,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:3"
								},
								{
									"baseName": {
										"id": 496,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 422,
										"src": "847:13:3"
									},
									"id": 497,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:3"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 487,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1478,
							"linearizedBaseContracts": [
								1478,
								422,
								1641,
								1595,
								1950,
								1962,
								1671
							],
							"name": "ERC721",
							"nameLocation": "794:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 500,
									"libraryName": {
										"id": 498,
										"name": "Strings",
										"nameLocations": [
											"873:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1926,
										"src": "873:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:3",
									"typeName": {
										"id": 499,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 502,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "917:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 501,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 504,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "964:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 503,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 508,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "993:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 507,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:3",
										"keyType": {
											"id": 505,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 506,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 512,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "1051:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 511,
										"keyName": "owner",
										"keyNameLocation": "1067:5:3",
										"keyType": {
											"id": 509,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 510,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 516,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "1109:59:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 515,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:3",
										"keyType": {
											"id": 513,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 514,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 522,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "1175:86:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 521,
										"keyName": "owner",
										"keyNameLocation": "1191:5:3",
										"keyType": {
											"id": 517,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 520,
											"keyName": "operator",
											"keyNameLocation": "1216:8:3",
											"keyType": {
												"id": 518,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 519,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "1437:57:3",
										"statements": [
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1447:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 531,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "1455:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:3"
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "1470:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 535,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "1480:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:3"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 539,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1393:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1414:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 526,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:3"
									},
									"scope": 1478,
									"src": "1381:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1949,
										1961
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "1669:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 550,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "1698:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 552,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "1718:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1595_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1595_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 551,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1595",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 556,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "1754:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 558,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "1774:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1641_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1641_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 557,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1641",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 565,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "1842:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 563,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1478_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1949,
															"src": "1818:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 549,
												"id": 568,
												"nodeType": "Return",
												"src": "1679:175:3"
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 546,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 544,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1950,
												"src": "1637:6:3"
											},
											{
												"id": 545,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1962,
												"src": "1645:7:3"
											}
										],
										"src": "1628:25:3"
									},
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1588:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 541,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:3"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1663:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:3"
									},
									"scope": 1478,
									"src": "1561:300:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1520
									],
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "1992:136:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 592,
												"nodeType": "IfStatement",
												"src": "2002:87:3",
												"trueBody": {
													"id": 591,
													"nodeType": "Block",
													"src": "2027:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 585,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 584,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "2048:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 590,
															"nodeType": "RevertStatement",
															"src": "2041:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 593,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "2105:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 595,
													"indexExpression": {
														"id": 594,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2115:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 577,
												"id": 596,
												"nodeType": "Return",
												"src": "2098:23:3"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:3"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1983:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:3"
									},
									"scope": 1478,
									"src": "1920:208:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1528
									],
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "2257:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 607,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "2288:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 606,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "2274:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 605,
												"id": 609,
												"nodeType": "Return",
												"src": "2267:29:3"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2202:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:3"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2248:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:3"
									},
									"scope": 1478,
									"src": "2185:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1626
									],
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "2425:29:3",
										"statements": [
											{
												"expression": {
													"id": 617,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 502,
													"src": "2442:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 616,
												"id": 618,
												"nodeType": "Return",
												"src": "2435:12:3"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:3"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 614,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:3"
									},
									"scope": 1478,
									"src": "2365:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1632
									],
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "2580:31:3",
										"statements": [
											{
												"expression": {
													"id": 626,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 504,
													"src": "2597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 625,
												"id": 627,
												"nodeType": "Return",
												"src": "2590:14:3"
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2565:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:3"
									},
									"scope": 1478,
									"src": "2518:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1640
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "2756:176:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "2780:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "2766:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:3"
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "2799:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 641,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 643,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "2823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 648,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "2856:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 656,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "2892:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 657,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "2901:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:3",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1739,
																	"src": "2901:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 653,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:3",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 663,
												"nodeType": "Return",
												"src": "2843:82:3"
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "2695:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:3"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "2741:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:3"
									},
									"scope": 1478,
									"src": "2677:255:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "3240:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 670,
												"id": 672,
												"nodeType": "Return",
												"src": "3250:9:3"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:3"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "3225:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:3"
									},
									"scope": 1478,
									"src": "3174:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1568
									],
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3384:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "3403:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "3407:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 685,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "3416:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1281,
															1347
														],
														"referencedDeclaration": 1281,
														"src": "3394:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:3"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3340:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3352:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:3"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:3"
									},
									"scope": 1478,
									"src": "3323:113:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1584
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "3573:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "3597:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "3583:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "3636:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 702,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "3623:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 705,
												"nodeType": "Return",
												"src": "3616:28:3"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:3"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3564:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:3"
									},
									"scope": 1478,
									"src": "3497:154:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1576
									],
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "3793:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 716,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "3822:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "3836:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "3846:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 715,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "3803:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:3"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "3745:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "3763:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:3"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:3"
									},
									"scope": 1478,
									"src": "3718:144:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1594
									],
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "4022:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 733,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4039:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 735,
														"indexExpression": {
															"id": 734,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4058:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 737,
													"indexExpression": {
														"id": 736,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4065:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 732,
												"id": 738,
												"nodeType": "Return",
												"src": "4032:42:3"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "3954:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "3969:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:3"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "4016:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:3"
									},
									"scope": 1478,
									"src": "3928:153:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1560
									],
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "4223:498:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 750,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "4237:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 751,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 764,
												"nodeType": "IfStatement",
												"src": "4233:87:3",
												"trueBody": {
													"id": 763,
													"nodeType": "Block",
													"src": "4255:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 757,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 756,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "4276:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 762,
															"nodeType": "RevertStatement",
															"src": "4269:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 785,
														"src": "4538:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 765,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"arguments": [
														{
															"id": 768,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4570:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "4574:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 770,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "4583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 767,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "4562:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 774,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "4610:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 775,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "4627:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 784,
												"nodeType": "IfStatement",
												"src": "4606:109:3",
												"trueBody": {
													"id": 783,
													"nodeType": "Block",
													"src": "4633:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 778,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "4675:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 779,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "4681:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 780,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "4690:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 777,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4654:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 782,
															"nodeType": "RevertStatement",
															"src": "4647:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "4165:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "4179:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "4191:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:3"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:3"
									},
									"scope": 1478,
									"src": "4143:578:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1550
									],
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "4863:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 797,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "4890:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 798,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "4896:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "4900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 796,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															804,
															830
														],
														"referencedDeclaration": 830,
														"src": "4873:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:3"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4813:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4827:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4839:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:3"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:3"
									},
									"scope": 1478,
									"src": "4787:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1540
									],
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "5088:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "5111:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "5117:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "5121:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 816,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "5098:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 823,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "5162:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "5168:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 825,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "5172:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 826,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "5181:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 822,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "5139:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:3"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "5011:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "5025:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "5037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "5054:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 812,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:3"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:3"
									},
									"scope": 1478,
									"src": "4985:208:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "5782:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 838,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "5799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 840,
													"indexExpression": {
														"id": 839,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "5807:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 837,
												"id": 841,
												"nodeType": "Return",
												"src": "5792:23:3"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5725:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:3"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5773:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:3"
									},
									"scope": 1478,
									"src": "5707:115:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "6017:48:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 851,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "6034:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 853,
													"indexExpression": {
														"id": 852,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "6050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 850,
												"id": 854,
												"nodeType": "Return",
												"src": "6027:31:3"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:3",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "5960:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:3"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "6008:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:3"
									},
									"scope": 1478,
									"src": "5938:127:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "6485:163:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 868,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "6514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 869,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 874,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 859,
																			"src": "6552:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 875,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "6561:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 878,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 859,
																				"src": "6589:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 879,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "6596:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 877,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "6572:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 883,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "6621:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 882,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "6608:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 885,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "6633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 888,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 867,
												"id": 890,
												"nodeType": "Return",
												"src": "6495:146:3"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:3",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "6399:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "6414:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "6431:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:3"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "6479:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:3"
									},
									"scope": 1478,
									"src": "6376:272:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "7179:271:3",
										"statements": [
											{
												"condition": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:3",
													"subExpression": {
														"arguments": [
															{
																"id": 903,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "7208:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 904,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "7215:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 905,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "7224:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 902,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7194:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "7189:255:3",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "7234:210:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 908,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "7252:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 909,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 924,
																"nodeType": "Block",
																"src": "7350:84:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 920,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "7402:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 921,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 899,
																					"src": "7411:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 919,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 411,
																				"src": "7375:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 923,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:3"
																	}
																]
															},
															"id": 925,
															"nodeType": "IfStatement",
															"src": "7248:186:3",
															"trueBody": {
																"id": 918,
																"nodeType": "Block",
																"src": "7273:71:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 915,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 899,
																					"src": "7321:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 914,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 385,
																				"src": "7298:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 917,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:3",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "7108:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "7123:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "7140:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:3"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:3"
									},
									"scope": 1478,
									"src": "7082:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "8167:78:3",
										"statements": [
											{
												"id": 943,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:3",
												"statements": [
													{
														"expression": {
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 937,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "8201:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 939,
																"indexExpression": {
																	"id": 938,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "8211:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 940,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "8223:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 942,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "8118:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "8135:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 933,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:3"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:3"
									},
									"scope": 1478,
									"src": "8092:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "8933:700:3",
										"statements": [
											{
												"assignments": [
													958
												],
												"declarations": [
													{
														"constant": false,
														"id": 958,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "8943:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 957,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 962,
												"initialValue": {
													"arguments": [
														{
															"id": 960,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "8967:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "8958:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 963,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "9035:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 964,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "9031:86:3",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "9055:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 970,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "9086:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 971,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "9092:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 972,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "9098:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 969,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "9069:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 974,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "9161:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 978,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "9157:256:3",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "9181:232:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 984,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 988,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "9298:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 989,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 983,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1281,
																		1347
																	],
																	"referencedDeclaration": 1347,
																	"src": "9277:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:3"
														},
														{
															"id": 1002,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:3",
															"statements": [
																{
																	"expression": {
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 996,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 512,
																				"src": "9368:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 998,
																			"indexExpression": {
																				"id": 997,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 958,
																				"src": "9378:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1001,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:3"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1005,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "9427:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1006,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "IfStatement",
												"src": "9423:107:3",
												"trueBody": {
													"id": 1018,
													"nodeType": "Block",
													"src": "9445:85:3",
													"statements": [
														{
															"id": 1017,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:3",
															"statements": [
																{
																	"expression": {
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1011,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 512,
																				"src": "9487:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1013,
																			"indexExpression": {
																				"id": 1012,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 948,
																				"src": "9497:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1016,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:3"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1020,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "9540:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1022,
														"indexExpression": {
															"id": 1021,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "9548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1023,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "9559:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1027,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "9586:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "9592:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "9596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "9577:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "EmitStatement",
												"src": "9572:32:3"
											},
											{
												"expression": {
													"id": 1032,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 958,
													"src": "9622:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 1033,
												"nodeType": "Return",
												"src": "9615:11:3"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:3",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "8855:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "8867:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "8884:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:3"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "8924:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:3"
									},
									"scope": 1478,
									"src": "8838:795:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "10008:274:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1043,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "10022:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1044,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1057,
												"nodeType": "IfStatement",
												"src": "10018:87:3",
												"trueBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "10040:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1050,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1049,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "10061:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1055,
															"nodeType": "RevertStatement",
															"src": "10054:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1059
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "10114:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1058,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"arguments": [
														{
															"id": 1061,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "10146:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "10150:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1063,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1060,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "10138:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1069,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "10184:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1070,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1083,
												"nodeType": "IfStatement",
												"src": "10180:96:3",
												"trueBody": {
													"id": 1082,
													"nodeType": "Block",
													"src": "10213:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1076,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1075,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "10234:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1081,
															"nodeType": "RevertStatement",
															"src": "10227:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "9970:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:3"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:3"
									},
									"scope": 1478,
									"src": "9955:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "10690:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1094,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "10710:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "10714:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1093,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1100,
															1126
														],
														"referencedDeclaration": 1126,
														"src": "10700:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:3"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:3",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "10652:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "10664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:3"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:3"
									},
									"scope": 1478,
									"src": "10633:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "11038:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1111,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "11054:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "11058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1110,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "11048:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1116,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "11111:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "11115:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1122,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "11124:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1115,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "11076:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:3"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "10973:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "10985:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "11002:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:3"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:3"
									},
									"scope": 1478,
									"src": "10954:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "11503:186:3",
										"statements": [
											{
												"assignments": [
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "11513:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1135,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "11557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1140,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1134,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "11537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "11591:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1147,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1157,
												"nodeType": "IfStatement",
												"src": "11587:96:3",
												"trueBody": {
													"id": 1156,
													"nodeType": "Block",
													"src": "11620:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1153,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "11664:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1152,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "11641:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1155,
															"nodeType": "RevertStatement",
															"src": "11634:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "11477:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:3"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:3"
									},
									"scope": 1478,
									"src": "11462:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "12084:389:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1169,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "12098:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1170,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "12094:87:3",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "12116:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1176,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1175,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "12137:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "12130:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1185
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "12190:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1184,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"arguments": [
														{
															"id": 1187,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "12222:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "12226:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1189,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1186,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "12214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1195,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "12260:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1196,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1206,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "12362:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1207,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "12379:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1216,
													"nodeType": "IfStatement",
													"src": "12358:109:3",
													"trueBody": {
														"id": 1215,
														"nodeType": "Block",
														"src": "12385:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1210,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "12427:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1211,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "12433:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1212,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "12442:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1209,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "12406:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1214,
																"nodeType": "RevertStatement",
																"src": "12399:57:3"
															}
														]
													}
												},
												"id": 1217,
												"nodeType": "IfStatement",
												"src": "12256:211:3",
												"trueBody": {
													"id": 1205,
													"nodeType": "Block",
													"src": "12289:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1202,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "12333:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1201,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "12310:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1204,
															"nodeType": "RevertStatement",
															"src": "12303:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "12032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "12046:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "12058:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:3"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:3"
									},
									"scope": 1478,
									"src": "12013:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "13481:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "13505:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "13511:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "13515:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1229,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1237,
															1263
														],
														"referencedDeclaration": 1263,
														"src": "13491:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:3"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "13429:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "13443:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "13455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:3"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:3"
									},
									"scope": 1478,
									"src": "13406:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "13873:102:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1250,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "13893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "13899:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "13903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1249,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "13883:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1256,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "13944:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1257,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "13950:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "13954:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1259,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "13963:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1255,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "13921:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:3"
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:3",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "13794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "13808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "13820:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "13837:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:3"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:3"
									},
									"scope": 1478,
									"src": "13771:204:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "14488:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1274,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "14507:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1275,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "14511:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1276,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "14520:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1273,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1281,
															1347
														],
														"referencedDeclaration": 1347,
														"src": "14498:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:3"
											}
										]
									},
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "14436:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "14448:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "14465:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:3"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:3"
									},
									"scope": 1478,
									"src": "14418:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "14814:568:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1293,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "14880:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1294,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "14893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1295,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "14876:460:3",
												"trueBody": {
													"id": 1338,
													"nodeType": "Block",
													"src": "14913:423:3",
													"statements": [
														{
															"assignments": [
																1302
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1302,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1338,
																	"src": "14927:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1301,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1306,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1304,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1286,
																		"src": "14957:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1303,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "14943:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1307,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "15093:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1310,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1308,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1313,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1302,
																			"src": "15115:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1314,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "15124:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1318,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1302,
																				"src": "15150:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1319,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1288,
																				"src": "15157:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1317,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "15133:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1328,
															"nodeType": "IfStatement",
															"src": "15089:142:3",
															"trueBody": {
																"id": 1327,
																"nodeType": "Block",
																"src": "15164:67:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1324,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1288,
																					"src": "15211:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1323,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "15189:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1326,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:3"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1329,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "15249:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1337,
															"nodeType": "IfStatement",
															"src": "15245:81:3",
															"trueBody": {
																"id": 1336,
																"nodeType": "Block",
																"src": "15260:66:3",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1331,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1302,
																					"src": "15292:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1332,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1284,
																					"src": "15299:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1333,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1286,
																					"src": "15303:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1330,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "15283:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1335,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1340,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "15346:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1342,
														"indexExpression": {
															"id": 1341,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "15362:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1343,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "15373:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:3"
											}
										]
									},
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:3",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "14738:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "14750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "14767:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "14781:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:3"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:3"
									},
									"scope": 1478,
									"src": "14720:662:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "15684:219:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1357,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "15698:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1358,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1368,
												"nodeType": "IfStatement",
												"src": "15694:91:3",
												"trueBody": {
													"id": 1367,
													"nodeType": "Block",
													"src": "15722:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1364,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "15765:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1363,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "15743:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1366,
															"nodeType": "RevertStatement",
															"src": "15736:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1369,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "15794:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1372,
															"indexExpression": {
																"id": 1370,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "15813:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1373,
														"indexExpression": {
															"id": 1371,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "15820:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1374,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "15832:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1378,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "15870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "15877:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1380,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "15887:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1377,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "15855:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "EmitStatement",
												"src": "15850:46:3"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "15619:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "15634:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "15652:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:3"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:3"
									},
									"scope": 1478,
									"src": "15591:312:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "16210:169:3",
										"statements": [
											{
												"assignments": [
													1393
												],
												"declarations": [
													{
														"constant": false,
														"id": 1393,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "16220:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1392,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"arguments": [
														{
															"id": 1395,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "16245:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1394,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "16236:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1398,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "16267:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1399,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1409,
												"nodeType": "IfStatement",
												"src": "16263:88:3",
												"trueBody": {
													"id": 1408,
													"nodeType": "Block",
													"src": "16288:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1405,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1387,
																		"src": "16332:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1404,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "16309:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1407,
															"nodeType": "RevertStatement",
															"src": "16302:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1410,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1393,
													"src": "16367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1391,
												"id": 1411,
												"nodeType": "Return",
												"src": "16360:12:3"
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:3",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "16161:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:3"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "16201:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:3"
									},
									"scope": 1478,
									"src": "16138:241:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "17020:680:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1425,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "17034:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "17030:664:3",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "17054:640:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1454,
																		"nodeType": "Block",
																		"src": "17168:162:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1447,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1443,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1441,
																						"src": "17190:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1444,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1613,
																								"src": "17200:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1613_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1445,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:3",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1612,
																							"src": "17200:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1453,
																				"nodeType": "IfStatement",
																				"src": "17186:130:3",
																				"trueBody": {
																					"id": 1452,
																					"nodeType": "Block",
																					"src": "17243:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1449,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1418,
																										"src": "17294:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1448,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 404,
																									"src": "17272:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1450,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1451,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1455,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1442,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1441,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1455,
																				"src": "17153:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1440,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:3"
																	},
																	"src": "17144:186:3"
																},
																{
																	"block": {
																		"id": 1471,
																		"nodeType": "Block",
																		"src": "17359:325:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1462,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1459,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1457,
																							"src": "17381:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1460,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:3",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1461,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1469,
																					"nodeType": "Block",
																					"src": "17480:190:3",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:3",
																								"nodeType": "YulBlock",
																								"src": "17566:86:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:3",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:3",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:3"
																													},
																													"nativeSrc": "17599:15:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:3",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:3"
																													},
																													"nativeSrc": "17616:13:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:3"
																											},
																											"nativeSrc": "17592:38:3",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:3"
																										},
																										"nativeSrc": "17592:38:3",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:3"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1457,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1457,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1468,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:3"
																						}
																					]
																				},
																				"id": 1470,
																				"nodeType": "IfStatement",
																				"src": "17377:293:3",
																				"trueBody": {
																					"id": 1467,
																					"nodeType": "Block",
																					"src": "17401:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1464,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1418,
																										"src": "17452:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1463,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 404,
																									"src": "17430:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1465,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1466,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1472,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1458,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1457,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1472,
																				"src": "17338:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1456,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:3"
																	},
																	"src": "17331:353:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1434,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "17109:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1436,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1416,
																		"src": "17123:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1437,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "17129:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1438,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "17138:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1431,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1418,
																				"src": "17088:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1430,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1613,
																			"src": "17072:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1613_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1613",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:3",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1612,
																	"src": "17072:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1473,
															"nodeType": "TryStatement",
															"src": "17068:616:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "16950:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "16964:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "16976:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "16993:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:3"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:3"
									},
									"scope": 1478,
									"src": "16918:782:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1479,
							"src": "776:16926:3",
							"usedErrors": [
								380,
								385,
								394,
								399,
								404,
								411,
								416,
								421
							],
							"usedEvents": [
								1494,
								1503,
								1512
							]
						}
					],
					"src": "107:17596:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1962
						],
						"IERC721": [
							1595
						]
					},
					"id": 1596,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1596,
							"sourceUnit": 1963,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1481,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1962,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1484,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1962,
										"src": "287:7:4"
									},
									"id": 1485,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1483,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1595,
							"linearizedBaseContracts": [
								1595,
								1962
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1494,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1503,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1512,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 1595,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 1595,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 1595,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 1595,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 1595,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 1595,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 1595,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 1595,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1585,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 1595,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1596,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								1494,
								1503,
								1512
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1613
						]
					},
					"id": 1614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1597,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1598,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1613,
							"linearizedBaseContracts": [
								1613
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "940:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:5"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "984:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1609,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:5"
									},
									"scope": 1613,
									"src": "832:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1614,
							"src": "295:699:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1595
						],
						"IERC721Metadata": [
							1641
						]
					},
					"id": 1642,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1615,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1617,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1642,
							"sourceUnit": 1596,
							"src": "153:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1616,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1595,
										"src": "161:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1619,
										"name": "IERC721",
										"nameLocations": [
											"357:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1595,
										"src": "357:7:6"
									},
									"id": 1620,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1618,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1641,
							"linearizedBaseContracts": [
								1641,
								1595,
								1962
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:6"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "473:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:6"
									},
									"scope": 1641,
									"src": "434:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:6"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "600:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:6"
									},
									"scope": 1641,
									"src": "559:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:6"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "774:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1637,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:6"
									},
									"scope": 1641,
									"src": "716:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1642,
							"src": "328:463:6",
							"usedErrors": [],
							"usedEvents": [
								1494,
								1503,
								1512
							]
						}
					],
					"src": "127:665:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1671
						]
					},
					"id": 1672,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1643,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1644,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1671,
							"linearizedBaseContracts": [
								1671
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1649,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1648,
												"id": 1651,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1671,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1658,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1660,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1671,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1666,
												"id": 1668,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1671,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1672,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3016
						],
						"SignedMath": [
							3121
						],
						"Strings": [
							1926
						]
					},
					"id": 1927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1673,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1927,
							"sourceUnit": 3017,
							"src": "127:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1674,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3016,
										"src": "135:4:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1927,
							"sourceUnit": 3122,
							"src": "165:49:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1676,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3121,
										"src": "173:10:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1678,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1926,
							"linearizedBaseContracts": [
								1926
							],
							"name": "Strings",
							"nameLocation": "259:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1681,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1926,
									"src": "273:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1679,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1680,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1684,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1926,
									"src": "335:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1682,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1683,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:8",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1691,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "520:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:8"
									},
									"src": "470:66:8"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "708:627:8",
										"statements": [
											{
												"id": 1737,
												"nodeType": "UncheckedBlock",
												"src": "718:611:8",
												"statements": [
													{
														"assignments": [
															1700
														],
														"declarations": [
															{
																"constant": false,
																"id": 1700,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1737,
																"src": "742:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1699,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1707,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1703,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "770:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1701,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3016,
																		"src": "759:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3016_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2836,
																	"src": "759:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:8"
													},
													{
														"assignments": [
															1709
														],
														"declarations": [
															{
																"constant": false,
																"id": 1709,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1737,
																"src": "794:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1708,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1714,
														"initialValue": {
															"arguments": [
																{
																	"id": 1712,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1700,
																	"src": "828:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1710,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:8"
													},
													{
														"assignments": [
															1716
														],
														"declarations": [
															{
																"constant": false,
																"id": 1716,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1737,
																"src": "849:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1715,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1717,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:8"
													},
													{
														"AST": {
															"nativeSrc": "930:67:8",
															"nodeType": "YulBlock",
															"src": "930:67:8",
															"statements": [
																{
																	"nativeSrc": "948:35:8",
																	"nodeType": "YulAssignment",
																	"src": "948:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:8",
																						"nodeType": "YulLiteral",
																						"src": "971:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:8"
																				},
																				"nativeSrc": "967:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:8"
																		},
																		"nativeSrc": "955:28:8",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1709,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1700,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1716,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:8",
																"valueSize": 1
															}
														],
														"id": 1718,
														"nodeType": "InlineAssembly",
														"src": "921:76:8"
													},
													{
														"body": {
															"id": 1733,
															"nodeType": "Block",
															"src": "1023:269:8",
															"statements": [
																{
																	"expression": {
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:8",
																		"subExpression": {
																			"id": 1720,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1716,
																			"src": "1041:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1722,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:8"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:8",
																		"nodeType": "YulBlock",
																		"src": "1124:86:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:8",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:8"
																									},
																									"nativeSrc": "1164:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:8"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:8"
																							},
																							"nativeSrc": "1159:32:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:8"
																					},
																					"nativeSrc": "1146:46:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:8"
																				},
																				"nativeSrc": "1146:46:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1681,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1716,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1694,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 1723,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:8"
																},
																{
																	"expression": {
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1724,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1694,
																			"src": "1227:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1727,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1728,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1694,
																			"src": "1260:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1732,
																	"nodeType": "IfStatement",
																	"src": "1256:21:8",
																	"trueBody": {
																		"id": 1731,
																		"nodeType": "Break",
																		"src": "1272:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1734,
														"nodeType": "WhileStatement",
														"src": "1010:282:8"
													},
													{
														"expression": {
															"id": 1735,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "1312:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1698,
														"id": 1736,
														"nodeType": "Return",
														"src": "1305:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "655:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:8"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "693:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1696,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:8"
									},
									"scope": 1926,
									"src": "637:698:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "1511:92:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1750,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "1542:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:8",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1759,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "1588:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1757,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3121,
																			"src": "1573:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3121_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:8",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3120,
																		"src": "1573:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1756,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "1564:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1747,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:8",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1746,
												"id": 1763,
												"nodeType": "Return",
												"src": "1521:75:8"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:8",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "1459:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1741,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:8"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "1496:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1744,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:8"
									},
									"scope": 1926,
									"src": "1435:168:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "1782:100:8",
										"statements": [
											{
												"id": 1783,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1774,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "1835:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1777,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "1854:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1775,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3016,
																				"src": "1842:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3016_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2958,
																			"src": "1842:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1773,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1785,
																	1868,
																	1888
																],
																"referencedDeclaration": 1868,
																"src": "1823:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1772,
														"id": 1782,
														"nodeType": "Return",
														"src": "1816:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "1729:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:8"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "1767:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1770,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:8"
									},
									"scope": 1926,
									"src": "1708:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "2095:435:8",
										"statements": [
											{
												"assignments": [
													1796
												],
												"declarations": [
													{
														"constant": false,
														"id": 1796,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1867,
														"src": "2105:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1795,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1798,
												"initialValue": {
													"id": 1797,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1788,
													"src": "2126:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:8"
											},
											{
												"assignments": [
													1800
												],
												"declarations": [
													{
														"constant": false,
														"id": 1800,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1867,
														"src": "2141:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1799,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1809,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1804,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "2177:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1801,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:8"
											},
											{
												"expression": {
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1810,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "2198:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1812,
														"indexExpression": {
															"hexValue": "30",
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:8"
											},
											{
												"expression": {
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1816,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "2223:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1818,
														"indexExpression": {
															"hexValue": "31",
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:8"
											},
											{
												"body": {
													"id": 1850,
													"nodeType": "Block",
													"src": "2293:95:8",
													"statements": [
														{
															"expression": {
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1836,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1800,
																		"src": "2307:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1838,
																	"indexExpression": {
																		"id": 1837,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "2314:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1839,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "2319:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1843,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1840,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1796,
																			"src": "2330:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1845,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:8"
														},
														{
															"expression": {
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1846,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "2361:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1849,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1830,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "2281:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1851,
												"initializationExpression": {
													"assignments": [
														1823
													],
													"declarations": [
														{
															"constant": false,
															"id": 1823,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1851,
															"src": "2253:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1822,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1829,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1825,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "2269:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:8",
														"subExpression": {
															"id": 1833,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "2290:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1835,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1852,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "2401:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1861,
												"nodeType": "IfStatement",
												"src": "2397:96:8",
												"trueBody": {
													"id": 1860,
													"nodeType": "Block",
													"src": "2418:75:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1856,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "2468:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1857,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "2475:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1855,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "2439:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1859,
															"nodeType": "RevertStatement",
															"src": "2432:50:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1864,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "2516:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1862,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1866,
												"nodeType": "Return",
												"src": "2502:21:8"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "2026:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "2041:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:8"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "2080:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1792,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:8"
									},
									"scope": 1926,
									"src": "2005:525:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "2762:75:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1881,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1871,
																			"src": "2807:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1879,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1877,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1884,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "2815:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1876,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1785,
															1868,
															1888
														],
														"referencedDeclaration": 1868,
														"src": "2779:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1875,
												"id": 1886,
												"nodeType": "Return",
												"src": "2772:58:8"
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "2710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:8"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "2747:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:8"
									},
									"scope": 1926,
									"src": "2689:148:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "2992:104:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1900,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "3015:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1898,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1905,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "3034:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1903,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1912,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1891,
																			"src": "3063:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1910,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1909,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1918,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1893,
																			"src": "3086:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1916,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1915,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1897,
												"id": 1923,
												"nodeType": "Return",
												"src": "3002:87:8"
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:8",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "2929:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1890,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "2946:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1892,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:8"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "2986:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1895,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:8"
									},
									"scope": 1926,
									"src": "2914:182:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1927,
							"src": "251:2847:8",
							"usedErrors": [
								1691
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1950
						],
						"IERC165": [
							1962
						]
					},
					"id": 1951,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1930,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1951,
							"sourceUnit": 1963,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1929,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1962,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1932,
										"name": "IERC165",
										"nameLocations": [
											"687:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1962,
										"src": "687:7:9"
									},
									"id": 1933,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1931,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1950,
							"linearizedBaseContracts": [
								1950,
								1962
							],
							"name": "ERC165",
							"nameLocation": "677:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1961
									],
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "844:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1941,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "861:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1943,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1962,
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1962_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1962_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1942,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1962",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1940,
												"id": 1947,
												"nodeType": "Return",
												"src": "854:47:9"
											}
										]
									},
									"documentation": {
										"id": 1934,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "789:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1935,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:9"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "838:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:9"
									},
									"scope": 1950,
									"src": "762:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1951,
							"src": "659:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1962
						]
					},
					"id": 1963,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1952,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1953,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1962,
							"linearizedBaseContracts": [
								1962
							],
							"name": "IERC165",
							"nameLocation": "431:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "817:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1955,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:10"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "860:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:10"
									},
									"scope": 1962,
									"src": "790:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1963,
							"src": "421:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3016
						]
					},
					"id": 3017,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1964,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1965,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3016,
							"linearizedBaseContracts": [
								3016
							],
							"name": "Math",
							"nameLocation": "211:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1968,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:11"
									},
									"src": "277:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1973,
									"members": [
										{
											"id": 1969,
											"name": "Floor",
											"nameLocation": "336:5:11",
											"nodeType": "EnumValue",
											"src": "336:5:11"
										},
										{
											"id": 1970,
											"name": "Ceil",
											"nameLocation": "379:4:11",
											"nodeType": "EnumValue",
											"src": "379:4:11"
										},
										{
											"id": 1971,
											"name": "Trunc",
											"nameLocation": "421:5:11",
											"nodeType": "EnumValue",
											"src": "421:5:11"
										},
										{
											"id": 1972,
											"name": "Expand",
											"nameLocation": "451:6:11",
											"nodeType": "EnumValue",
											"src": "451:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:11",
									"nodeType": "EnumDefinition",
									"src": "312:169:11"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "661:140:11",
										"statements": [
											{
												"id": 2003,
												"nodeType": "UncheckedBlock",
												"src": "671:124:11",
												"statements": [
													{
														"assignments": [
															1986
														],
														"declarations": [
															{
																"constant": false,
																"id": 1986,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 2003,
																"src": "695:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1985,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1990,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1987,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1988,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1978,
																"src": "711:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1991,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "730:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1992,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "734:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1998,
														"nodeType": "IfStatement",
														"src": "726:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1996,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1984,
															"id": 1997,
															"nodeType": "Return",
															"src": "737:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2000,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1986,
																	"src": "782:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2001,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1984,
														"id": 2002,
														"nodeType": "Return",
														"src": "768:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "646:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1980,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "652:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:11"
									},
									"scope": 3016,
									"src": "585:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "984:113:11",
										"statements": [
											{
												"id": 2031,
												"nodeType": "UncheckedBlock",
												"src": "994:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2017,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "1022:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2018,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "1026:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2024,
														"nodeType": "IfStatement",
														"src": "1018:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2022,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2016,
															"id": 2023,
															"nodeType": "Return",
															"src": "1029:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2026,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "1074:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2027,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2010,
																		"src": "1078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2029,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2016,
														"id": 2030,
														"nodeType": "Return",
														"src": "1060:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "924:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "935:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:11"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "969:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:11"
									},
									"scope": 3016,
									"src": "908:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "1283:417:11",
										"statements": [
											{
												"id": 2073,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2045,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "1551:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2052,
														"nodeType": "IfStatement",
														"src": "1547:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2050,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2044,
															"id": 2051,
															"nodeType": "Return",
															"src": "1559:16:11"
														}
													},
													{
														"assignments": [
															2054
														],
														"declarations": [
															{
																"constant": false,
																"id": 2054,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 2073,
																"src": "1589:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2053,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2058,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2055,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "1601:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2056,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "1605:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2059,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2054,
																	"src": "1624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2060,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2036,
																	"src": "1628:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2062,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "1633:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2068,
														"nodeType": "IfStatement",
														"src": "1620:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2066,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2044,
															"id": 2067,
															"nodeType": "Return",
															"src": "1636:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2070,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2054,
																	"src": "1681:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2071,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2044,
														"id": 2072,
														"nodeType": "Return",
														"src": "1667:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2034,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "1223:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "1234:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:11"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "1268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:11"
									},
									"scope": 3016,
									"src": "1207:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "1887:114:11",
										"statements": [
											{
												"id": 2101,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2087,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2080,
																"src": "1925:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2094,
														"nodeType": "IfStatement",
														"src": "1921:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2092,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2086,
															"id": 2093,
															"nodeType": "Return",
															"src": "1933:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2096,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2078,
																		"src": "1978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2097,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2080,
																		"src": "1982:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2099,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2086,
														"id": 2100,
														"nodeType": "Return",
														"src": "1964:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "1827:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "1838:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:11"
									},
									"returnParameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "1872:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "1878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:11"
									},
									"scope": 3016,
									"src": "1811:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "2198:114:11",
										"statements": [
											{
												"id": 2129,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2115,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2108,
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2122,
														"nodeType": "IfStatement",
														"src": "2232:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2120,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2114,
															"id": 2121,
															"nodeType": "Return",
															"src": "2244:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2124,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2106,
																		"src": "2289:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2125,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2108,
																		"src": "2293:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2127,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2114,
														"id": 2128,
														"nodeType": "Return",
														"src": "2275:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2138:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2149:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:11"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2189:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:11"
									},
									"scope": 3016,
									"src": "2122:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2148,
										"nodeType": "Block",
										"src": "2449:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2141,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "2466:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2142,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "2470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2145,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "2478:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:11",
													"trueExpression": {
														"id": 2144,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2134,
														"src": "2474:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2140,
												"id": 2147,
												"nodeType": "Return",
												"src": "2459:20:11"
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "2395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "2406:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:11"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "2440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:11"
									},
									"scope": 3016,
									"src": "2382:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "2624:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2159,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "2641:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2160,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "2645:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2163,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2154,
														"src": "2653:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:11",
													"trueExpression": {
														"id": 2162,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "2649:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2158,
												"id": 2165,
												"nodeType": "Return",
												"src": "2634:20:11"
											}
										]
									},
									"documentation": {
										"id": 2150,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "2570:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "2581:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:11"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "2615:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:11"
									},
									"scope": 3016,
									"src": "2557:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "2845:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2177,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "2900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2178,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2172,
																	"src": "2904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2180,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2181,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2170,
																		"src": "2910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2182,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2172,
																		"src": "2914:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2184,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2176,
												"id": 2188,
												"nodeType": "Return",
												"src": "2892:28:11"
											}
										]
									},
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "2791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "2802:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:11"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "2836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:11"
									},
									"scope": 3016,
									"src": "2774:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2223,
										"nodeType": "Block",
										"src": "3219:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "3233:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2208,
												"nodeType": "IfStatement",
												"src": "3229:127:11",
												"trueBody": {
													"id": 2207,
													"nodeType": "Block",
													"src": "3241:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2203,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2193,
																	"src": "3340:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2204,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "3344:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2199,
															"id": 2206,
															"nodeType": "Return",
															"src": "3333:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2209,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2193,
															"src": "3444:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2213,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2193,
																			"src": "3458:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2216,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2217,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "3467:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 2212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2199,
												"id": 2222,
												"nodeType": "Return",
												"src": "3437:35:11"
											}
										]
									},
									"documentation": {
										"id": 2191,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "3165:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "3176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:11"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "3210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:11"
									},
									"scope": 3016,
									"src": "3148:331:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "3901:4018:11",
										"statements": [
											{
												"id": 2348,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:11",
												"statements": [
													{
														"assignments": [
															2237
														],
														"declarations": [
															{
																"constant": false,
																"id": 2237,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2348,
																"src": "4232:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2236,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2241,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2238,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2227,
																"src": "4248:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2239,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "4252:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:11"
													},
													{
														"assignments": [
															2243
														],
														"declarations": [
															{
																"constant": false,
																"id": 2243,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2348,
																"src": "4312:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2242,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2244,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:11"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:11",
															"nodeType": "YulBlock",
															"src": "4392:122:11",
															"statements": [
																{
																	"nativeSrc": "4410:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:11"
																				},
																				"nativeSrc": "4433:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:11"
																		},
																		"nativeSrc": "4420:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:11",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:11",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:11"
																				},
																				"nativeSrc": "4470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:11"
																				},
																				"nativeSrc": "4486:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:11"
																		},
																		"nativeSrc": "4466:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2243,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2227,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2229,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:11",
																"valueSize": 1
															}
														],
														"id": 2245,
														"nodeType": "InlineAssembly",
														"src": "4383:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2246,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "4595:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2254,
														"nodeType": "IfStatement",
														"src": "4591:368:11",
														"trueBody": {
															"id": 2253,
															"nodeType": "Block",
															"src": "4607:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2249,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2237,
																			"src": "4925:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2250,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2231,
																			"src": "4933:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2235,
																	"id": 2252,
																	"nodeType": "Return",
																	"src": "4918:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2255,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2231,
																"src": "5065:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2256,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "5080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2262,
														"nodeType": "IfStatement",
														"src": "5061:88:11",
														"trueBody": {
															"id": 2261,
															"nodeType": "Block",
															"src": "5087:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2258,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1968,
																			"src": "5112:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2260,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2264
														],
														"declarations": [
															{
																"constant": false,
																"id": 2264,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2348,
																"src": "5404:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2263,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2265,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:11"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:11",
															"nodeType": "YulBlock",
															"src": "5444:291:11",
															"statements": [
																{
																	"nativeSrc": "5513:38:11",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:11"
																		},
																		"nativeSrc": "5526:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:11",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:11"
																				},
																				"nativeSrc": "5653:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nativeSrc": "5642:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:11",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:11"
																		},
																		"nativeSrc": "5700:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2231,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2243,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2243,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2264,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2264,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2264,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2227,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2229,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:11",
																"valueSize": 1
															}
														],
														"id": 2266,
														"nodeType": "InlineAssembly",
														"src": "5435:300:11"
													},
													{
														"assignments": [
															2268
														],
														"declarations": [
															{
																"constant": false,
																"id": 2268,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2348,
																"src": "5939:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2267,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2275,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2269,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2231,
																"src": "5954:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2271,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2231,
																			"src": "5973:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2273,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:11"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:11",
															"nodeType": "YulBlock",
															"src": "6008:362:11",
															"statements": [
																{
																	"nativeSrc": "6073:37:11",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:11"
																		},
																		"nativeSrc": "6088:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:11",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:11"
																		},
																		"nativeSrc": "6186:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:11",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:11"
																						},
																						"nativeSrc": "6333:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:11"
																				},
																				"nativeSrc": "6329:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:11"
																		},
																		"nativeSrc": "6325:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2231,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2231,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2268,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2268,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2268,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2268,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2268,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:11",
																"valueSize": 1
															}
														],
														"id": 2276,
														"nodeType": "InlineAssembly",
														"src": "5999:371:11"
													},
													{
														"expression": {
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2277,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "6436:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2278,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2243,
																	"src": "6445:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2279,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "6453:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2282,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:11"
													},
													{
														"assignments": [
															2284
														],
														"declarations": [
															{
																"constant": false,
																"id": 2284,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2348,
																"src": "6775:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2283,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2291,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2286,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2231,
																			"src": "6798:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:11"
													},
													{
														"expression": {
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2292,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "7031:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2294,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "7046:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2295,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2284,
																		"src": "7060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2299,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:11"
													},
													{
														"expression": {
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2300,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "7100:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2302,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "7115:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2303,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2284,
																		"src": "7129:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2307,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:11"
													},
													{
														"expression": {
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2308,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "7170:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2310,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "7185:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2311,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2284,
																		"src": "7199:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2315,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:11"
													},
													{
														"expression": {
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2316,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "7240:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2318,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "7255:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2319,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2284,
																		"src": "7269:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2323,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:11"
													},
													{
														"expression": {
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2324,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "7310:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2326,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "7325:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2327,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2284,
																		"src": "7339:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2331,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:11"
													},
													{
														"expression": {
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2332,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "7381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2334,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "7396:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2335,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2284,
																		"src": "7410:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2339,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:11"
													},
													{
														"expression": {
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2340,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "7851:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2341,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2237,
																	"src": "7860:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2342,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "7868:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2345,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:11"
													},
													{
														"expression": {
															"id": 2346,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "7896:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2235,
														"id": 2347,
														"nodeType": "Return",
														"src": "7889:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "3819:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "3830:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "3841:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:11"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "3885:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:11"
									},
									"scope": 3016,
									"src": "3803:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2392,
										"nodeType": "Block",
										"src": "8161:192:11",
										"statements": [
											{
												"assignments": [
													2366
												],
												"declarations": [
													{
														"constant": false,
														"id": 2366,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2392,
														"src": "8171:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2365,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2372,
												"initialValue": {
													"arguments": [
														{
															"id": 2368,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "8195:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2369,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "8198:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2370,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "8201:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2367,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2350,
															2393
														],
														"referencedDeclaration": 2350,
														"src": "8188:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2374,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2360,
																"src": "8244:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1973",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1973",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2373,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3015,
															"src": "8227:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1973_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2377,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2353,
																	"src": "8264:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2378,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "8267:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2379,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2357,
																	"src": "8270:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2376,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2389,
												"nodeType": "IfStatement",
												"src": "8223:101:11",
												"trueBody": {
													"id": 2388,
													"nodeType": "Block",
													"src": "8288:36:11",
													"statements": [
														{
															"expression": {
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2384,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2366,
																	"src": "8302:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2387,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2390,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2366,
													"src": "8340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2364,
												"id": 2391,
												"nodeType": "Return",
												"src": "8333:13:11"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "8067:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "8078:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "8089:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "8110:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1973",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2358,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1973,
														"src": "8110:8:11"
													},
													"referencedDeclaration": 1973,
													"src": "8110:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1973",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:11"
									},
									"returnParameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "8152:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:11"
									},
									"scope": 3016,
									"src": "8051:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "8644:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2401,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2396,
														"src": "8658:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2407,
												"nodeType": "IfStatement",
												"src": "8654:45:11",
												"trueBody": {
													"id": 2406,
													"nodeType": "Block",
													"src": "8666:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2400,
															"id": 2405,
															"nodeType": "Return",
															"src": "8680:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2409
												],
												"declarations": [
													{
														"constant": false,
														"id": 2409,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2504,
														"src": "9378:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2418,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2412,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2396,
																			"src": "9406:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2411,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2672,
																			2707
																		],
																		"referencedDeclaration": 2672,
																		"src": "9401:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2416,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:11"
											},
											{
												"id": 2503,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:11",
												"statements": [
													{
														"expression": {
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2419,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "9839:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2420,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2409,
																				"src": "9849:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2421,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2396,
																					"src": "9858:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2422,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2409,
																					"src": "9862:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2425,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2429,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:11"
													},
													{
														"expression": {
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2430,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "9888:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2431,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2409,
																				"src": "9898:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2432,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2396,
																					"src": "9907:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2433,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2409,
																					"src": "9911:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2436,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2440,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:11"
													},
													{
														"expression": {
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2441,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "9937:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2442,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2409,
																				"src": "9947:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2443,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2396,
																					"src": "9956:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2444,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2409,
																					"src": "9960:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2451,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:11"
													},
													{
														"expression": {
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2452,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "9986:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2453,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2409,
																				"src": "9996:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2456,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2454,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2396,
																					"src": "10005:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2455,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2409,
																					"src": "10009:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2458,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2462,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:11"
													},
													{
														"expression": {
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2463,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "10035:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2464,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2409,
																				"src": "10045:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2465,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2396,
																					"src": "10054:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2466,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2409,
																					"src": "10058:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2469,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2473,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:11"
													},
													{
														"expression": {
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2474,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "10084:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2475,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2409,
																				"src": "10094:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2476,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2396,
																					"src": "10103:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2477,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2409,
																					"src": "10107:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2480,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2484,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:11"
													},
													{
														"expression": {
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2485,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "10133:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2486,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2409,
																				"src": "10143:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2487,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2396,
																					"src": "10152:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2488,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2409,
																					"src": "10156:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2491,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2495,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2497,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "10193:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2498,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2396,
																		"src": "10201:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2499,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "10205:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2496,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "10189:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2400,
														"id": 2502,
														"nodeType": "Return",
														"src": "10182:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2394,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "8601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:11"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "8635:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:11"
									},
									"scope": 3016,
									"src": "8587:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2539,
										"nodeType": "Block",
										"src": "10405:164:11",
										"statements": [
											{
												"id": 2538,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:11",
												"statements": [
													{
														"assignments": [
															2517
														],
														"declarations": [
															{
																"constant": false,
																"id": 2517,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2538,
																"src": "10439:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2516,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2521,
														"initialValue": {
															"arguments": [
																{
																	"id": 2519,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2508,
																	"src": "10461:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2518,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2505,
																	2540
																],
																"referencedDeclaration": 2505,
																"src": "10456:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2522,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "10484:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2524,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2511,
																						"src": "10511:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1973",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1973",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2523,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3015,
																					"src": "10494:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1973_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2530,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2528,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2526,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2517,
																						"src": "10524:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2527,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2517,
																						"src": "10533:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2529,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2508,
																					"src": "10542:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2535,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2515,
														"id": 2537,
														"nodeType": "Return",
														"src": "10477:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2506,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "10343:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "10354:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1973",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2509,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1973,
														"src": "10354:8:11"
													},
													"referencedDeclaration": 1973,
													"src": "10354:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1973",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:11"
									},
									"returnParameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "10396:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:11"
									},
									"scope": 3016,
									"src": "10329:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2671,
										"nodeType": "Block",
										"src": "10760:922:11",
										"statements": [
											{
												"assignments": [
													2549
												],
												"declarations": [
													{
														"constant": false,
														"id": 2549,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2671,
														"src": "10770:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2551,
												"initialValue": {
													"hexValue": "30",
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:11"
											},
											{
												"id": 2668,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2552,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "10826:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2566,
														"nodeType": "IfStatement",
														"src": "10822:99:11",
														"trueBody": {
															"id": 2565,
															"nodeType": "Block",
															"src": "10844:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "10862:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2560,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:11"
																},
																{
																	"expression": {
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2561,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "10893:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2564,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2567,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "10938:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2581,
														"nodeType": "IfStatement",
														"src": "10934:96:11",
														"trueBody": {
															"id": 2580,
															"nodeType": "Block",
															"src": "10955:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2572,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "10973:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2575,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:11"
																},
																{
																	"expression": {
																		"id": 2578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2576,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "11003:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2579,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2582,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "11047:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2596,
														"nodeType": "IfStatement",
														"src": "11043:96:11",
														"trueBody": {
															"id": 2595,
															"nodeType": "Block",
															"src": "11064:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2587,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11082:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2590,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:11"
																},
																{
																	"expression": {
																		"id": 2593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2591,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "11112:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2594,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2597,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "11156:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2611,
														"nodeType": "IfStatement",
														"src": "11152:96:11",
														"trueBody": {
															"id": 2610,
															"nodeType": "Block",
															"src": "11173:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2602,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11191:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2605,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:11"
																},
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "11221:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2612,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "11265:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2626,
														"nodeType": "IfStatement",
														"src": "11261:93:11",
														"trueBody": {
															"id": 2625,
															"nodeType": "Block",
															"src": "11281:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11299:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2620,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:11"
																},
																{
																	"expression": {
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2621,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "11328:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2624,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "11371:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2641,
														"nodeType": "IfStatement",
														"src": "11367:93:11",
														"trueBody": {
															"id": 2640,
															"nodeType": "Block",
															"src": "11387:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2632,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11405:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2635,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:11"
																},
																{
																	"expression": {
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2636,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "11434:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2639,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2642,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "11477:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2656,
														"nodeType": "IfStatement",
														"src": "11473:93:11",
														"trueBody": {
															"id": 2655,
															"nodeType": "Block",
															"src": "11493:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2647,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "11511:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2650,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:11"
																},
																{
																	"expression": {
																		"id": 2653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2651,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "11540:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2654,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2657,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "11583:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2667,
														"nodeType": "IfStatement",
														"src": "11579:64:11",
														"trueBody": {
															"id": 2666,
															"nodeType": "Block",
															"src": "11599:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2662,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "11617:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2665,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2669,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2549,
													"src": "11669:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2547,
												"id": 2670,
												"nodeType": "Return",
												"src": "11662:13:11"
											}
										]
									},
									"documentation": {
										"id": 2541,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "10713:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:11"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "10751:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:11"
									},
									"scope": 3016,
									"src": "10699:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2706,
										"nodeType": "Block",
										"src": "11915:168:11",
										"statements": [
											{
												"id": 2705,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:11",
												"statements": [
													{
														"assignments": [
															2684
														],
														"declarations": [
															{
																"constant": false,
																"id": 2684,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2705,
																"src": "11949:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2683,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2688,
														"initialValue": {
															"arguments": [
																{
																	"id": 2686,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2675,
																	"src": "11971:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2685,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2672,
																	2707
																],
																"referencedDeclaration": 2672,
																"src": "11966:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2689,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2684,
																"src": "11998:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2691,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2678,
																						"src": "12025:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1973",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1973",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2690,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3015,
																					"src": "12008:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1973_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2695,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2693,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2694,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2684,
																						"src": "12043:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2696,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2675,
																					"src": "12052:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2702,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2682,
														"id": 2704,
														"nodeType": "Return",
														"src": "11991:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2673,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "11849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2678,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "11864:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1973",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2676,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1973,
														"src": "11864:8:11"
													},
													"referencedDeclaration": 1973,
													"src": "11864:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1973",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:11"
									},
									"returnParameters": {
										"id": 2682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "11906:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:11"
									},
									"scope": 3016,
									"src": "11835:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2835,
										"nodeType": "Block",
										"src": "12276:854:11",
										"statements": [
											{
												"assignments": [
													2716
												],
												"declarations": [
													{
														"constant": false,
														"id": 2716,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2835,
														"src": "12286:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2718,
												"initialValue": {
													"hexValue": "30",
													"id": 2717,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:11"
											},
											{
												"id": 2832,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2719,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "12342:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2735,
														"nodeType": "IfStatement",
														"src": "12338:103:11",
														"trueBody": {
															"id": 2734,
															"nodeType": "Block",
															"src": "12361:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2724,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12379:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2725,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2729,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:11"
																},
																{
																	"expression": {
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2730,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "12414:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2733,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2736,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "12458:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2752,
														"nodeType": "IfStatement",
														"src": "12454:103:11",
														"trueBody": {
															"id": 2751,
															"nodeType": "Block",
															"src": "12477:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2741,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12495:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2746,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:11"
																},
																{
																	"expression": {
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2747,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "12530:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2750,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2753,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "12574:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2769,
														"nodeType": "IfStatement",
														"src": "12570:103:11",
														"trueBody": {
															"id": 2768,
															"nodeType": "Block",
															"src": "12593:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12611:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2763,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:11"
																},
																{
																	"expression": {
																		"id": 2766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2764,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "12646:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2767,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2770,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "12690:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2786,
														"nodeType": "IfStatement",
														"src": "12686:100:11",
														"trueBody": {
															"id": 2785,
															"nodeType": "Block",
															"src": "12708:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2775,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12726:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2780,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:11"
																},
																{
																	"expression": {
																		"id": 2783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2781,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "12760:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2784,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "12803:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2803,
														"nodeType": "IfStatement",
														"src": "12799:100:11",
														"trueBody": {
															"id": 2802,
															"nodeType": "Block",
															"src": "12821:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2792,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12839:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2797,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:11"
																},
																{
																	"expression": {
																		"id": 2800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2798,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "12873:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2801,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2804,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "12916:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2820,
														"nodeType": "IfStatement",
														"src": "12912:100:11",
														"trueBody": {
															"id": 2819,
															"nodeType": "Block",
															"src": "12934:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2809,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2710,
																			"src": "12952:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2814,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:11"
																},
																{
																	"expression": {
																		"id": 2817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2815,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "12986:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2818,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2821,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "13029:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2831,
														"nodeType": "IfStatement",
														"src": "13025:66:11",
														"trueBody": {
															"id": 2830,
															"nodeType": "Block",
															"src": "13047:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2826,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "13065:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2829,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2833,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2716,
													"src": "13117:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2714,
												"id": 2834,
												"nodeType": "Return",
												"src": "13110:13:11"
											}
										]
									},
									"documentation": {
										"id": 2708,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "12229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:11"
									},
									"returnParameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "12267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:11"
									},
									"scope": 3016,
									"src": "12214:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "13365:170:11",
										"statements": [
											{
												"id": 2869,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:11",
												"statements": [
													{
														"assignments": [
															2848
														],
														"declarations": [
															{
																"constant": false,
																"id": 2848,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2869,
																"src": "13399:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2847,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2852,
														"initialValue": {
															"arguments": [
																{
																	"id": 2850,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "13422:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2849,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2836,
																	2871
																],
																"referencedDeclaration": 2836,
																"src": "13416:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2853,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "13449:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2855,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2842,
																						"src": "13476:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1973",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1973",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2854,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3015,
																					"src": "13459:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1973_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2859,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2857,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2858,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2848,
																						"src": "13495:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2860,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2839,
																					"src": "13504:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2866,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2846,
														"id": 2868,
														"nodeType": "Return",
														"src": "13442:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2837,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13299:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13314:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1973",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2840,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1973,
														"src": "13314:8:11"
													},
													"referencedDeclaration": 1973,
													"src": "13314:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1973",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:11"
									},
									"returnParameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:11"
									},
									"scope": 3016,
									"src": "13284:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2957,
										"nodeType": "Block",
										"src": "13855:600:11",
										"statements": [
											{
												"assignments": [
													2880
												],
												"declarations": [
													{
														"constant": false,
														"id": 2880,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2957,
														"src": "13865:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2879,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2882,
												"initialValue": {
													"hexValue": "30",
													"id": 2881,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:11"
											},
											{
												"id": 2954,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2874,
																	"src": "13921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2897,
														"nodeType": "IfStatement",
														"src": "13917:98:11",
														"trueBody": {
															"id": 2896,
															"nodeType": "Block",
															"src": "13939:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2888,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2874,
																			"src": "13957:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2891,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:11"
																},
																{
																	"expression": {
																		"id": 2894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2892,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "13988:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2895,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2898,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2874,
																	"src": "14032:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2912,
														"nodeType": "IfStatement",
														"src": "14028:95:11",
														"trueBody": {
															"id": 2911,
															"nodeType": "Block",
															"src": "14049:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2903,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2874,
																			"src": "14067:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2906,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:11"
																},
																{
																	"expression": {
																		"id": 2909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2907,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "14097:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2910,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2874,
																	"src": "14140:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2927,
														"nodeType": "IfStatement",
														"src": "14136:95:11",
														"trueBody": {
															"id": 2926,
															"nodeType": "Block",
															"src": "14157:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2918,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2874,
																			"src": "14175:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2921,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:11"
																},
																{
																	"expression": {
																		"id": 2924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2922,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "14205:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2925,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2928,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2874,
																	"src": "14248:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2942,
														"nodeType": "IfStatement",
														"src": "14244:95:11",
														"trueBody": {
															"id": 2941,
															"nodeType": "Block",
															"src": "14265:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2933,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2874,
																			"src": "14283:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2936,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:11"
																},
																{
																	"expression": {
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2937,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "14313:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2940,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2943,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2874,
																	"src": "14356:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2953,
														"nodeType": "IfStatement",
														"src": "14352:64:11",
														"trueBody": {
															"id": 2952,
															"nodeType": "Block",
															"src": "14372:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2948,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "14390:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2951,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2955,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2880,
													"src": "14442:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2878,
												"id": 2956,
												"nodeType": "Return",
												"src": "14435:13:11"
											}
										]
									},
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "13808:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:11"
									},
									"returnParameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "13846:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:11"
									},
									"scope": 3016,
									"src": "13792:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "14692:177:11",
										"statements": [
											{
												"id": 2994,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:11",
												"statements": [
													{
														"assignments": [
															2970
														],
														"declarations": [
															{
																"constant": false,
																"id": 2970,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2994,
																"src": "14726:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2969,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2974,
														"initialValue": {
															"arguments": [
																{
																	"id": 2972,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2961,
																	"src": "14750:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2971,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2958,
																	2996
																],
																"referencedDeclaration": 2958,
																"src": "14743:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2975,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "14777:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2977,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2964,
																						"src": "14804:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1973",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1973",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2976,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3015,
																					"src": "14787:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1973_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2984,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2979,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2982,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2980,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2970,
																									"src": "14823:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2981,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2983,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2985,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2961,
																					"src": "14838:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2991,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2968,
														"id": 2993,
														"nodeType": "Return",
														"src": "14770:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2959,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "14626:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "14641:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1973",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2962,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1973,
														"src": "14641:8:11"
													},
													"referencedDeclaration": 1973,
													"src": "14641:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1973",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:11"
									},
									"returnParameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "14683:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:11"
									},
									"scope": 3016,
									"src": "14610:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3014,
										"nodeType": "Block",
										"src": "15067:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3007,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3000,
																	"src": "15090:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1973",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1973",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3005,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3004,
												"id": 3013,
												"nodeType": "Return",
												"src": "15077:31:11"
											}
										]
									},
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3015,
												"src": "15019:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1973",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2999,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2998,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1973,
														"src": "15019:8:11"
													},
													"referencedDeclaration": 1973,
													"src": "15019:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1973",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:11"
									},
									"returnParameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3015,
												"src": "15061:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:11"
									},
									"scope": 3016,
									"src": "14993:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3017,
							"src": "203:14914:11",
							"usedErrors": [
								1968
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:11"
				},
				"id": 11
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.2/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3121
						]
					},
					"id": 3122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3018,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3019,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:12",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3121,
							"linearizedBaseContracts": [
								3121
							],
							"name": "SignedMath",
							"nameLocation": "224:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3036,
										"nodeType": "Block",
										"src": "376:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3029,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3022,
															"src": "393:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3030,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3024,
															"src": "397:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3033,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "405:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:12",
													"trueExpression": {
														"id": 3032,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3022,
														"src": "401:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3028,
												"id": 3035,
												"nodeType": "Return",
												"src": "386:20:12"
											}
										]
									},
									"documentation": {
										"id": 3020,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:12",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "325:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3021,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "335:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3023,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:12"
									},
									"returnParameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "368:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3026,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:12"
									},
									"scope": 3121,
									"src": "312:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3054,
										"nodeType": "Block",
										"src": "555:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3047,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3040,
															"src": "572:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3048,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3042,
															"src": "576:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3051,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3042,
														"src": "584:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:12",
													"trueExpression": {
														"id": 3050,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3040,
														"src": "580:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3046,
												"id": 3053,
												"nodeType": "Return",
												"src": "565:20:12"
											}
										]
									},
									"documentation": {
										"id": 3038,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:12",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3055,
												"src": "504:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3039,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3042,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3055,
												"src": "514:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3041,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:12"
									},
									"returnParameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3055,
												"src": "547:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3044,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:12"
									},
									"scope": 3121,
									"src": "491:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3098,
										"nodeType": "Block",
										"src": "797:162:12",
										"statements": [
											{
												"assignments": [
													3066
												],
												"declarations": [
													{
														"constant": false,
														"id": 3066,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 3098,
														"src": "859:8:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3065,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3079,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3067,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3058,
																	"src": "871:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3068,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3060,
																	"src": "875:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3070,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3071,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3058,
																				"src": "882:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3072,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3060,
																				"src": "886:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3074,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3077,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3080,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "911:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3085,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3066,
																						"src": "931:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3084,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3083,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3081,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3090,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3058,
																				"src": "945:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3091,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3060,
																				"src": "949:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3093,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3095,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3064,
												"id": 3097,
												"nodeType": "Return",
												"src": "904:48:12"
											}
										]
									},
									"documentation": {
										"id": 3056,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:12",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3058,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "746:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3057,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3060,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "756:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3059,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:12"
									},
									"returnParameters": {
										"id": 3064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "789:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3062,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:12"
									},
									"scope": 3121,
									"src": "729:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3119,
										"nodeType": "Block",
										"src": "1103:158:12",
										"statements": [
											{
												"id": 3118,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3109,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3102,
																			"src": "1228:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:12",
																		"subExpression": {
																			"id": 3113,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3102,
																			"src": "1242:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:12",
																	"trueExpression": {
																		"id": 3112,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3102,
																		"src": "1237:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3107,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3106,
														"id": 3117,
														"nodeType": "Return",
														"src": "1213:31:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3100,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:12",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "1061:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3101,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:12"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "1094:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:12"
									},
									"scope": 3121,
									"src": "1048:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3122,
							"src": "216:1047:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:12"
				},
				"id": 12
			}
		}
	}
}